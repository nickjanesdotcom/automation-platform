{
  "version": 3,
  "sources": ["../src/config.ts", "../src/shared/utils/logger.ts", "../src/shared/utils/retry.ts", "../src/shared/services/slack.ts", "../node_modules/svix/src/models/applicationIn.ts", "../node_modules/svix/src/models/applicationOut.ts", "../node_modules/svix/src/models/applicationPatch.ts", "../node_modules/svix/src/models/listResponseApplicationOut.ts", "../node_modules/svix/src/util.ts", "../node_modules/svix/node_modules/uuid/dist/esm-node/max.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/nil.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/regex.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/validate.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/parse.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/stringify.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/rng.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v1.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v1ToV6.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v35.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/md5.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v3.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/native.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v4.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/sha1.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v5.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v6.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v6ToV1.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/v7.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/version.js", "../node_modules/svix/node_modules/uuid/dist/esm-node/index.js", "../node_modules/svix/src/request.ts", "../node_modules/svix/src/api/application.ts", "../node_modules/svix/src/models/appPortalCapability.ts", "../node_modules/svix/src/models/appPortalAccessIn.ts", "../node_modules/svix/src/models/appPortalAccessOut.ts", "../node_modules/svix/src/models/applicationTokenExpireIn.ts", "../node_modules/svix/src/models/dashboardAccessOut.ts", "../node_modules/svix/src/api/authentication.ts", "../node_modules/svix/src/models/backgroundTaskStatus.ts", "../node_modules/svix/src/models/backgroundTaskType.ts", "../node_modules/svix/src/models/backgroundTaskOut.ts", "../node_modules/svix/src/models/listResponseBackgroundTaskOut.ts", "../node_modules/svix/src/api/backgroundTask.ts", "../node_modules/svix/src/models/endpointHeadersIn.ts", "../node_modules/svix/src/models/endpointHeadersOut.ts", "../node_modules/svix/src/models/endpointHeadersPatchIn.ts", "../node_modules/svix/src/models/endpointIn.ts", "../node_modules/svix/src/models/endpointOut.ts", "../node_modules/svix/src/models/endpointPatch.ts", "../node_modules/svix/src/models/endpointSecretOut.ts", "../node_modules/svix/src/models/endpointSecretRotateIn.ts", "../node_modules/svix/src/models/endpointStats.ts", "../node_modules/svix/src/models/endpointTransformationIn.ts", "../node_modules/svix/src/models/endpointTransformationOut.ts", "../node_modules/svix/src/models/endpointTransformationPatch.ts", "../node_modules/svix/src/models/endpointUpdate.ts", "../node_modules/svix/src/models/eventExampleIn.ts", "../node_modules/svix/src/models/listResponseEndpointOut.ts", "../node_modules/svix/src/models/messageOut.ts", "../node_modules/svix/src/models/recoverIn.ts", "../node_modules/svix/src/models/recoverOut.ts", "../node_modules/svix/src/models/replayIn.ts", "../node_modules/svix/src/models/replayOut.ts", "../node_modules/svix/src/api/endpoint.ts", "../node_modules/svix/src/models/connectorKind.ts", "../node_modules/svix/src/models/connectorIn.ts", "../node_modules/svix/src/models/eventTypeIn.ts", "../node_modules/svix/src/models/environmentIn.ts", "../node_modules/svix/src/models/connectorOut.ts", "../node_modules/svix/src/models/eventTypeOut.ts", "../node_modules/svix/src/models/environmentOut.ts", "../node_modules/svix/src/api/environment.ts", "../node_modules/svix/src/models/eventTypeImportOpenApiIn.ts", "../node_modules/svix/src/models/eventTypeFromOpenApi.ts", "../node_modules/svix/src/models/eventTypeImportOpenApiOutData.ts", "../node_modules/svix/src/models/eventTypeImportOpenApiOut.ts", "../node_modules/svix/src/models/eventTypePatch.ts", "../node_modules/svix/src/models/eventTypeUpdate.ts", "../node_modules/svix/src/models/listResponseEventTypeOut.ts", "../node_modules/svix/src/api/eventType.ts", "../node_modules/svix/src/api/health.ts", "../node_modules/svix/src/models/ingestSourceConsumerPortalAccessIn.ts", "../node_modules/svix/src/models/ingestEndpointHeadersIn.ts", "../node_modules/svix/src/models/ingestEndpointHeadersOut.ts", "../node_modules/svix/src/models/ingestEndpointIn.ts", "../node_modules/svix/src/models/ingestEndpointOut.ts", "../node_modules/svix/src/models/ingestEndpointSecretIn.ts", "../node_modules/svix/src/models/ingestEndpointSecretOut.ts", "../node_modules/svix/src/models/ingestEndpointTransformationOut.ts", "../node_modules/svix/src/models/ingestEndpointTransformationPatch.ts", "../node_modules/svix/src/models/ingestEndpointUpdate.ts", "../node_modules/svix/src/models/listResponseIngestEndpointOut.ts", "../node_modules/svix/src/api/ingestEndpoint.ts", "../node_modules/svix/src/models/adobeSignConfig.ts", "../node_modules/svix/src/models/airwallexConfig.ts", "../node_modules/svix/src/models/checkbookConfig.ts", "../node_modules/svix/src/models/cronConfig.ts", "../node_modules/svix/src/models/docusignConfig.ts", "../node_modules/svix/src/models/easypostConfig.ts", "../node_modules/svix/src/models/githubConfig.ts", "../node_modules/svix/src/models/hubspotConfig.ts", "../node_modules/svix/src/models/orumIoConfig.ts", "../node_modules/svix/src/models/pandaDocConfig.ts", "../node_modules/svix/src/models/portIoConfig.ts", "../node_modules/svix/src/models/rutterConfig.ts", "../node_modules/svix/src/models/segmentConfig.ts", "../node_modules/svix/src/models/shopifyConfig.ts", "../node_modules/svix/src/models/slackConfig.ts", "../node_modules/svix/src/models/stripeConfig.ts", "../node_modules/svix/src/models/svixConfig.ts", "../node_modules/svix/src/models/telnyxConfig.ts", "../node_modules/svix/src/models/vapiConfig.ts", "../node_modules/svix/src/models/veriffConfig.ts", "../node_modules/svix/src/models/zoomConfig.ts", "../node_modules/svix/src/models/ingestSourceIn.ts", "../node_modules/svix/src/models/adobeSignConfigOut.ts", "../node_modules/svix/src/models/airwallexConfigOut.ts", "../node_modules/svix/src/models/checkbookConfigOut.ts", "../node_modules/svix/src/models/docusignConfigOut.ts", "../node_modules/svix/src/models/easypostConfigOut.ts", "../node_modules/svix/src/models/githubConfigOut.ts", "../node_modules/svix/src/models/hubspotConfigOut.ts", "../node_modules/svix/src/models/orumIoConfigOut.ts", "../node_modules/svix/src/models/pandaDocConfigOut.ts", "../node_modules/svix/src/models/portIoConfigOut.ts", "../node_modules/svix/src/models/rutterConfigOut.ts", "../node_modules/svix/src/models/segmentConfigOut.ts", "../node_modules/svix/src/models/shopifyConfigOut.ts", "../node_modules/svix/src/models/slackConfigOut.ts", "../node_modules/svix/src/models/stripeConfigOut.ts", "../node_modules/svix/src/models/svixConfigOut.ts", "../node_modules/svix/src/models/telnyxConfigOut.ts", "../node_modules/svix/src/models/vapiConfigOut.ts", "../node_modules/svix/src/models/veriffConfigOut.ts", "../node_modules/svix/src/models/zoomConfigOut.ts", "../node_modules/svix/src/models/ingestSourceOut.ts", "../node_modules/svix/src/models/listResponseIngestSourceOut.ts", "../node_modules/svix/src/models/rotateTokenOut.ts", "../node_modules/svix/src/api/ingestSource.ts", "../node_modules/svix/src/api/ingest.ts", "../node_modules/svix/src/models/integrationIn.ts", "../node_modules/svix/src/models/integrationKeyOut.ts", "../node_modules/svix/src/models/integrationOut.ts", "../node_modules/svix/src/models/integrationUpdate.ts", "../node_modules/svix/src/models/listResponseIntegrationOut.ts", "../node_modules/svix/src/api/integration.ts", "../node_modules/svix/src/models/expungeAllContentsOut.ts", "../node_modules/svix/src/models/listResponseMessageOut.ts", "../node_modules/svix/src/models/pollingEndpointConsumerSeekIn.ts", "../node_modules/svix/src/models/pollingEndpointConsumerSeekOut.ts", "../node_modules/svix/src/models/pollingEndpointMessageOut.ts", "../node_modules/svix/src/models/pollingEndpointOut.ts", "../node_modules/svix/src/api/messagePoller.ts", "../node_modules/svix/src/models/messageIn.ts", "../node_modules/svix/src/api/message.ts", "../node_modules/svix/src/models/messageStatus.ts", "../node_modules/svix/src/models/messageStatusText.ts", "../node_modules/svix/src/models/endpointMessageOut.ts", "../node_modules/svix/src/models/listResponseEndpointMessageOut.ts", "../node_modules/svix/src/models/messageAttemptTriggerType.ts", "../node_modules/svix/src/models/messageAttemptOut.ts", "../node_modules/svix/src/models/listResponseMessageAttemptOut.ts", "../node_modules/svix/src/models/messageEndpointOut.ts", "../node_modules/svix/src/models/listResponseMessageEndpointOut.ts", "../node_modules/svix/src/api/messageAttempt.ts", "../node_modules/svix/src/models/operationalWebhookEndpointOut.ts", "../node_modules/svix/src/models/listResponseOperationalWebhookEndpointOut.ts", "../node_modules/svix/src/models/operationalWebhookEndpointHeadersIn.ts", "../node_modules/svix/src/models/operationalWebhookEndpointHeadersOut.ts", "../node_modules/svix/src/models/operationalWebhookEndpointIn.ts", "../node_modules/svix/src/models/operationalWebhookEndpointSecretIn.ts", "../node_modules/svix/src/models/operationalWebhookEndpointSecretOut.ts", "../node_modules/svix/src/models/operationalWebhookEndpointUpdate.ts", "../node_modules/svix/src/api/operationalWebhookEndpoint.ts", "../node_modules/svix/src/api/operationalWebhook.ts", "../node_modules/svix/src/models/aggregateEventTypesOut.ts", "../node_modules/svix/src/models/appUsageStatsIn.ts", "../node_modules/svix/src/models/appUsageStatsOut.ts", "../node_modules/svix/src/api/statistics.ts", "../node_modules/svix/src/HttpErrors.ts", "../node_modules/svix/src/timing_safe_equal.ts", "../node_modules/@stablelib/base64/base64.ts", "../node_modules/fast-sha256/sha256.js", "../node_modules/svix/src/webhook.ts", "../node_modules/svix/src/models/endpointDisabledTrigger.ts", "../node_modules/svix/src/models/ordering.ts", "../node_modules/svix/src/models/statusCodeClass.ts", "../node_modules/svix/src/models/index.ts", "../node_modules/svix/src/index.ts", "../node_modules/hono/dist/compose.js", "../node_modules/hono/dist/request/constants.js", "../node_modules/hono/dist/utils/body.js", "../node_modules/hono/dist/utils/url.js", "../node_modules/hono/dist/request.js", "../node_modules/hono/dist/utils/html.js", "../node_modules/hono/dist/context.js", "../node_modules/hono/dist/router.js", "../node_modules/hono/dist/utils/constants.js", "../node_modules/hono/dist/hono-base.js", "../node_modules/hono/dist/router/reg-exp-router/matcher.js", "../node_modules/hono/dist/router/reg-exp-router/node.js", "../node_modules/hono/dist/router/reg-exp-router/trie.js", "../node_modules/hono/dist/router/reg-exp-router/router.js", "../node_modules/hono/dist/router/smart-router/router.js", "../node_modules/hono/dist/router/trie-router/node.js", "../node_modules/hono/dist/router/trie-router/router.js", "../node_modules/hono/dist/hono.js", "../node_modules/hono/dist/middleware/cors/index.js", "../node_modules/hono/dist/utils/color.js", "../node_modules/hono/dist/middleware/logger/index.js", "../src/app.ts", "../src/automations/lead-management/config.ts", "../src/automations/lead-management/webhooks/gmail.ts", "../src/shared/utils/monitor.ts", "../src/shared/services/notion.ts", "../src/automations/lead-management/workflows/process-lead.ts", "../src/shared/utils/parser.ts", "../src/automations/lead-management/workflows/manage-company.ts", "../src/automations/lead-management/workflows/manage-contact.ts", "../src/automations/lead-management/webhooks/calcom.ts", "../src/automations/lead-management/workflows/handle-booking.ts", "../src/shared/utils/format.ts", "../src/automations/lead-management/webhooks/slack.ts", "../src/shared/services/email.ts", "../src/automations/lead-management/workflows/accept-lead.ts", "../src/automations/lead-management/webhooks/test.ts", "../src/automations/lead-management/webhooks/notion-marketplace.ts", "../src/shared/services/attio.ts", "../node_modules/resend/dist/index.mjs", "../src/shared/services/resend.ts", "../src/shared/middleware/auth.ts", "../src/automations/lead-management/index.ts", "../src/core/automation-registry.ts", "_entry.ts"],
  "sourcesContent": ["/**\n * Global platform configuration.\n * Shared settings across all automations.\n */\n\nexport const config = {\n  env: process.env.NODE_ENV || 'development',\n  port: parseInt(process.env.PORT || '8787'),\n\n  // Shared service credentials\n  notion: {\n    apiKey: process.env.NOTION_API_KEY!,\n  },\n\n  slack: {\n    botToken: process.env.SLACK_BOT_TOKEN!,\n    signingSecret: process.env.SLACK_SIGNING_SECRET || '',\n  },\n\n  email: {\n    smtp: {\n      host: process.env.SMTP_HOST || 'smtp.gmail.com',\n      port: parseInt(process.env.SMTP_PORT || '587'),\n      user: process.env.SMTP_USER || '',\n      pass: process.env.SMTP_PASS || '',\n    },\n    from: process.env.FROM_EMAIL || '',\n    fromName: process.env.FROM_NAME || 'Automation Platform',\n  },\n\n  resend: {\n    apiKey: process.env.RESEND_API_KEY || '',\n    fromEmail: process.env.RESEND_FROM_EMAIL || '',\n  },\n\n  attio: {\n    apiKey: process.env.ATTIO_API_KEY || '',\n    marketplaceListId: process.env.ATTIO_MARKETPLACE_LIST_ID || '',\n  },\n\n  observability: {\n    axiom: {\n      token: process.env.AXIOM_TOKEN || '',\n      dataset: process.env.AXIOM_DATASET || 'automation-platform',\n    },\n    sentry: {\n      dsn: process.env.SENTRY_DSN || '',\n    },\n  },\n} as const;\n\n// Validate required variables\nif (!config.notion.apiKey) {\n  throw new Error('NOTION_API_KEY is required');\n}\n\nif (!config.slack.botToken) {\n  throw new Error('SLACK_BOT_TOKEN is required');\n}\n", "/**\n * Centralized logging with Axiom integration.\n */\n\nimport { Axiom } from '@axiomhq/js';\nimport { config } from '../../config.js';\nimport type { LogContext, LogLevel } from '../../types.js';\n\n// Initialize Axiom client\nlet axiom: Axiom | null = null;\n\nif (config.observability.axiom.token) {\n  axiom = new Axiom({\n    token: config.observability.axiom.token,\n  });\n}\n\n/**\n * Log a message with context\n */\nfunction log(level: LogLevel, message: string, context: LogContext = {}) {\n  const timestamp = new Date().toISOString();\n  const logData = {\n    timestamp,\n    level,\n    message,\n    environment: config.env,\n    ...context,\n  };\n\n  // Console output (development)\n  if (config.env === 'development') {\n    const emoji =\n      level === 'error' ? '\u274C' : level === 'warn' ? '\u26A0\uFE0F' : level === 'debug' ? '\uD83D\uDD0D' : '\u2139\uFE0F';\n    console.log(`${emoji} [${level.toUpperCase()}] ${message}`, context);\n  }\n\n  // Send to Axiom (if configured)\n  if (axiom) {\n    try {\n      axiom.ingest(config.observability.axiom.dataset, [logData]);\n    } catch (error) {\n      console.error('Failed to send log to Axiom:', error);\n    }\n  }\n}\n\n/**\n * Log info message\n */\nexport function info(message: string, context: LogContext = {}) {\n  log('info', message, context);\n}\n\n/**\n * Log warning message\n */\nexport function warn(message: string, context: LogContext = {}) {\n  log('warn', message, context);\n}\n\n/**\n * Log error message\n */\nexport function error(message: string, errorObj?: Error | unknown, context: LogContext = {}) {\n  const errorContext = errorObj instanceof Error\n    ? {\n        error: errorObj.message,\n        stack: errorObj.stack,\n      }\n    : { error: String(errorObj) };\n\n  log('error', message, { ...context, ...errorContext });\n}\n\n/**\n * Log debug message\n */\nexport function debug(message: string, context: LogContext = {}) {\n  if (config.env === 'development') {\n    log('debug', message, context);\n  }\n}\n\n/**\n * Flush logs (for serverless environments)\n */\nexport async function flush() {\n  if (axiom) {\n    try {\n      await axiom.flush();\n    } catch (error) {\n      console.error('Failed to flush logs:', error);\n    }\n  }\n}\n\nexport const logger = {\n  info,\n  warn,\n  error,\n  debug,\n  flush,\n};\n", "/**\n * Retry logic with exponential backoff using p-retry.\n */\n\nimport pRetry from 'p-retry';\nimport { logger } from './logger.js';\n\nexport interface RetryOptions {\n  retries?: number;\n  minTimeout?: number;\n  maxTimeout?: number;\n  onFailedAttempt?: (error: any) => void;\n}\n\n/**\n * Retry a function with exponential backoff\n */\nexport async function withRetry<T>(\n  fn: () => Promise<T>,\n  options: RetryOptions = {}\n): Promise<T> {\n  const {\n    retries = 3,\n    minTimeout = 1000,\n    maxTimeout = 5000,\n    onFailedAttempt,\n  } = options;\n\n  return pRetry(fn, {\n    retries,\n    minTimeout,\n    maxTimeout,\n    onFailedAttempt: (error) => {\n      logger.warn(`Retry attempt ${error.attemptNumber} failed`, {\n        error: error.message,\n        retriesLeft: error.retriesLeft,\n      });\n\n      if (onFailedAttempt) {\n        onFailedAttempt(error);\n      }\n    },\n  });\n}\n", "/**\n * Generic Slack service used by all automations.\n */\n\nimport { WebClient } from '@slack/web-api';\nimport { config } from '../../config.js';\nimport { withRetry } from '../utils/retry.js';\nimport { logger } from '../utils/logger.js';\n\nconst slack = new WebClient(config.slack.botToken);\n\n/**\n * Send a message to a channel\n */\nexport async function sendMessage(channel: string, text: string, blocks?: any[]) {\n  logger.info('Sending Slack message', { channel });\n\n  const result = await withRetry(() =>\n    slack.chat.postMessage({\n      channel,\n      text,\n      blocks,\n    })\n  );\n\n  return {\n    ts: result.ts!,\n    channel: result.channel!,\n  };\n}\n\n/**\n * Send a threaded reply\n */\nexport async function sendThreadReply(\n  channel: string,\n  threadTs: string,\n  text: string,\n  blocks?: any[]\n) {\n  logger.info('Sending Slack thread reply', { channel, threadTs });\n\n  return withRetry(() =>\n    slack.chat.postMessage({\n      channel,\n      thread_ts: threadTs,\n      text,\n      blocks,\n    })\n  );\n}\n\n/**\n * Update a message\n */\nexport async function updateMessage(\n  channel: string,\n  ts: string,\n  text: string,\n  blocks?: any[]\n) {\n  logger.info('Updating Slack message', { channel, ts });\n\n  return withRetry(() =>\n    slack.chat.update({\n      channel,\n      ts,\n      text,\n      blocks,\n    })\n  );\n}\n\n/**\n * Send alert to alerts channel\n */\nexport async function sendAlert(\n  title: string,\n  message: string,\n  severity: 'info' | 'warning' | 'error' = 'error'\n) {\n  const emoji = severity === 'error' ? '\uD83D\uDEA8' : severity === 'warning' ? '\u26A0\uFE0F' : '\u2139\uFE0F';\n\n  // Use a dedicated alerts channel if configured\n  const alertsChannel = process.env.SLACK_ALERTS_CHANNEL_ID || config.slack.botToken;\n\n  return sendMessage(alertsChannel, `${emoji} ${title}`, [\n    {\n      type: 'header',\n      text: {\n        type: 'plain_text',\n        text: `${emoji} ${title}`,\n      },\n    },\n    {\n      type: 'section',\n      text: {\n        type: 'mrkdwn',\n        text: message,\n      },\n    },\n  ]);\n}\n\n/**\n * Send a direct message to a user\n */\nexport async function sendDM(userId: string, text: string, blocks?: any[]) {\n  logger.info('Sending Slack DM', { userId });\n\n  // Open a conversation with the user\n  const conversation = await slack.conversations.open({\n    users: userId,\n  });\n\n  if (!conversation.channel?.id) {\n    throw new Error('Failed to open conversation');\n  }\n\n  return sendMessage(conversation.channel.id, text, blocks);\n}\n\n/**\n * Get user info\n */\nexport async function getUserInfo(userId: string) {\n  return withRetry(() => slack.users.info({ user: userId }));\n}\n\n/**\n * Add reaction to message\n */\nexport async function addReaction(channel: string, timestamp: string, emoji: string) {\n  return withRetry(() =>\n    slack.reactions.add({\n      channel,\n      timestamp,\n      name: emoji,\n    })\n  );\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface ApplicationIn {\n  metadata?: { [key: string]: string };\n  name: string;\n  rateLimit?: number | null;\n  /** Optional unique identifier for the application. */\n  uid?: string | null;\n}\n\nexport const ApplicationInSerializer = {\n  _fromJsonObject(object: any): ApplicationIn {\n    return {\n      metadata: object[\"metadata\"],\n      name: object[\"name\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n    };\n  },\n\n  _toJsonObject(self: ApplicationIn): any {\n    return {\n      metadata: self.metadata,\n      name: self.name,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface ApplicationOut {\n  createdAt: Date;\n  /** The Application's ID. */\n  id: string;\n  metadata: { [key: string]: string };\n  name: string;\n  rateLimit?: number | null;\n  /** The Application's UID. */\n  uid?: string | null;\n  updatedAt: Date;\n}\n\nexport const ApplicationOutSerializer = {\n  _fromJsonObject(object: any): ApplicationOut {\n    return {\n      createdAt: new Date(object[\"createdAt\"]),\n      id: object[\"id\"],\n      metadata: object[\"metadata\"],\n      name: object[\"name\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n    };\n  },\n\n  _toJsonObject(self: ApplicationOut): any {\n    return {\n      createdAt: self.createdAt,\n      id: self.id,\n      metadata: self.metadata,\n      name: self.name,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n      updatedAt: self.updatedAt,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface ApplicationPatch {\n  metadata?: { [key: string]: string };\n  name?: string;\n  rateLimit?: number | null;\n  /** The Application's UID. */\n  uid?: string | null;\n}\n\nexport const ApplicationPatchSerializer = {\n  _fromJsonObject(object: any): ApplicationPatch {\n    return {\n      metadata: object[\"metadata\"],\n      name: object[\"name\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n    };\n  },\n\n  _toJsonObject(self: ApplicationPatch): any {\n    return {\n      metadata: self.metadata,\n      name: self.name,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { ApplicationOut, ApplicationOutSerializer } from \"./applicationOut\";\n\nexport interface ListResponseApplicationOut {\n  data: ApplicationOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseApplicationOutSerializer = {\n  _fromJsonObject(object: any): ListResponseApplicationOut {\n    return {\n      data: object[\"data\"].map((item: ApplicationOut) =>\n        ApplicationOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseApplicationOut): any {\n    return {\n      data: self.data.map((item) => ApplicationOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "export interface PostOptions {\n  idempotencyKey?: string;\n}\n\nexport class ApiException<T> extends Error {\n  public headers: Record<string, string> = {};\n\n  public constructor(\n    public code: number,\n    public body: T,\n    headers: Headers\n  ) {\n    super(`HTTP-Code: ${code}\\nHeaders: ${JSON.stringify(headers)}`);\n\n    headers.forEach((value: string, name: string) => {\n      this.headers[name] = value;\n    });\n  }\n}\n\nexport type XOR<T, U> =\n  | (T & { [K in keyof U]?: never })\n  | (U & { [K in keyof T]?: never });\n", "export default 'ffffffff-ffff-ffff-ffff-ffffffffffff';", "export default '00000000-0000-0000-0000-000000000000';", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;", "import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;", "import validate from './validate.js';\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  let v;\n  const arr = new Uint8Array(16);\n\n  // Parse ########-....-....-....-............\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff;\n\n  // Parse ........-####-....-....-............\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff;\n\n  // Parse ........-....-####-....-............\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff;\n\n  // Parse ........-....-....-####-............\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff;\n\n  // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\nexport default parse;", "import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "import crypto from 'node:crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\nlet _clockseq;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node;\n  let clockseq = options.clockseq;\n\n  // v1 only: Use cached `node` and `clockseq` values\n  if (!options._v6) {\n    if (!node) {\n      node = _nodeId;\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq;\n    }\n  }\n\n  // Handle cases where we need entropy.  We do this lazily to minimize issues\n  // related to insufficient system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    // Randomize node\n    if (node == null) {\n      node = [seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n\n      // v1 only: cache node value for reuse\n      if (!_nodeId && !options._v6) {\n        // per RFC4122 4.5: Set MAC multicast bit (v1 only)\n        node[0] |= 0x01; // Set multicast bit\n\n        _nodeId = node;\n      }\n    }\n\n    // Randomize clockseq\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      if (_clockseq === undefined && !options._v6) {\n        _clockseq = clockseq;\n      }\n    }\n  }\n\n  // v1 & v6 timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so time is\n  // handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || unsafeStringify(b);\n}\nexport default v1;", "import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * Convert a v1 UUID to a v6 UUID\n *\n * @param {string|Uint8Array} uuid - The v1 UUID to convert to v6\n * @returns {string|Uint8Array} The v6 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nexport default function v1ToV6(uuid) {\n  const v1Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n  const v6Bytes = _v1ToV6(v1Bytes);\n  return typeof uuid === 'string' ? unsafeStringify(v6Bytes) : v6Bytes;\n}\n\n// Do the field transformation needed for v1 -> v6\nfunction _v1ToV6(v1Bytes, randomize = false) {\n  return Uint8Array.of((v1Bytes[6] & 0x0f) << 4 | v1Bytes[7] >> 4 & 0x0f, (v1Bytes[7] & 0x0f) << 4 | (v1Bytes[4] & 0xf0) >> 4, (v1Bytes[4] & 0x0f) << 4 | (v1Bytes[5] & 0xf0) >> 4, (v1Bytes[5] & 0x0f) << 4 | (v1Bytes[0] & 0xf0) >> 4, (v1Bytes[0] & 0x0f) << 4 | (v1Bytes[1] & 0xf0) >> 4, (v1Bytes[1] & 0x0f) << 4 | (v1Bytes[2] & 0xf0) >> 4, 0x60 | v1Bytes[2] & 0x0f, v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // For CommonJS default export support\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "import crypto from 'node:crypto';\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return crypto.createHash('md5').update(bytes).digest();\n}\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "import crypto from 'node:crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;", "import crypto from 'node:crypto';\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n  return crypto.createHash('sha1').update(bytes).digest();\n}\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import { unsafeStringify } from './stringify.js';\nimport v1 from './v1.js';\nimport v1ToV6 from './v1ToV6.js';\n\n/**\n *\n * @param {object} options\n * @param {Uint8Array=} buf\n * @param {number=} offset\n * @returns\n */\nexport default function v6(options = {}, buf, offset = 0) {\n  // v6 is v1 with different field layout, so we start with a v1 UUID, albeit\n  // with slightly different behavior around how the clock_seq and node fields\n  // are randomized, which is why we call v1 with _v6: true.\n  let bytes = v1({\n    ...options,\n    _v6: true\n  }, new Uint8Array(16));\n\n  // Reorder the fields to v6 layout.\n  bytes = v1ToV6(bytes);\n\n  // Return as a byte array if requested\n  if (buf) {\n    for (let i = 0; i < 16; i++) {\n      buf[offset + i] = bytes[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(bytes);\n}", "import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * Convert a v6 UUID to a v1 UUID\n *\n * @param {string|Uint8Array} uuid - The v6 UUID to convert to v6\n * @returns {string|Uint8Array} The v1 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nexport default function v6ToV1(uuid) {\n  const v6Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n  const v1Bytes = _v6ToV1(v6Bytes);\n  return typeof uuid === 'string' ? unsafeStringify(v1Bytes) : v1Bytes;\n}\n\n// Do the field transformation needed for v6 -> v1\nfunction _v6ToV1(v6Bytes) {\n  return Uint8Array.of((v6Bytes[3] & 0x0f) << 4 | v6Bytes[4] >> 4 & 0x0f, (v6Bytes[4] & 0x0f) << 4 | (v6Bytes[5] & 0xf0) >> 4, (v6Bytes[5] & 0x0f) << 4 | v6Bytes[6] & 0x0f, v6Bytes[7], (v6Bytes[1] & 0x0f) << 4 | (v6Bytes[2] & 0xf0) >> 4, (v6Bytes[2] & 0x0f) << 4 | (v6Bytes[3] & 0xf0) >> 4, 0x10 | (v6Bytes[0] & 0xf0) >> 4, (v6Bytes[0] & 0x0f) << 4 | (v6Bytes[1] & 0xf0) >> 4, v6Bytes[8], v6Bytes[9], v6Bytes[10], v6Bytes[11], v6Bytes[12], v6Bytes[13], v6Bytes[14], v6Bytes[15]);\n}", "import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * UUID V7 - Unix Epoch time-based UUID\n *\n * The IETF has published RFC9562, introducing 3 new UUID versions (6,7,8). This\n * implementation of V7 is based on the accepted, though not yet approved,\n * revisions.\n *\n * RFC 9562:https://www.rfc-editor.org/rfc/rfc9562.html Universally Unique\n * IDentifiers (UUIDs)\n\n *\n * Sample V7 value:\n * https://www.rfc-editor.org/rfc/rfc9562.html#name-example-of-a-uuidv7-value\n *\n * Monotonic Bit Layout: RFC rfc9562.6.2 Method 1, Dedicated Counter Bits ref:\n *     https://www.rfc-editor.org/rfc/rfc9562.html#section-6.2-5.1\n *\n *   0                   1                   2                   3 0 1 2 3 4 5 6\n *   7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                          unix_ts_ms                           |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |          unix_ts_ms           |  ver  |        seq_hi         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |var|               seq_low               |        rand         |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *  |                             rand                              |\n *  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *\n * seq is a 31 bit serialized counter; comprised of 12 bit seq_hi and 19 bit\n * seq_low, and randomly initialized upon timestamp change. 31 bit counter size\n * was selected as any bitwise operations in node are done as _signed_ 32 bit\n * ints. we exclude the sign bit.\n */\n\nlet _seqLow = null;\nlet _seqHigh = null;\nlet _msecs = 0;\nfunction v7(options, buf, offset) {\n  options = options || {};\n\n  // initialize buffer and pointer\n  let i = buf && offset || 0;\n  const b = buf || new Uint8Array(16);\n\n  // rnds is Uint8Array(16) filled with random bytes\n  const rnds = options.random || (options.rng || rng)();\n\n  // milliseconds since unix epoch, 1970-01-01 00:00\n  const msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // seq is user provided 31 bit counter\n  let seq = options.seq !== undefined ? options.seq : null;\n\n  // initialize local seq high/low parts\n  let seqHigh = _seqHigh;\n  let seqLow = _seqLow;\n\n  // check if clock has advanced and user has not provided msecs\n  if (msecs > _msecs && options.msecs === undefined) {\n    _msecs = msecs;\n\n    // unless user provided seq, reset seq parts\n    if (seq !== null) {\n      seqHigh = null;\n      seqLow = null;\n    }\n  }\n\n  // if we have a user provided seq\n  if (seq !== null) {\n    // trim provided seq to 31 bits of value, avoiding overflow\n    if (seq > 0x7fffffff) {\n      seq = 0x7fffffff;\n    }\n\n    // split provided seq into high/low parts\n    seqHigh = seq >>> 19 & 0xfff;\n    seqLow = seq & 0x7ffff;\n  }\n\n  // randomly initialize seq\n  if (seqHigh === null || seqLow === null) {\n    seqHigh = rnds[6] & 0x7f;\n    seqHigh = seqHigh << 8 | rnds[7];\n    seqLow = rnds[8] & 0x3f; // pad for var\n    seqLow = seqLow << 8 | rnds[9];\n    seqLow = seqLow << 5 | rnds[10] >>> 3;\n  }\n\n  // increment seq if within msecs window\n  if (msecs + 10000 > _msecs && seq === null) {\n    if (++seqLow > 0x7ffff) {\n      seqLow = 0;\n      if (++seqHigh > 0xfff) {\n        seqHigh = 0;\n\n        // increment internal _msecs. this allows us to continue incrementing\n        // while staying monotonic. Note, once we hit 10k milliseconds beyond system\n        // clock, we will reset breaking monotonicity (after (2^31)*10000 generations)\n        _msecs++;\n      }\n    }\n  } else {\n    // resetting; we have advanced more than\n    // 10k milliseconds beyond system clock\n    _msecs = msecs;\n  }\n  _seqHigh = seqHigh;\n  _seqLow = seqLow;\n\n  // [bytes 0-5] 48 bits of local timestamp\n  b[i++] = _msecs / 0x10000000000 & 0xff;\n  b[i++] = _msecs / 0x100000000 & 0xff;\n  b[i++] = _msecs / 0x1000000 & 0xff;\n  b[i++] = _msecs / 0x10000 & 0xff;\n  b[i++] = _msecs / 0x100 & 0xff;\n  b[i++] = _msecs & 0xff;\n\n  // [byte 6] - set 4 bits of version (7) with first 4 bits seq_hi\n  b[i++] = seqHigh >>> 4 & 0x0f | 0x70;\n\n  // [byte 7] remaining 8 bits of seq_hi\n  b[i++] = seqHigh & 0xff;\n\n  // [byte 8] - variant (2 bits), first 6 bits seq_low\n  b[i++] = seqLow >>> 13 & 0x3f | 0x80;\n\n  // [byte 9] 8 bits seq_low\n  b[i++] = seqLow >>> 5 & 0xff;\n\n  // [byte 10] remaining 5 bits seq_low, 3 bits random\n  b[i++] = seqLow << 3 & 0xff | rnds[10] & 0x07;\n\n  // [bytes 11-15] always random\n  b[i++] = rnds[11];\n  b[i++] = rnds[12];\n  b[i++] = rnds[13];\n  b[i++] = rnds[14];\n  b[i++] = rnds[15];\n  return buf || unsafeStringify(b);\n}\nexport default v7;", "import validate from './validate.js';\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n  return parseInt(uuid.slice(14, 15), 16);\n}\nexport default version;", "export { default as MAX } from './max.js';\nexport { default as NIL } from './nil.js';\nexport { default as parse } from './parse.js';\nexport { default as stringify } from './stringify.js';\nexport { default as v1 } from './v1.js';\nexport { default as v1ToV6 } from './v1ToV6.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as v6 } from './v6.js';\nexport { default as v6ToV1 } from './v6ToV1.js';\nexport { default as v7 } from './v7.js';\nexport { default as validate } from './validate.js';\nexport { default as version } from './version.js';", "import { ApiException, XOR } from \"./util\";\nimport { HttpErrorOut, HTTPValidationError } from \"./HttpErrors\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const LIB_VERSION = \"1.76.1\";\nconst USER_AGENT = `svix-libs/${LIB_VERSION}/javascript`;\n\nexport enum HttpMethod {\n  GET = \"GET\",\n  HEAD = \"HEAD\",\n  POST = \"POST\",\n  PUT = \"PUT\",\n  DELETE = \"DELETE\",\n  CONNECT = \"CONNECT\",\n  OPTIONS = \"OPTIONS\",\n  TRACE = \"TRACE\",\n  PATCH = \"PATCH\",\n}\n\nexport type SvixRequestContext = {\n  /** The API base URL, like \"https://api.svix.com\" */\n  baseUrl: string;\n  /** The 'bearer' scheme access token */\n  token: string;\n  /** Time in milliseconds to wait for requests to get a response. */\n  timeout?: number;\n} & XOR<\n  {\n    /** List of delays (in milliseconds) to wait before each retry attempt.*/\n    retryScheduleInMs?: number[];\n  },\n  {\n    /** The number of times the client will retry if a server-side error\n     *  or timeout is received.\n     *  Default: 2\n     */\n    numRetries?: number;\n  }\n>;\n\ntype QueryParameter = string | boolean | number | Date | string[] | null | undefined;\n\nexport class SvixRequest {\n  constructor(\n    private readonly method: HttpMethod,\n    private path: string\n  ) {}\n\n  private body?: string;\n  private queryParams: Record<string, string> = {};\n  private headerParams: Record<string, string> = {};\n\n  public setPathParam(name: string, value: string) {\n    const newPath = this.path.replace(`{${name}}`, encodeURIComponent(value));\n    if (this.path === newPath) {\n      throw new Error(`path parameter ${name} not found`);\n    }\n    this.path = newPath;\n  }\n\n  public setQueryParam(name: string, value: QueryParameter) {\n    if (value === undefined || value === null) {\n      return;\n    }\n\n    if (typeof value === \"string\") {\n      this.queryParams[name] = value;\n    } else if (typeof value === \"boolean\" || typeof value === \"number\") {\n      this.queryParams[name] = value.toString();\n    } else if (value instanceof Date) {\n      this.queryParams[name] = value.toISOString();\n    } else if (value instanceof Array) {\n      if (value.length > 0) {\n        this.queryParams[name] = value.join(\",\");\n      }\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _assert_unreachable: never = value;\n      throw new Error(`query parameter ${name} has unsupported type`);\n    }\n  }\n\n  public setHeaderParam(name: string, value?: string) {\n    if (value === undefined) {\n      return;\n    }\n\n    this.headerParams[name] = value;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setBody(value: any) {\n    this.body = JSON.stringify(value);\n  }\n\n  /**\n   * Send this request, returning the request body as a caller-specified type.\n   *\n   * If the server returns a 422 error, an `ApiException<HTTPValidationError>` is thrown.\n   * If the server returns another 4xx error, an `ApiException<HttpErrorOut>` is thrown.\n   *\n   * If the server returns a 5xx error, the request is retried up to two times with exponential backoff.\n   * If retries are exhausted, an `ApiException<HttpErrorOut>` is thrown.\n   */\n  public async send<R>(\n    ctx: SvixRequestContext,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    parseResponseBody: (jsonObject: any) => R\n  ): Promise<R> {\n    const response = await this.sendInner(ctx);\n    if (response.status == 204) {\n      return <R>null;\n    }\n    const responseBody = await response.text();\n    return parseResponseBody(JSON.parse(responseBody));\n  }\n\n  /** Same as `send`, but the response body is discarded, not parsed. */\n  public async sendNoResponseBody(ctx: SvixRequestContext): Promise<void> {\n    await this.sendInner(ctx);\n  }\n\n  private async sendInner(ctx: SvixRequestContext): Promise<Response> {\n    const url = new URL(ctx.baseUrl + this.path);\n    for (const [name, value] of Object.entries(this.queryParams)) {\n      url.searchParams.set(name, value);\n    }\n\n    if (\n      this.headerParams[\"idempotency-key\"] === undefined &&\n      this.method.toUpperCase() === \"POST\"\n    ) {\n      this.headerParams[\"idempotency-key\"] = \"auto_\" + uuidv4();\n    }\n\n    const randomId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n\n    if (this.body != null) {\n      this.headerParams[\"content-type\"] = \"application/json\";\n    }\n    // Cloudflare Workers fail if the credentials option is used in a fetch call.\n    // This work around that. Source:\n    // https://github.com/cloudflare/workers-sdk/issues/2514#issuecomment-2178070014\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n\n    const response = await sendWithRetry(\n      url,\n      {\n        method: this.method.toString(),\n        body: this.body,\n        headers: {\n          accept: \"application/json, */*;q=0.8\",\n          authorization: `Bearer ${ctx.token}`,\n          \"user-agent\": USER_AGENT,\n          \"svix-req-id\": randomId.toString(),\n          ...this.headerParams,\n        },\n        credentials: isCredentialsSupported ? \"same-origin\" : undefined,\n        signal: ctx.timeout !== undefined ? AbortSignal.timeout(ctx.timeout) : undefined,\n      },\n      ctx.retryScheduleInMs,\n      ctx.retryScheduleInMs?.[0],\n      ctx.retryScheduleInMs?.length || ctx.numRetries\n    );\n    return filterResponseForErrors(response);\n  }\n}\n\nasync function filterResponseForErrors(response: Response): Promise<Response> {\n  if (response.status < 300) {\n    return response;\n  }\n\n  const responseBody = await response.text();\n\n  if (response.status === 422) {\n    throw new ApiException<HTTPValidationError>(\n      response.status,\n      JSON.parse(responseBody) as HTTPValidationError,\n      response.headers\n    );\n  }\n\n  if (response.status >= 400 && response.status <= 499) {\n    throw new ApiException<HttpErrorOut>(\n      response.status,\n      JSON.parse(responseBody) as HttpErrorOut,\n      response.headers\n    );\n  }\n  throw new ApiException(response.status, responseBody, response.headers);\n}\n\ntype SvixRequestInit = RequestInit & {\n  headers: Record<string, string>;\n};\n\nasync function sendWithRetry(\n  url: URL,\n  init: SvixRequestInit,\n  retryScheduleInMs?: number[],\n  nextInterval = 50,\n  triesLeft = 2,\n  retryCount = 1\n): Promise<Response> {\n  const sleep = (interval: number) =>\n    new Promise((resolve) => setTimeout(resolve, interval));\n\n  try {\n    const response = await fetch(url, init);\n    if (triesLeft <= 0 || response.status < 500) {\n      return response;\n    }\n  } catch (e) {\n    if (triesLeft <= 0) {\n      throw e;\n    }\n  }\n\n  await sleep(nextInterval);\n  init.headers[\"svix-retry-count\"] = retryCount.toString();\n  nextInterval = retryScheduleInMs?.[retryCount] || nextInterval * 2;\n  return await sendWithRetry(\n    url,\n    init,\n    retryScheduleInMs,\n    nextInterval,\n    --triesLeft,\n    ++retryCount\n  );\n}\n", "// this file is @generated\n\nimport { ApplicationIn, ApplicationInSerializer } from \"../models/applicationIn\";\nimport { ApplicationOut, ApplicationOutSerializer } from \"../models/applicationOut\";\nimport { ApplicationPatch, ApplicationPatchSerializer } from \"../models/applicationPatch\";\nimport {\n  ListResponseApplicationOut,\n  ListResponseApplicationOutSerializer,\n} from \"../models/listResponseApplicationOut\";\nimport { Ordering } from \"../models/ordering\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface ApplicationListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n}\n\nexport interface ApplicationCreateOptions {\n  idempotencyKey?: string;\n}\n\nexport class Application {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** List of all the organization's applications. */\n  public list(options?: ApplicationListOptions): Promise<ListResponseApplicationOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/app\");\n\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseApplicationOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Create a new application. */\n  public create(\n    applicationIn: ApplicationIn,\n    options?: ApplicationCreateOptions\n  ): Promise<ApplicationOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/app\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(ApplicationInSerializer._toJsonObject(applicationIn));\n\n    return request.send(this.requestCtx, ApplicationOutSerializer._fromJsonObject);\n  }\n\n  /** Get the application with the UID from `applicationIn`, or create it if it doesn't exist yet. */\n  public getOrCreate(\n    applicationIn: ApplicationIn,\n    options?: ApplicationCreateOptions\n  ): Promise<ApplicationOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/app\");\n\n    request.setQueryParam(\"get_if_exists\", true);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(ApplicationInSerializer._toJsonObject(applicationIn));\n\n    return request.send(this.requestCtx, ApplicationOutSerializer._fromJsonObject);\n  }\n\n  /** Get an application. */\n  public get(appId: string): Promise<ApplicationOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/app/{app_id}\");\n\n    request.setPathParam(\"app_id\", appId);\n\n    return request.send(this.requestCtx, ApplicationOutSerializer._fromJsonObject);\n  }\n\n  /** Update an application. */\n  public update(appId: string, applicationIn: ApplicationIn): Promise<ApplicationOut> {\n    const request = new SvixRequest(HttpMethod.PUT, \"/api/v1/app/{app_id}\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setBody(ApplicationInSerializer._toJsonObject(applicationIn));\n\n    return request.send(this.requestCtx, ApplicationOutSerializer._fromJsonObject);\n  }\n\n  /** Delete an application. */\n  public delete(appId: string): Promise<void> {\n    const request = new SvixRequest(HttpMethod.DELETE, \"/api/v1/app/{app_id}\");\n\n    request.setPathParam(\"app_id\", appId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** Partially update an application. */\n  public patch(\n    appId: string,\n    applicationPatch: ApplicationPatch\n  ): Promise<ApplicationOut> {\n    const request = new SvixRequest(HttpMethod.PATCH, \"/api/v1/app/{app_id}\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setBody(ApplicationPatchSerializer._toJsonObject(applicationPatch));\n\n    return request.send(this.requestCtx, ApplicationOutSerializer._fromJsonObject);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport enum AppPortalCapability {\n  ViewBase = \"ViewBase\",\n  ViewEndpointSecret = \"ViewEndpointSecret\",\n  ManageEndpointSecret = \"ManageEndpointSecret\",\n  ManageTransformations = \"ManageTransformations\",\n  CreateAttempts = \"CreateAttempts\",\n  ManageEndpoint = \"ManageEndpoint\",\n}\n\nexport const AppPortalCapabilitySerializer = {\n  _fromJsonObject(object: any): AppPortalCapability {\n    return object;\n  },\n\n  _toJsonObject(self: AppPortalCapability): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  AppPortalCapability,\n  AppPortalCapabilitySerializer,\n} from \"./appPortalCapability\";\nimport { ApplicationIn, ApplicationInSerializer } from \"./applicationIn\";\n\nexport interface AppPortalAccessIn {\n  /**\n   * Optionally creates a new application while generating the access link.\n   *\n   * If the application id or uid that is used in the path already exists, this argument is ignored.\n   */\n  application?: ApplicationIn | null;\n  /**\n   * Custom capabilities attached to the token, You can combine as many capabilities as necessary.\n   *\n   * The `ViewBase` capability is always required\n   *\n   * - `ViewBase`: Basic read only permissions, does not allow the user to see the endpoint secret.\n   *\n   * - `ViewEndpointSecret`: Allows user to view the endpoint secret.\n   *\n   * - `ManageEndpointSecret`: Allows user to rotate and view the endpoint secret.\n   *\n   * - `ManageTransformations`: Allows user to modify the endpoint transformations.\n   *\n   * - `CreateAttempts`: Allows user to replay missing messages and send example messages.\n   *\n   * - `ManageEndpoint`: Allows user to read/modify any field or configuration of an endpoint (including secrets)\n   */\n  capabilities?: AppPortalCapability[] | null;\n  /**\n   * How long the token will be valid for, in seconds.\n   *\n   * Valid values are between 1 hour and 7 days. The default is 7 days.\n   */\n  expiry?: number | null;\n  /** The set of feature flags the created token will have access to. */\n  featureFlags?: string[];\n  /**\n   * Whether the app portal should be in read-only mode.\n   *\n   * @deprecated\n   */\n  readOnly?: boolean | null;\n  /**\n   * An optional session ID to attach to the token.\n   *\n   * When expiring tokens with \"Expire All\", you can include the session ID to only expire tokens that were created with that session ID.\n   */\n  sessionId?: string | null;\n}\n\nexport const AppPortalAccessInSerializer = {\n  _fromJsonObject(object: any): AppPortalAccessIn {\n    return {\n      application: object[\"application\"]\n        ? ApplicationInSerializer._fromJsonObject(object[\"application\"])\n        : undefined,\n      capabilities: object[\"capabilities\"]?.map((item: AppPortalCapability) =>\n        AppPortalCapabilitySerializer._fromJsonObject(item)\n      ),\n      expiry: object[\"expiry\"],\n      featureFlags: object[\"featureFlags\"],\n      readOnly: object[\"readOnly\"],\n      sessionId: object[\"sessionId\"],\n    };\n  },\n\n  _toJsonObject(self: AppPortalAccessIn): any {\n    return {\n      application: self.application\n        ? ApplicationInSerializer._toJsonObject(self.application)\n        : undefined,\n      capabilities: self.capabilities?.map((item) =>\n        AppPortalCapabilitySerializer._toJsonObject(item)\n      ),\n      expiry: self.expiry,\n      featureFlags: self.featureFlags,\n      readOnly: self.readOnly,\n      sessionId: self.sessionId,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface AppPortalAccessOut {\n  token: string;\n  url: string;\n}\n\nexport const AppPortalAccessOutSerializer = {\n  _fromJsonObject(object: any): AppPortalAccessOut {\n    return {\n      token: object[\"token\"],\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: AppPortalAccessOut): any {\n    return {\n      token: self.token,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface ApplicationTokenExpireIn {\n  /** How many seconds until the old key is expired. */\n  expiry?: number | null;\n  /**\n   * An optional list of session ids.\n   *\n   * If any session ids are specified, only Application tokens created with that session id will be expired.\n   */\n  sessionIds?: string[];\n}\n\nexport const ApplicationTokenExpireInSerializer = {\n  _fromJsonObject(object: any): ApplicationTokenExpireIn {\n    return {\n      expiry: object[\"expiry\"],\n      sessionIds: object[\"sessionIds\"],\n    };\n  },\n\n  _toJsonObject(self: ApplicationTokenExpireIn): any {\n    return {\n      expiry: self.expiry,\n      sessionIds: self.sessionIds,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface DashboardAccessOut {\n  token: string;\n  url: string;\n}\n\nexport const DashboardAccessOutSerializer = {\n  _fromJsonObject(object: any): DashboardAccessOut {\n    return {\n      token: object[\"token\"],\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: DashboardAccessOut): any {\n    return {\n      token: self.token,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  AppPortalAccessIn,\n  AppPortalAccessInSerializer,\n} from \"../models/appPortalAccessIn\";\nimport {\n  AppPortalAccessOut,\n  AppPortalAccessOutSerializer,\n} from \"../models/appPortalAccessOut\";\nimport {\n  ApplicationTokenExpireIn,\n  ApplicationTokenExpireInSerializer,\n} from \"../models/applicationTokenExpireIn\";\nimport {\n  DashboardAccessOut,\n  DashboardAccessOutSerializer,\n} from \"../models/dashboardAccessOut\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface AuthenticationAppPortalAccessOptions {\n  idempotencyKey?: string;\n}\n\nexport interface AuthenticationExpireAllOptions {\n  idempotencyKey?: string;\n}\n\nexport interface AuthenticationLogoutOptions {\n  idempotencyKey?: string;\n}\n\n/** @deprecated */\nexport interface AuthenticationDashboardAccessOptions {\n  idempotencyKey?: string;\n}\n\nexport class Authentication {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** Use this function to get magic links (and authentication codes) for connecting your users to the Consumer Application Portal. */\n  public appPortalAccess(\n    appId: string,\n    appPortalAccessIn: AppPortalAccessIn,\n    options?: AuthenticationAppPortalAccessOptions\n  ): Promise<AppPortalAccessOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/auth/app-portal-access/{app_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(AppPortalAccessInSerializer._toJsonObject(appPortalAccessIn));\n\n    return request.send(this.requestCtx, AppPortalAccessOutSerializer._fromJsonObject);\n  }\n\n  /** Expire all of the tokens associated with a specific application. */\n  public expireAll(\n    appId: string,\n    applicationTokenExpireIn: ApplicationTokenExpireIn,\n    options?: AuthenticationExpireAllOptions\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/auth/app/{app_id}/expire-all\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      ApplicationTokenExpireInSerializer._toJsonObject(applicationTokenExpireIn)\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** @deprecated Please use `appPortalAccess` instead. */\n  public dashboardAccess(\n    appId: string,\n    options?: AuthenticationDashboardAccessOptions\n  ): Promise<DashboardAccessOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/auth/dashboard-access/{app_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n\n    return request.send(this.requestCtx, DashboardAccessOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Logout an app token.\n   *\n   * Trying to log out other tokens will fail.\n   */\n  public logout(options?: AuthenticationLogoutOptions): Promise<void> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/auth/logout\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport enum BackgroundTaskStatus {\n  Running = \"running\",\n  Finished = \"finished\",\n  Failed = \"failed\",\n}\n\nexport const BackgroundTaskStatusSerializer = {\n  _fromJsonObject(object: any): BackgroundTaskStatus {\n    return object;\n  },\n\n  _toJsonObject(self: BackgroundTaskStatus): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport enum BackgroundTaskType {\n  EndpointReplay = \"endpoint.replay\",\n  EndpointRecover = \"endpoint.recover\",\n  ApplicationStats = \"application.stats\",\n  MessageBroadcast = \"message.broadcast\",\n  SdkGenerate = \"sdk.generate\",\n  EventTypeAggregate = \"event-type.aggregate\",\n  ApplicationPurgeContent = \"application.purge_content\",\n}\n\nexport const BackgroundTaskTypeSerializer = {\n  _fromJsonObject(object: any): BackgroundTaskType {\n    return object;\n  },\n\n  _toJsonObject(self: BackgroundTaskType): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  BackgroundTaskStatus,\n  BackgroundTaskStatusSerializer,\n} from \"./backgroundTaskStatus\";\nimport { BackgroundTaskType, BackgroundTaskTypeSerializer } from \"./backgroundTaskType\";\n\nexport interface BackgroundTaskOut {\n  data: any;\n  /** The QueueBackgroundTask's ID. */\n  id: string;\n  status: BackgroundTaskStatus;\n  task: BackgroundTaskType;\n}\n\nexport const BackgroundTaskOutSerializer = {\n  _fromJsonObject(object: any): BackgroundTaskOut {\n    return {\n      data: object[\"data\"],\n      id: object[\"id\"],\n      status: BackgroundTaskStatusSerializer._fromJsonObject(object[\"status\"]),\n      task: BackgroundTaskTypeSerializer._fromJsonObject(object[\"task\"]),\n    };\n  },\n\n  _toJsonObject(self: BackgroundTaskOut): any {\n    return {\n      data: self.data,\n      id: self.id,\n      status: BackgroundTaskStatusSerializer._toJsonObject(self.status),\n      task: BackgroundTaskTypeSerializer._toJsonObject(self.task),\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { BackgroundTaskOut, BackgroundTaskOutSerializer } from \"./backgroundTaskOut\";\n\nexport interface ListResponseBackgroundTaskOut {\n  data: BackgroundTaskOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseBackgroundTaskOutSerializer = {\n  _fromJsonObject(object: any): ListResponseBackgroundTaskOut {\n    return {\n      data: object[\"data\"].map((item: BackgroundTaskOut) =>\n        BackgroundTaskOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseBackgroundTaskOut): any {\n    return {\n      data: self.data.map((item) => BackgroundTaskOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  BackgroundTaskOut,\n  BackgroundTaskOutSerializer,\n} from \"../models/backgroundTaskOut\";\nimport { BackgroundTaskStatus } from \"../models/backgroundTaskStatus\";\nimport { BackgroundTaskType } from \"../models/backgroundTaskType\";\nimport {\n  ListResponseBackgroundTaskOut,\n  ListResponseBackgroundTaskOutSerializer,\n} from \"../models/listResponseBackgroundTaskOut\";\nimport { Ordering } from \"../models/ordering\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface BackgroundTaskListOptions {\n  /** Filter the response based on the status. */\n  status?: BackgroundTaskStatus;\n  /** Filter the response based on the type. */\n  task?: BackgroundTaskType;\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n}\n\nexport class BackgroundTask {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** List background tasks executed in the past 90 days. */\n  public list(\n    options?: BackgroundTaskListOptions\n  ): Promise<ListResponseBackgroundTaskOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/background-task\");\n\n    request.setQueryParam(\"status\", options?.status);\n    request.setQueryParam(\"task\", options?.task);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseBackgroundTaskOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * List background tasks executed in the past 90 days.\n   *\n   * @deprecated Use list instead.\n   * */\n  public listByEndpoint(\n    options?: BackgroundTaskListOptions\n  ): Promise<ListResponseBackgroundTaskOut> {\n    return this.list(options);\n  }\n\n  /** Get a background task by ID. */\n  public get(taskId: string): Promise<BackgroundTaskOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/background-task/{task_id}\");\n\n    request.setPathParam(\"task_id\", taskId);\n\n    return request.send(this.requestCtx, BackgroundTaskOutSerializer._fromJsonObject);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointHeadersIn {\n  headers: { [key: string]: string };\n}\n\nexport const EndpointHeadersInSerializer = {\n  _fromJsonObject(object: any): EndpointHeadersIn {\n    return {\n      headers: object[\"headers\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointHeadersIn): any {\n    return {\n      headers: self.headers,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\n/**\n * The value of the headers is returned in the `headers` field.\n *\n * Sensitive headers that have been redacted are returned in the sensitive field.\n */\nexport interface EndpointHeadersOut {\n  headers: { [key: string]: string };\n  sensitive: string[];\n}\n\nexport const EndpointHeadersOutSerializer = {\n  _fromJsonObject(object: any): EndpointHeadersOut {\n    return {\n      headers: object[\"headers\"],\n      sensitive: object[\"sensitive\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointHeadersOut): any {\n    return {\n      headers: self.headers,\n      sensitive: self.sensitive,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointHeadersPatchIn {\n  /** A list of headers be be removed */\n  deleteHeaders?: string[];\n  headers: { [key: string]: string };\n}\n\nexport const EndpointHeadersPatchInSerializer = {\n  _fromJsonObject(object: any): EndpointHeadersPatchIn {\n    return {\n      deleteHeaders: object[\"deleteHeaders\"],\n      headers: object[\"headers\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointHeadersPatchIn): any {\n    return {\n      deleteHeaders: self.deleteHeaders,\n      headers: self.headers,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointIn {\n  /** List of message channels this endpoint listens to (omit for all). */\n  channels?: string[] | null;\n  description?: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  headers?: { [key: string]: string } | null;\n  metadata?: { [key: string]: string };\n  rateLimit?: number | null;\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  secret?: string | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  url: string;\n  version?: number | null;\n}\n\nexport const EndpointInSerializer = {\n  _fromJsonObject(object: any): EndpointIn {\n    return {\n      channels: object[\"channels\"],\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      headers: object[\"headers\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      secret: object[\"secret\"],\n      uid: object[\"uid\"],\n      url: object[\"url\"],\n      version: object[\"version\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointIn): any {\n    return {\n      channels: self.channels,\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      headers: self.headers,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      secret: self.secret,\n      uid: self.uid,\n      url: self.url,\n      version: self.version,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointOut {\n  /** List of message channels this endpoint listens to (omit for all). */\n  channels?: string[] | null;\n  createdAt: Date;\n  /** An example endpoint name. */\n  description: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  /** The Endpoint's ID. */\n  id: string;\n  metadata: { [key: string]: string };\n  rateLimit?: number | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  updatedAt: Date;\n  url: string;\n  version: number;\n}\n\nexport const EndpointOutSerializer = {\n  _fromJsonObject(object: any): EndpointOut {\n    return {\n      channels: object[\"channels\"],\n      createdAt: new Date(object[\"createdAt\"]),\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      id: object[\"id\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n      url: object[\"url\"],\n      version: object[\"version\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointOut): any {\n    return {\n      channels: self.channels,\n      createdAt: self.createdAt,\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      id: self.id,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n      updatedAt: self.updatedAt,\n      url: self.url,\n      version: self.version,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointPatch {\n  channels?: string[] | null;\n  description?: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  metadata?: { [key: string]: string };\n  rateLimit?: number | null;\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  secret?: string | null;\n  /** The Endpoint's UID. */\n  uid?: string | null;\n  url?: string;\n  version?: number;\n}\n\nexport const EndpointPatchSerializer = {\n  _fromJsonObject(object: any): EndpointPatch {\n    return {\n      channels: object[\"channels\"],\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      secret: object[\"secret\"],\n      uid: object[\"uid\"],\n      url: object[\"url\"],\n      version: object[\"version\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointPatch): any {\n    return {\n      channels: self.channels,\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      secret: self.secret,\n      uid: self.uid,\n      url: self.url,\n      version: self.version,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointSecretOut {\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  key: string;\n}\n\nexport const EndpointSecretOutSerializer = {\n  _fromJsonObject(object: any): EndpointSecretOut {\n    return {\n      key: object[\"key\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointSecretOut): any {\n    return {\n      key: self.key,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointSecretRotateIn {\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  key?: string | null;\n}\n\nexport const EndpointSecretRotateInSerializer = {\n  _fromJsonObject(object: any): EndpointSecretRotateIn {\n    return {\n      key: object[\"key\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointSecretRotateIn): any {\n    return {\n      key: self.key,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointStats {\n  fail: number;\n  pending: number;\n  sending: number;\n  success: number;\n}\n\nexport const EndpointStatsSerializer = {\n  _fromJsonObject(object: any): EndpointStats {\n    return {\n      fail: object[\"fail\"],\n      pending: object[\"pending\"],\n      sending: object[\"sending\"],\n      success: object[\"success\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointStats): any {\n    return {\n      fail: self.fail,\n      pending: self.pending,\n      sending: self.sending,\n      success: self.success,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointTransformationIn {\n  code?: string | null;\n  enabled?: boolean;\n}\n\nexport const EndpointTransformationInSerializer = {\n  _fromJsonObject(object: any): EndpointTransformationIn {\n    return {\n      code: object[\"code\"],\n      enabled: object[\"enabled\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointTransformationIn): any {\n    return {\n      code: self.code,\n      enabled: self.enabled,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointTransformationOut {\n  code?: string | null;\n  enabled?: boolean;\n}\n\nexport const EndpointTransformationOutSerializer = {\n  _fromJsonObject(object: any): EndpointTransformationOut {\n    return {\n      code: object[\"code\"],\n      enabled: object[\"enabled\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointTransformationOut): any {\n    return {\n      code: self.code,\n      enabled: self.enabled,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointTransformationPatch {\n  code?: string | null;\n  enabled?: boolean;\n}\n\nexport const EndpointTransformationPatchSerializer = {\n  _fromJsonObject(object: any): EndpointTransformationPatch {\n    return {\n      code: object[\"code\"],\n      enabled: object[\"enabled\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointTransformationPatch): any {\n    return {\n      code: self.code,\n      enabled: self.enabled,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EndpointUpdate {\n  /** List of message channels this endpoint listens to (omit for all). */\n  channels?: string[] | null;\n  description?: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  metadata?: { [key: string]: string };\n  rateLimit?: number | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  url: string;\n  version?: number | null;\n}\n\nexport const EndpointUpdateSerializer = {\n  _fromJsonObject(object: any): EndpointUpdate {\n    return {\n      channels: object[\"channels\"],\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n      url: object[\"url\"],\n      version: object[\"version\"],\n    };\n  },\n\n  _toJsonObject(self: EndpointUpdate): any {\n    return {\n      channels: self.channels,\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n      url: self.url,\n      version: self.version,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EventExampleIn {\n  /** The event type's name */\n  eventType: string;\n  /**\n   * If the event type schema contains an array of examples, chooses which one to send.\n   *\n   * Defaults to the first example. Ignored if the schema doesn't contain an array of examples.\n   */\n  exampleIndex?: number;\n}\n\nexport const EventExampleInSerializer = {\n  _fromJsonObject(object: any): EventExampleIn {\n    return {\n      eventType: object[\"eventType\"],\n      exampleIndex: object[\"exampleIndex\"],\n    };\n  },\n\n  _toJsonObject(self: EventExampleIn): any {\n    return {\n      eventType: self.eventType,\n      exampleIndex: self.exampleIndex,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { EndpointOut, EndpointOutSerializer } from \"./endpointOut\";\n\nexport interface ListResponseEndpointOut {\n  data: EndpointOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseEndpointOutSerializer = {\n  _fromJsonObject(object: any): ListResponseEndpointOut {\n    return {\n      data: object[\"data\"].map((item: EndpointOut) =>\n        EndpointOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseEndpointOut): any {\n    return {\n      data: self.data.map((item) => EndpointOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface MessageOut {\n  /** List of free-form identifiers that endpoints can filter by */\n  channels?: string[] | null;\n  /** Optional unique identifier for the message */\n  eventId?: string | null;\n  /** The event type's name */\n  eventType: string;\n  /** The Message's ID. */\n  id: string;\n  payload: any;\n  tags?: string[] | null;\n  timestamp: Date;\n}\n\nexport const MessageOutSerializer = {\n  _fromJsonObject(object: any): MessageOut {\n    return {\n      channels: object[\"channels\"],\n      eventId: object[\"eventId\"],\n      eventType: object[\"eventType\"],\n      id: object[\"id\"],\n      payload: object[\"payload\"],\n      tags: object[\"tags\"],\n      timestamp: new Date(object[\"timestamp\"]),\n    };\n  },\n\n  _toJsonObject(self: MessageOut): any {\n    return {\n      channels: self.channels,\n      eventId: self.eventId,\n      eventType: self.eventType,\n      id: self.id,\n      payload: self.payload,\n      tags: self.tags,\n      timestamp: self.timestamp,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface RecoverIn {\n  since: Date;\n  until?: Date | null;\n}\n\nexport const RecoverInSerializer = {\n  _fromJsonObject(object: any): RecoverIn {\n    return {\n      since: new Date(object[\"since\"]),\n      until: object[\"until\"] ? new Date(object[\"until\"]) : null,\n    };\n  },\n\n  _toJsonObject(self: RecoverIn): any {\n    return {\n      since: self.since,\n      until: self.until,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  BackgroundTaskStatus,\n  BackgroundTaskStatusSerializer,\n} from \"./backgroundTaskStatus\";\nimport { BackgroundTaskType, BackgroundTaskTypeSerializer } from \"./backgroundTaskType\";\n\nexport interface RecoverOut {\n  /** The QueueBackgroundTask's ID. */\n  id: string;\n  status: BackgroundTaskStatus;\n  task: BackgroundTaskType;\n}\n\nexport const RecoverOutSerializer = {\n  _fromJsonObject(object: any): RecoverOut {\n    return {\n      id: object[\"id\"],\n      status: BackgroundTaskStatusSerializer._fromJsonObject(object[\"status\"]),\n      task: BackgroundTaskTypeSerializer._fromJsonObject(object[\"task\"]),\n    };\n  },\n\n  _toJsonObject(self: RecoverOut): any {\n    return {\n      id: self.id,\n      status: BackgroundTaskStatusSerializer._toJsonObject(self.status),\n      task: BackgroundTaskTypeSerializer._toJsonObject(self.task),\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface ReplayIn {\n  since: Date;\n  until?: Date | null;\n}\n\nexport const ReplayInSerializer = {\n  _fromJsonObject(object: any): ReplayIn {\n    return {\n      since: new Date(object[\"since\"]),\n      until: object[\"until\"] ? new Date(object[\"until\"]) : null,\n    };\n  },\n\n  _toJsonObject(self: ReplayIn): any {\n    return {\n      since: self.since,\n      until: self.until,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  BackgroundTaskStatus,\n  BackgroundTaskStatusSerializer,\n} from \"./backgroundTaskStatus\";\nimport { BackgroundTaskType, BackgroundTaskTypeSerializer } from \"./backgroundTaskType\";\n\nexport interface ReplayOut {\n  /** The QueueBackgroundTask's ID. */\n  id: string;\n  status: BackgroundTaskStatus;\n  task: BackgroundTaskType;\n}\n\nexport const ReplayOutSerializer = {\n  _fromJsonObject(object: any): ReplayOut {\n    return {\n      id: object[\"id\"],\n      status: BackgroundTaskStatusSerializer._fromJsonObject(object[\"status\"]),\n      task: BackgroundTaskTypeSerializer._fromJsonObject(object[\"task\"]),\n    };\n  },\n\n  _toJsonObject(self: ReplayOut): any {\n    return {\n      id: self.id,\n      status: BackgroundTaskStatusSerializer._toJsonObject(self.status),\n      task: BackgroundTaskTypeSerializer._toJsonObject(self.task),\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  EndpointHeadersIn,\n  EndpointHeadersInSerializer,\n} from \"../models/endpointHeadersIn\";\nimport {\n  EndpointHeadersOut,\n  EndpointHeadersOutSerializer,\n} from \"../models/endpointHeadersOut\";\nimport {\n  EndpointHeadersPatchIn,\n  EndpointHeadersPatchInSerializer,\n} from \"../models/endpointHeadersPatchIn\";\nimport { EndpointIn, EndpointInSerializer } from \"../models/endpointIn\";\nimport { EndpointOut, EndpointOutSerializer } from \"../models/endpointOut\";\nimport { EndpointPatch, EndpointPatchSerializer } from \"../models/endpointPatch\";\nimport {\n  EndpointSecretOut,\n  EndpointSecretOutSerializer,\n} from \"../models/endpointSecretOut\";\nimport {\n  EndpointSecretRotateIn,\n  EndpointSecretRotateInSerializer,\n} from \"../models/endpointSecretRotateIn\";\nimport { EndpointStats, EndpointStatsSerializer } from \"../models/endpointStats\";\nimport {\n  EndpointTransformationIn,\n  EndpointTransformationInSerializer,\n} from \"../models/endpointTransformationIn\";\nimport {\n  EndpointTransformationOut,\n  EndpointTransformationOutSerializer,\n} from \"../models/endpointTransformationOut\";\nimport {\n  EndpointTransformationPatch,\n  EndpointTransformationPatchSerializer,\n} from \"../models/endpointTransformationPatch\";\nimport { EndpointUpdate, EndpointUpdateSerializer } from \"../models/endpointUpdate\";\nimport { EventExampleIn, EventExampleInSerializer } from \"../models/eventExampleIn\";\nimport {\n  ListResponseEndpointOut,\n  ListResponseEndpointOutSerializer,\n} from \"../models/listResponseEndpointOut\";\nimport { MessageOut, MessageOutSerializer } from \"../models/messageOut\";\nimport { Ordering } from \"../models/ordering\";\nimport { RecoverIn, RecoverInSerializer } from \"../models/recoverIn\";\nimport { RecoverOut, RecoverOutSerializer } from \"../models/recoverOut\";\nimport { ReplayIn, ReplayInSerializer } from \"../models/replayIn\";\nimport { ReplayOut, ReplayOutSerializer } from \"../models/replayOut\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface EndpointListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n}\n\nexport interface EndpointCreateOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EndpointRecoverOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EndpointReplayMissingOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EndpointRotateSecretOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EndpointSendExampleOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EndpointGetStatsOptions {\n  /** Filter the range to data starting from this date. */\n  since?: Date | null;\n  /** Filter the range to data ending by this date. */\n  until?: Date | null;\n}\n\nexport class Endpoint {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** List the application's endpoints. */\n  public list(\n    appId: string,\n    options?: EndpointListOptions\n  ): Promise<ListResponseEndpointOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/app/{app_id}/endpoint\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseEndpointOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * Create a new endpoint for the application.\n   *\n   * When `secret` is `null` the secret is automatically generated (recommended).\n   */\n  public create(\n    appId: string,\n    endpointIn: EndpointIn,\n    options?: EndpointCreateOptions\n  ): Promise<EndpointOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/app/{app_id}/endpoint\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(EndpointInSerializer._toJsonObject(endpointIn));\n\n    return request.send(this.requestCtx, EndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Get an endpoint. */\n  public get(appId: string, endpointId: string): Promise<EndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(this.requestCtx, EndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Update an endpoint. */\n  public update(\n    appId: string,\n    endpointId: string,\n    endpointUpdate: EndpointUpdate\n  ): Promise<EndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(EndpointUpdateSerializer._toJsonObject(endpointUpdate));\n\n    return request.send(this.requestCtx, EndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Delete an endpoint. */\n  public delete(appId: string, endpointId: string): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** Partially update an endpoint. */\n  public patch(\n    appId: string,\n    endpointId: string,\n    endpointPatch: EndpointPatch\n  ): Promise<EndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.PATCH,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(EndpointPatchSerializer._toJsonObject(endpointPatch));\n\n    return request.send(this.requestCtx, EndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Get the additional headers to be sent with the webhook. */\n  public getHeaders(appId: string, endpointId: string): Promise<EndpointHeadersOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(this.requestCtx, EndpointHeadersOutSerializer._fromJsonObject);\n  }\n\n  /** Set the additional headers to be sent with the webhook. */\n  public updateHeaders(\n    appId: string,\n    endpointId: string,\n    endpointHeadersIn: EndpointHeadersIn\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(EndpointHeadersInSerializer._toJsonObject(endpointHeadersIn));\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  public headersUpdate(\n    appId: string,\n    endpointId: string,\n    endpointHeadersIn: EndpointHeadersIn\n  ): Promise<void> {\n    return this.updateHeaders(appId, endpointId, endpointHeadersIn);\n  }\n\n  /** Partially set the additional headers to be sent with the webhook. */\n  public patchHeaders(\n    appId: string,\n    endpointId: string,\n    endpointHeadersPatchIn: EndpointHeadersPatchIn\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.PATCH,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/headers\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(\n      EndpointHeadersPatchInSerializer._toJsonObject(endpointHeadersPatchIn)\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  public headersPatch(\n    appId: string,\n    endpointId: string,\n    endpointHeadersPatchIn: EndpointHeadersPatchIn\n  ): Promise<void> {\n    return this.patchHeaders(appId, endpointId, endpointHeadersPatchIn);\n  }\n\n  /**\n   * Resend all failed messages since a given time.\n   *\n   * Messages that were sent successfully, even if failed initially, are not resent.\n   */\n  public recover(\n    appId: string,\n    endpointId: string,\n    recoverIn: RecoverIn,\n    options?: EndpointRecoverOptions\n  ): Promise<RecoverOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/recover\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(RecoverInSerializer._toJsonObject(recoverIn));\n\n    return request.send(this.requestCtx, RecoverOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Replays messages to the endpoint.\n   *\n   * Only messages that were created after `since` will be sent.\n   * Messages that were previously sent to the endpoint are not resent.\n   */\n  public replayMissing(\n    appId: string,\n    endpointId: string,\n    replayIn: ReplayIn,\n    options?: EndpointReplayMissingOptions\n  ): Promise<ReplayOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/replay-missing\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(ReplayInSerializer._toJsonObject(replayIn));\n\n    return request.send(this.requestCtx, ReplayOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Get the endpoint's signing secret.\n   *\n   * This is used to verify the authenticity of the webhook.\n   * For more information please refer to [the consuming webhooks docs](https://docs.svix.com/consuming-webhooks/).\n   */\n  public getSecret(appId: string, endpointId: string): Promise<EndpointSecretOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(this.requestCtx, EndpointSecretOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Rotates the endpoint's signing secret.\n   *\n   * The previous secret will remain valid for the next 24 hours.\n   */\n  public rotateSecret(\n    appId: string,\n    endpointId: string,\n    endpointSecretRotateIn: EndpointSecretRotateIn,\n    options?: EndpointRotateSecretOptions\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/rotate\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      EndpointSecretRotateInSerializer._toJsonObject(endpointSecretRotateIn)\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** Send an example message for an event. */\n  public sendExample(\n    appId: string,\n    endpointId: string,\n    eventExampleIn: EventExampleIn,\n    options?: EndpointSendExampleOptions\n  ): Promise<MessageOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/send-example\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(EventExampleInSerializer._toJsonObject(eventExampleIn));\n\n    return request.send(this.requestCtx, MessageOutSerializer._fromJsonObject);\n  }\n\n  /** Get basic statistics for the endpoint. */\n  public getStats(\n    appId: string,\n    endpointId: string,\n    options?: EndpointGetStatsOptions\n  ): Promise<EndpointStats> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/stats\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setQueryParam(\"since\", options?.since);\n    request.setQueryParam(\"until\", options?.until);\n\n    return request.send(this.requestCtx, EndpointStatsSerializer._fromJsonObject);\n  }\n\n  /** Get the transformation code associated with this endpoint. */\n  public transformationGet(\n    appId: string,\n    endpointId: string\n  ): Promise<EndpointTransformationOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(\n      this.requestCtx,\n      EndpointTransformationOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Set or unset the transformation code associated with this endpoint. */\n  public patchTransformation(\n    appId: string,\n    endpointId: string,\n    endpointTransformationPatch: EndpointTransformationPatch\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.PATCH,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(\n      EndpointTransformationPatchSerializer._toJsonObject(endpointTransformationPatch)\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /**\n   * This operation was renamed to `set-transformation`.\n   *\n   * @deprecated\n   */\n  public transformationPartialUpdate(\n    appId: string,\n    endpointId: string,\n    endpointTransformationIn: EndpointTransformationIn\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.PATCH,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(\n      EndpointTransformationInSerializer._toJsonObject(endpointTransformationIn)\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport enum ConnectorKind {\n  Custom = \"Custom\",\n  CloseCrm = \"CloseCRM\",\n  CustomerIo = \"CustomerIO\",\n  Discord = \"Discord\",\n  Hubspot = \"Hubspot\",\n  Inngest = \"Inngest\",\n  Loops = \"Loops\",\n  Resend = \"Resend\",\n  Salesforce = \"Salesforce\",\n  Segment = \"Segment\",\n  Sendgrid = \"Sendgrid\",\n  Slack = \"Slack\",\n  Teams = \"Teams\",\n  TriggerDev = \"TriggerDev\",\n  Windmill = \"Windmill\",\n  Zapier = \"Zapier\",\n}\n\nexport const ConnectorKindSerializer = {\n  _fromJsonObject(object: any): ConnectorKind {\n    return object;\n  },\n\n  _toJsonObject(self: ConnectorKind): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { ConnectorKind, ConnectorKindSerializer } from \"./connectorKind\";\n\nexport interface ConnectorIn {\n  description?: string;\n  /**\n   * Deprecated - prefer featureFlags instead.\n   *\n   * @deprecated\n   */\n  featureFlag?: string | null;\n  featureFlags?: string[] | null;\n  filterTypes?: string[] | null;\n  instructions?: string;\n  instructionsLink?: string | null;\n  kind?: ConnectorKind;\n  logo: string;\n  name: string;\n  transformation: string;\n}\n\nexport const ConnectorInSerializer = {\n  _fromJsonObject(object: any): ConnectorIn {\n    return {\n      description: object[\"description\"],\n      featureFlag: object[\"featureFlag\"],\n      featureFlags: object[\"featureFlags\"],\n      filterTypes: object[\"filterTypes\"],\n      instructions: object[\"instructions\"],\n      instructionsLink: object[\"instructionsLink\"],\n      kind: object[\"kind\"]\n        ? ConnectorKindSerializer._fromJsonObject(object[\"kind\"])\n        : undefined,\n      logo: object[\"logo\"],\n      name: object[\"name\"],\n      transformation: object[\"transformation\"],\n    };\n  },\n\n  _toJsonObject(self: ConnectorIn): any {\n    return {\n      description: self.description,\n      featureFlag: self.featureFlag,\n      featureFlags: self.featureFlags,\n      filterTypes: self.filterTypes,\n      instructions: self.instructions,\n      instructionsLink: self.instructionsLink,\n      kind: self.kind ? ConnectorKindSerializer._toJsonObject(self.kind) : undefined,\n      logo: self.logo,\n      name: self.name,\n      transformation: self.transformation,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EventTypeIn {\n  archived?: boolean;\n  deprecated?: boolean;\n  description: string;\n  /**\n   * Deprecated - prefer featureFlags instead.\n   *\n   * @deprecated\n   */\n  featureFlag?: string | null;\n  featureFlags?: string[] | null;\n  /** The event type group's name */\n  groupName?: string | null;\n  /** The event type's name */\n  name: string;\n  /** The schema for the event type for a specific version as a JSON schema. */\n  schemas?: any | null;\n}\n\nexport const EventTypeInSerializer = {\n  _fromJsonObject(object: any): EventTypeIn {\n    return {\n      archived: object[\"archived\"],\n      deprecated: object[\"deprecated\"],\n      description: object[\"description\"],\n      featureFlag: object[\"featureFlag\"],\n      featureFlags: object[\"featureFlags\"],\n      groupName: object[\"groupName\"],\n      name: object[\"name\"],\n      schemas: object[\"schemas\"],\n    };\n  },\n\n  _toJsonObject(self: EventTypeIn): any {\n    return {\n      archived: self.archived,\n      deprecated: self.deprecated,\n      description: self.description,\n      featureFlag: self.featureFlag,\n      featureFlags: self.featureFlags,\n      groupName: self.groupName,\n      name: self.name,\n      schemas: self.schemas,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { ConnectorIn, ConnectorInSerializer } from \"./connectorIn\";\nimport { EventTypeIn, EventTypeInSerializer } from \"./eventTypeIn\";\n\nexport interface EnvironmentIn {\n  connectors?: ConnectorIn[] | null;\n  eventTypes?: EventTypeIn[] | null;\n  settings?: any | null;\n}\n\nexport const EnvironmentInSerializer = {\n  _fromJsonObject(object: any): EnvironmentIn {\n    return {\n      connectors: object[\"connectors\"]?.map((item: ConnectorIn) =>\n        ConnectorInSerializer._fromJsonObject(item)\n      ),\n      eventTypes: object[\"eventTypes\"]?.map((item: EventTypeIn) =>\n        EventTypeInSerializer._fromJsonObject(item)\n      ),\n      settings: object[\"settings\"],\n    };\n  },\n\n  _toJsonObject(self: EnvironmentIn): any {\n    return {\n      connectors: self.connectors?.map((item) =>\n        ConnectorInSerializer._toJsonObject(item)\n      ),\n      eventTypes: self.eventTypes?.map((item) =>\n        EventTypeInSerializer._toJsonObject(item)\n      ),\n      settings: self.settings,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { ConnectorKind, ConnectorKindSerializer } from \"./connectorKind\";\n\nexport interface ConnectorOut {\n  createdAt: Date;\n  description: string;\n  featureFlag?: string | null;\n  featureFlags?: string[] | null;\n  filterTypes?: string[] | null;\n  /** The Connector's ID. */\n  id: string;\n  instructions: string;\n  instructionsLink?: string | null;\n  kind: ConnectorKind;\n  logo: string;\n  name: string;\n  /** The Environment's ID. */\n  orgId: string;\n  transformation: string;\n  updatedAt: Date;\n}\n\nexport const ConnectorOutSerializer = {\n  _fromJsonObject(object: any): ConnectorOut {\n    return {\n      createdAt: new Date(object[\"createdAt\"]),\n      description: object[\"description\"],\n      featureFlag: object[\"featureFlag\"],\n      featureFlags: object[\"featureFlags\"],\n      filterTypes: object[\"filterTypes\"],\n      id: object[\"id\"],\n      instructions: object[\"instructions\"],\n      instructionsLink: object[\"instructionsLink\"],\n      kind: ConnectorKindSerializer._fromJsonObject(object[\"kind\"]),\n      logo: object[\"logo\"],\n      name: object[\"name\"],\n      orgId: object[\"orgId\"],\n      transformation: object[\"transformation\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n    };\n  },\n\n  _toJsonObject(self: ConnectorOut): any {\n    return {\n      createdAt: self.createdAt,\n      description: self.description,\n      featureFlag: self.featureFlag,\n      featureFlags: self.featureFlags,\n      filterTypes: self.filterTypes,\n      id: self.id,\n      instructions: self.instructions,\n      instructionsLink: self.instructionsLink,\n      kind: ConnectorKindSerializer._toJsonObject(self.kind),\n      logo: self.logo,\n      name: self.name,\n      orgId: self.orgId,\n      transformation: self.transformation,\n      updatedAt: self.updatedAt,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EventTypeOut {\n  archived?: boolean;\n  createdAt: Date;\n  deprecated: boolean;\n  description: string;\n  featureFlag?: string | null;\n  featureFlags?: string[] | null;\n  /** The event type group's name */\n  groupName?: string | null;\n  /** The event type's name */\n  name: string;\n  /** The schema for the event type for a specific version as a JSON schema. */\n  schemas?: any | null;\n  updatedAt: Date;\n}\n\nexport const EventTypeOutSerializer = {\n  _fromJsonObject(object: any): EventTypeOut {\n    return {\n      archived: object[\"archived\"],\n      createdAt: new Date(object[\"createdAt\"]),\n      deprecated: object[\"deprecated\"],\n      description: object[\"description\"],\n      featureFlag: object[\"featureFlag\"],\n      featureFlags: object[\"featureFlags\"],\n      groupName: object[\"groupName\"],\n      name: object[\"name\"],\n      schemas: object[\"schemas\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n    };\n  },\n\n  _toJsonObject(self: EventTypeOut): any {\n    return {\n      archived: self.archived,\n      createdAt: self.createdAt,\n      deprecated: self.deprecated,\n      description: self.description,\n      featureFlag: self.featureFlag,\n      featureFlags: self.featureFlags,\n      groupName: self.groupName,\n      name: self.name,\n      schemas: self.schemas,\n      updatedAt: self.updatedAt,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { ConnectorOut, ConnectorOutSerializer } from \"./connectorOut\";\nimport { EventTypeOut, EventTypeOutSerializer } from \"./eventTypeOut\";\n\nexport interface EnvironmentOut {\n  createdAt: Date;\n  eventTypes: EventTypeOut[];\n  settings: any | null;\n  transformationTemplates: ConnectorOut[];\n  version?: number;\n}\n\nexport const EnvironmentOutSerializer = {\n  _fromJsonObject(object: any): EnvironmentOut {\n    return {\n      createdAt: new Date(object[\"createdAt\"]),\n      eventTypes: object[\"eventTypes\"].map((item: EventTypeOut) =>\n        EventTypeOutSerializer._fromJsonObject(item)\n      ),\n      settings: object[\"settings\"],\n      transformationTemplates: object[\"transformationTemplates\"].map(\n        (item: ConnectorOut) => ConnectorOutSerializer._fromJsonObject(item)\n      ),\n      version: object[\"version\"],\n    };\n  },\n\n  _toJsonObject(self: EnvironmentOut): any {\n    return {\n      createdAt: self.createdAt,\n      eventTypes: self.eventTypes.map((item) =>\n        EventTypeOutSerializer._toJsonObject(item)\n      ),\n      settings: self.settings,\n      transformationTemplates: self.transformationTemplates.map((item) =>\n        ConnectorOutSerializer._toJsonObject(item)\n      ),\n      version: self.version,\n    };\n  },\n};\n", "// this file is @generated\n\nimport { EnvironmentIn, EnvironmentInSerializer } from \"../models/environmentIn\";\nimport { EnvironmentOut, EnvironmentOutSerializer } from \"../models/environmentOut\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface EnvironmentExportOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EnvironmentImportOptions {\n  idempotencyKey?: string;\n}\n\nexport class Environment {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** Download a JSON file containing all org-settings and event types. */\n  public export(options?: EnvironmentExportOptions): Promise<EnvironmentOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/environment/export\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n\n    return request.send(this.requestCtx, EnvironmentOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Import a configuration into the active organization.\n   *\n   * It doesn't delete anything, only adds / updates what was passed to it.\n   */\n  public import(\n    environmentIn: EnvironmentIn,\n    options?: EnvironmentImportOptions\n  ): Promise<void> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/environment/import\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(EnvironmentInSerializer._toJsonObject(environmentIn));\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\n/**\n * Import a list of event types from webhooks defined in an OpenAPI spec.\n *\n * The OpenAPI spec can be specified as either `spec` given the spec as a JSON object, or as `specRaw` (a `string`) which will be parsed as YAML or JSON by the server. Sending neither or both is invalid, resulting in a `400` **Bad Request**.\n */\nexport interface EventTypeImportOpenApiIn {\n  /** If `true`, return the event types that would be modified without actually modifying them. */\n  dryRun?: boolean;\n  /** If `true`, all existing event types that are not in the spec will be archived. */\n  replaceAll?: boolean;\n  /** A pre-parsed JSON spec. */\n  spec?: any | null;\n  /** A string, parsed by the server as YAML or JSON. */\n  specRaw?: string | null;\n}\n\nexport const EventTypeImportOpenApiInSerializer = {\n  _fromJsonObject(object: any): EventTypeImportOpenApiIn {\n    return {\n      dryRun: object[\"dryRun\"],\n      replaceAll: object[\"replaceAll\"],\n      spec: object[\"spec\"],\n      specRaw: object[\"specRaw\"],\n    };\n  },\n\n  _toJsonObject(self: EventTypeImportOpenApiIn): any {\n    return {\n      dryRun: self.dryRun,\n      replaceAll: self.replaceAll,\n      spec: self.spec,\n      specRaw: self.specRaw,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EventTypeFromOpenApi {\n  deprecated: boolean;\n  description: string;\n  featureFlag?: string | null;\n  featureFlags?: string[] | null;\n  /** The event type group's name */\n  groupName?: string | null;\n  /** The event type's name */\n  name: string;\n  schemas?: any | null;\n}\n\nexport const EventTypeFromOpenApiSerializer = {\n  _fromJsonObject(object: any): EventTypeFromOpenApi {\n    return {\n      deprecated: object[\"deprecated\"],\n      description: object[\"description\"],\n      featureFlag: object[\"featureFlag\"],\n      featureFlags: object[\"featureFlags\"],\n      groupName: object[\"groupName\"],\n      name: object[\"name\"],\n      schemas: object[\"schemas\"],\n    };\n  },\n\n  _toJsonObject(self: EventTypeFromOpenApi): any {\n    return {\n      deprecated: self.deprecated,\n      description: self.description,\n      featureFlag: self.featureFlag,\n      featureFlags: self.featureFlags,\n      groupName: self.groupName,\n      name: self.name,\n      schemas: self.schemas,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  EventTypeFromOpenApi,\n  EventTypeFromOpenApiSerializer,\n} from \"./eventTypeFromOpenApi\";\n\nexport interface EventTypeImportOpenApiOutData {\n  modified: string[];\n  toModify?: EventTypeFromOpenApi[] | null;\n}\n\nexport const EventTypeImportOpenApiOutDataSerializer = {\n  _fromJsonObject(object: any): EventTypeImportOpenApiOutData {\n    return {\n      modified: object[\"modified\"],\n      toModify: object[\"to_modify\"]?.map((item: EventTypeFromOpenApi) =>\n        EventTypeFromOpenApiSerializer._fromJsonObject(item)\n      ),\n    };\n  },\n\n  _toJsonObject(self: EventTypeImportOpenApiOutData): any {\n    return {\n      modified: self.modified,\n      to_modify: self.toModify?.map((item) =>\n        EventTypeFromOpenApiSerializer._toJsonObject(item)\n      ),\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  EventTypeImportOpenApiOutData,\n  EventTypeImportOpenApiOutDataSerializer,\n} from \"./eventTypeImportOpenApiOutData\";\n\nexport interface EventTypeImportOpenApiOut {\n  data: EventTypeImportOpenApiOutData;\n}\n\nexport const EventTypeImportOpenApiOutSerializer = {\n  _fromJsonObject(object: any): EventTypeImportOpenApiOut {\n    return {\n      data: EventTypeImportOpenApiOutDataSerializer._fromJsonObject(object[\"data\"]),\n    };\n  },\n\n  _toJsonObject(self: EventTypeImportOpenApiOut): any {\n    return {\n      data: EventTypeImportOpenApiOutDataSerializer._toJsonObject(self.data),\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EventTypePatch {\n  archived?: boolean;\n  deprecated?: boolean;\n  description?: string;\n  featureFlag?: string | null;\n  featureFlags?: string[] | null;\n  /** The event type group's name */\n  groupName?: string | null;\n  schemas?: any | null;\n}\n\nexport const EventTypePatchSerializer = {\n  _fromJsonObject(object: any): EventTypePatch {\n    return {\n      archived: object[\"archived\"],\n      deprecated: object[\"deprecated\"],\n      description: object[\"description\"],\n      featureFlag: object[\"featureFlag\"],\n      featureFlags: object[\"featureFlags\"],\n      groupName: object[\"groupName\"],\n      schemas: object[\"schemas\"],\n    };\n  },\n\n  _toJsonObject(self: EventTypePatch): any {\n    return {\n      archived: self.archived,\n      deprecated: self.deprecated,\n      description: self.description,\n      featureFlag: self.featureFlag,\n      featureFlags: self.featureFlags,\n      groupName: self.groupName,\n      schemas: self.schemas,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EventTypeUpdate {\n  archived?: boolean;\n  deprecated?: boolean;\n  description: string;\n  featureFlag?: string | null;\n  featureFlags?: string[] | null;\n  /** The event type group's name */\n  groupName?: string | null;\n  /** The schema for the event type for a specific version as a JSON schema. */\n  schemas?: any | null;\n}\n\nexport const EventTypeUpdateSerializer = {\n  _fromJsonObject(object: any): EventTypeUpdate {\n    return {\n      archived: object[\"archived\"],\n      deprecated: object[\"deprecated\"],\n      description: object[\"description\"],\n      featureFlag: object[\"featureFlag\"],\n      featureFlags: object[\"featureFlags\"],\n      groupName: object[\"groupName\"],\n      schemas: object[\"schemas\"],\n    };\n  },\n\n  _toJsonObject(self: EventTypeUpdate): any {\n    return {\n      archived: self.archived,\n      deprecated: self.deprecated,\n      description: self.description,\n      featureFlag: self.featureFlag,\n      featureFlags: self.featureFlags,\n      groupName: self.groupName,\n      schemas: self.schemas,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { EventTypeOut, EventTypeOutSerializer } from \"./eventTypeOut\";\n\nexport interface ListResponseEventTypeOut {\n  data: EventTypeOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseEventTypeOutSerializer = {\n  _fromJsonObject(object: any): ListResponseEventTypeOut {\n    return {\n      data: object[\"data\"].map((item: EventTypeOut) =>\n        EventTypeOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseEventTypeOut): any {\n    return {\n      data: self.data.map((item) => EventTypeOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  EventTypeImportOpenApiIn,\n  EventTypeImportOpenApiInSerializer,\n} from \"../models/eventTypeImportOpenApiIn\";\nimport {\n  EventTypeImportOpenApiOut,\n  EventTypeImportOpenApiOutSerializer,\n} from \"../models/eventTypeImportOpenApiOut\";\nimport { EventTypeIn, EventTypeInSerializer } from \"../models/eventTypeIn\";\nimport { EventTypeOut, EventTypeOutSerializer } from \"../models/eventTypeOut\";\nimport { EventTypePatch, EventTypePatchSerializer } from \"../models/eventTypePatch\";\nimport { EventTypeUpdate, EventTypeUpdateSerializer } from \"../models/eventTypeUpdate\";\nimport {\n  ListResponseEventTypeOut,\n  ListResponseEventTypeOutSerializer,\n} from \"../models/listResponseEventTypeOut\";\nimport { Ordering } from \"../models/ordering\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface EventTypeListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n  /** When `true` archived (deleted but not expunged) items are included in the response. */\n  includeArchived?: boolean;\n  /** When `true` the full item (including the schema) is included in the response. */\n  withContent?: boolean;\n}\n\nexport interface EventTypeCreateOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EventTypeImportOpenapiOptions {\n  idempotencyKey?: string;\n}\n\nexport interface EventTypeDeleteOptions {\n  /** By default event types are archived when \"deleted\". Passing this to `true` deletes them entirely. */\n  expunge?: boolean;\n}\n\nexport class EventType {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** Return the list of event types. */\n  public list(options?: EventTypeListOptions): Promise<ListResponseEventTypeOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/event-type\");\n\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n    request.setQueryParam(\"include_archived\", options?.includeArchived);\n    request.setQueryParam(\"with_content\", options?.withContent);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseEventTypeOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * Create new or unarchive existing event type.\n   *\n   * Unarchiving an event type will allow endpoints to filter on it and messages to be sent with it.\n   * Endpoints filtering on the event type before archival will continue to filter on it.\n   * This operation does not preserve the description and schemas.\n   */\n  public create(\n    eventTypeIn: EventTypeIn,\n    options?: EventTypeCreateOptions\n  ): Promise<EventTypeOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/event-type\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(EventTypeInSerializer._toJsonObject(eventTypeIn));\n\n    return request.send(this.requestCtx, EventTypeOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Given an OpenAPI spec, create new or update existing event types.\n   * If an existing `archived` event type is updated, it will be unarchived.\n   *\n   * The importer will convert all webhooks found in the either the `webhooks` or `x-webhooks`\n   * top-level.\n   */\n  public importOpenapi(\n    eventTypeImportOpenApiIn: EventTypeImportOpenApiIn,\n    options?: EventTypeImportOpenapiOptions\n  ): Promise<EventTypeImportOpenApiOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/event-type/import/openapi\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      EventTypeImportOpenApiInSerializer._toJsonObject(eventTypeImportOpenApiIn)\n    );\n\n    return request.send(\n      this.requestCtx,\n      EventTypeImportOpenApiOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Get an event type. */\n  public get(eventTypeName: string): Promise<EventTypeOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/event-type/{event_type_name}\"\n    );\n\n    request.setPathParam(\"event_type_name\", eventTypeName);\n\n    return request.send(this.requestCtx, EventTypeOutSerializer._fromJsonObject);\n  }\n\n  /** Update an event type. */\n  public update(\n    eventTypeName: string,\n    eventTypeUpdate: EventTypeUpdate\n  ): Promise<EventTypeOut> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/api/v1/event-type/{event_type_name}\"\n    );\n\n    request.setPathParam(\"event_type_name\", eventTypeName);\n    request.setBody(EventTypeUpdateSerializer._toJsonObject(eventTypeUpdate));\n\n    return request.send(this.requestCtx, EventTypeOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Archive an event type.\n   *\n   * Endpoints already configured to filter on an event type will continue to do so after archival.\n   * However, new messages can not be sent with it and endpoints can not filter on it.\n   * An event type can be unarchived with the\n   * [create operation](#operation/create_event_type_api_v1_event_type__post).\n   */\n  public delete(eventTypeName: string, options?: EventTypeDeleteOptions): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/api/v1/event-type/{event_type_name}\"\n    );\n\n    request.setPathParam(\"event_type_name\", eventTypeName);\n    request.setQueryParam(\"expunge\", options?.expunge);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** Partially update an event type. */\n  public patch(\n    eventTypeName: string,\n    eventTypePatch: EventTypePatch\n  ): Promise<EventTypeOut> {\n    const request = new SvixRequest(\n      HttpMethod.PATCH,\n      \"/api/v1/event-type/{event_type_name}\"\n    );\n\n    request.setPathParam(\"event_type_name\", eventTypeName);\n    request.setBody(EventTypePatchSerializer._toJsonObject(eventTypePatch));\n\n    return request.send(this.requestCtx, EventTypeOutSerializer._fromJsonObject);\n  }\n}\n", "// this file is @generated\n\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport class Health {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** Verify the API server is up and running. */\n  public get(): Promise<void> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/health\");\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestSourceConsumerPortalAccessIn {\n  /**\n   * How long the token will be valid for, in seconds.\n   *\n   * Valid values are between 1 hour and 7 days. The default is 7 days.\n   */\n  expiry?: number | null;\n  /** Whether the app portal should be in read-only mode. */\n  readOnly?: boolean | null;\n}\n\nexport const IngestSourceConsumerPortalAccessInSerializer = {\n  _fromJsonObject(object: any): IngestSourceConsumerPortalAccessIn {\n    return {\n      expiry: object[\"expiry\"],\n      readOnly: object[\"readOnly\"],\n    };\n  },\n\n  _toJsonObject(self: IngestSourceConsumerPortalAccessIn): any {\n    return {\n      expiry: self.expiry,\n      readOnly: self.readOnly,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointHeadersIn {\n  headers: { [key: string]: string };\n}\n\nexport const IngestEndpointHeadersInSerializer = {\n  _fromJsonObject(object: any): IngestEndpointHeadersIn {\n    return {\n      headers: object[\"headers\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointHeadersIn): any {\n    return {\n      headers: self.headers,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointHeadersOut {\n  headers: { [key: string]: string };\n  sensitive: string[];\n}\n\nexport const IngestEndpointHeadersOutSerializer = {\n  _fromJsonObject(object: any): IngestEndpointHeadersOut {\n    return {\n      headers: object[\"headers\"],\n      sensitive: object[\"sensitive\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointHeadersOut): any {\n    return {\n      headers: self.headers,\n      sensitive: self.sensitive,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointIn {\n  description?: string;\n  disabled?: boolean;\n  metadata?: { [key: string]: string };\n  rateLimit?: number | null;\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  secret?: string | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  url: string;\n}\n\nexport const IngestEndpointInSerializer = {\n  _fromJsonObject(object: any): IngestEndpointIn {\n    return {\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      secret: object[\"secret\"],\n      uid: object[\"uid\"],\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointIn): any {\n    return {\n      description: self.description,\n      disabled: self.disabled,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      secret: self.secret,\n      uid: self.uid,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointOut {\n  createdAt: Date;\n  /** An example endpoint name. */\n  description: string;\n  disabled?: boolean;\n  /** The Endpoint's ID. */\n  id: string;\n  metadata: { [key: string]: string };\n  rateLimit?: number | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  updatedAt: Date;\n  url: string;\n}\n\nexport const IngestEndpointOutSerializer = {\n  _fromJsonObject(object: any): IngestEndpointOut {\n    return {\n      createdAt: new Date(object[\"createdAt\"]),\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      id: object[\"id\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointOut): any {\n    return {\n      createdAt: self.createdAt,\n      description: self.description,\n      disabled: self.disabled,\n      id: self.id,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n      updatedAt: self.updatedAt,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointSecretIn {\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  key?: string | null;\n}\n\nexport const IngestEndpointSecretInSerializer = {\n  _fromJsonObject(object: any): IngestEndpointSecretIn {\n    return {\n      key: object[\"key\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointSecretIn): any {\n    return {\n      key: self.key,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointSecretOut {\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  key: string;\n}\n\nexport const IngestEndpointSecretOutSerializer = {\n  _fromJsonObject(object: any): IngestEndpointSecretOut {\n    return {\n      key: object[\"key\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointSecretOut): any {\n    return {\n      key: self.key,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointTransformationOut {\n  code?: string | null;\n  enabled?: boolean;\n}\n\nexport const IngestEndpointTransformationOutSerializer = {\n  _fromJsonObject(object: any): IngestEndpointTransformationOut {\n    return {\n      code: object[\"code\"],\n      enabled: object[\"enabled\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointTransformationOut): any {\n    return {\n      code: self.code,\n      enabled: self.enabled,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointTransformationPatch {\n  code?: string | null;\n  enabled?: boolean;\n}\n\nexport const IngestEndpointTransformationPatchSerializer = {\n  _fromJsonObject(object: any): IngestEndpointTransformationPatch {\n    return {\n      code: object[\"code\"],\n      enabled: object[\"enabled\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointTransformationPatch): any {\n    return {\n      code: self.code,\n      enabled: self.enabled,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IngestEndpointUpdate {\n  description?: string;\n  disabled?: boolean;\n  metadata?: { [key: string]: string };\n  rateLimit?: number | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  url: string;\n}\n\nexport const IngestEndpointUpdateSerializer = {\n  _fromJsonObject(object: any): IngestEndpointUpdate {\n    return {\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: IngestEndpointUpdate): any {\n    return {\n      description: self.description,\n      disabled: self.disabled,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { IngestEndpointOut, IngestEndpointOutSerializer } from \"./ingestEndpointOut\";\n\nexport interface ListResponseIngestEndpointOut {\n  data: IngestEndpointOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseIngestEndpointOutSerializer = {\n  _fromJsonObject(object: any): ListResponseIngestEndpointOut {\n    return {\n      data: object[\"data\"].map((item: IngestEndpointOut) =>\n        IngestEndpointOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseIngestEndpointOut): any {\n    return {\n      data: self.data.map((item) => IngestEndpointOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  IngestEndpointHeadersIn,\n  IngestEndpointHeadersInSerializer,\n} from \"../models/ingestEndpointHeadersIn\";\nimport {\n  IngestEndpointHeadersOut,\n  IngestEndpointHeadersOutSerializer,\n} from \"../models/ingestEndpointHeadersOut\";\nimport { IngestEndpointIn, IngestEndpointInSerializer } from \"../models/ingestEndpointIn\";\nimport {\n  IngestEndpointOut,\n  IngestEndpointOutSerializer,\n} from \"../models/ingestEndpointOut\";\nimport {\n  IngestEndpointSecretIn,\n  IngestEndpointSecretInSerializer,\n} from \"../models/ingestEndpointSecretIn\";\nimport {\n  IngestEndpointSecretOut,\n  IngestEndpointSecretOutSerializer,\n} from \"../models/ingestEndpointSecretOut\";\nimport {\n  IngestEndpointTransformationOut,\n  IngestEndpointTransformationOutSerializer,\n} from \"../models/ingestEndpointTransformationOut\";\nimport {\n  IngestEndpointTransformationPatch,\n  IngestEndpointTransformationPatchSerializer,\n} from \"../models/ingestEndpointTransformationPatch\";\nimport {\n  IngestEndpointUpdate,\n  IngestEndpointUpdateSerializer,\n} from \"../models/ingestEndpointUpdate\";\nimport {\n  ListResponseIngestEndpointOut,\n  ListResponseIngestEndpointOutSerializer,\n} from \"../models/listResponseIngestEndpointOut\";\nimport { Ordering } from \"../models/ordering\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface IngestEndpointListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n}\n\nexport interface IngestEndpointCreateOptions {\n  idempotencyKey?: string;\n}\n\nexport interface IngestEndpointRotateSecretOptions {\n  idempotencyKey?: string;\n}\n\nexport class IngestEndpoint {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** List ingest endpoints. */\n  public list(\n    sourceId: string,\n    options?: IngestEndpointListOptions\n  ): Promise<ListResponseIngestEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/ingest/api/v1/source/{source_id}/endpoint\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseIngestEndpointOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Create an ingest endpoint. */\n  public create(\n    sourceId: string,\n    ingestEndpointIn: IngestEndpointIn,\n    options?: IngestEndpointCreateOptions\n  ): Promise<IngestEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/ingest/api/v1/source/{source_id}/endpoint\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(IngestEndpointInSerializer._toJsonObject(ingestEndpointIn));\n\n    return request.send(this.requestCtx, IngestEndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Get an ingest endpoint. */\n  public get(sourceId: string, endpointId: string): Promise<IngestEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(this.requestCtx, IngestEndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Update an ingest endpoint. */\n  public update(\n    sourceId: string,\n    endpointId: string,\n    ingestEndpointUpdate: IngestEndpointUpdate\n  ): Promise<IngestEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(IngestEndpointUpdateSerializer._toJsonObject(ingestEndpointUpdate));\n\n    return request.send(this.requestCtx, IngestEndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Delete an ingest endpoint. */\n  public delete(sourceId: string, endpointId: string): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** Get the additional headers to be sent with the ingest. */\n  public getHeaders(\n    sourceId: string,\n    endpointId: string\n  ): Promise<IngestEndpointHeadersOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/headers\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(\n      this.requestCtx,\n      IngestEndpointHeadersOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Set the additional headers to be sent to the endpoint. */\n  public updateHeaders(\n    sourceId: string,\n    endpointId: string,\n    ingestEndpointHeadersIn: IngestEndpointHeadersIn\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/headers\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(\n      IngestEndpointHeadersInSerializer._toJsonObject(ingestEndpointHeadersIn)\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /**\n   * Get an ingest endpoint's signing secret.\n   *\n   * This is used to verify the authenticity of the webhook.\n   * For more information please refer to [the consuming webhooks docs](https://docs.svix.com/consuming-webhooks/).\n   */\n  public getSecret(\n    sourceId: string,\n    endpointId: string\n  ): Promise<IngestEndpointSecretOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/secret\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(\n      this.requestCtx,\n      IngestEndpointSecretOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * Rotates an ingest endpoint's signing secret.\n   *\n   * The previous secret will remain valid for the next 24 hours.\n   */\n  public rotateSecret(\n    sourceId: string,\n    endpointId: string,\n    ingestEndpointSecretIn: IngestEndpointSecretIn,\n    options?: IngestEndpointRotateSecretOptions\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/secret/rotate\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      IngestEndpointSecretInSerializer._toJsonObject(ingestEndpointSecretIn)\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** Get the transformation code associated with this ingest endpoint. */\n  public getTransformation(\n    sourceId: string,\n    endpointId: string\n  ): Promise<IngestEndpointTransformationOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/transformation\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(\n      this.requestCtx,\n      IngestEndpointTransformationOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Set or unset the transformation code associated with this ingest endpoint. */\n  public setTransformation(\n    sourceId: string,\n    endpointId: string,\n    ingestEndpointTransformationPatch: IngestEndpointTransformationPatch\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.PATCH,\n      \"/ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/transformation\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(\n      IngestEndpointTransformationPatchSerializer._toJsonObject(\n        ingestEndpointTransformationPatch\n      )\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface AdobeSignConfig {\n  clientId: string;\n}\n\nexport const AdobeSignConfigSerializer = {\n  _fromJsonObject(object: any): AdobeSignConfig {\n    return {\n      clientId: object[\"clientId\"],\n    };\n  },\n\n  _toJsonObject(self: AdobeSignConfig): any {\n    return {\n      clientId: self.clientId,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface AirwallexConfig {\n  secret: string;\n}\n\nexport const AirwallexConfigSerializer = {\n  _fromJsonObject(object: any): AirwallexConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: AirwallexConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface CheckbookConfig {\n  secret: string;\n}\n\nexport const CheckbookConfigSerializer = {\n  _fromJsonObject(object: any): CheckbookConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: CheckbookConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface CronConfig {\n  /**\n   * Override the default content-type.\n   *\n   * Recommended if the payload is not JSON.\n   */\n  contentType?: string | null;\n  payload: string;\n  schedule: string;\n}\n\nexport const CronConfigSerializer = {\n  _fromJsonObject(object: any): CronConfig {\n    return {\n      contentType: object[\"contentType\"],\n      payload: object[\"payload\"],\n      schedule: object[\"schedule\"],\n    };\n  },\n\n  _toJsonObject(self: CronConfig): any {\n    return {\n      contentType: self.contentType,\n      payload: self.payload,\n      schedule: self.schedule,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface DocusignConfig {\n  secret?: string | null;\n}\n\nexport const DocusignConfigSerializer = {\n  _fromJsonObject(object: any): DocusignConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: DocusignConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface EasypostConfig {\n  secret?: string | null;\n}\n\nexport const EasypostConfigSerializer = {\n  _fromJsonObject(object: any): EasypostConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: EasypostConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface GithubConfig {\n  secret?: string | null;\n}\n\nexport const GithubConfigSerializer = {\n  _fromJsonObject(object: any): GithubConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: GithubConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface HubspotConfig {\n  secret?: string | null;\n}\n\nexport const HubspotConfigSerializer = {\n  _fromJsonObject(object: any): HubspotConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: HubspotConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OrumIoConfig {\n  publicKey: string;\n}\n\nexport const OrumIoConfigSerializer = {\n  _fromJsonObject(object: any): OrumIoConfig {\n    return {\n      publicKey: object[\"publicKey\"],\n    };\n  },\n\n  _toJsonObject(self: OrumIoConfig): any {\n    return {\n      publicKey: self.publicKey,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface PandaDocConfig {\n  secret: string;\n}\n\nexport const PandaDocConfigSerializer = {\n  _fromJsonObject(object: any): PandaDocConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: PandaDocConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface PortIoConfig {\n  secret: string;\n}\n\nexport const PortIoConfigSerializer = {\n  _fromJsonObject(object: any): PortIoConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: PortIoConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface RutterConfig {\n  secret: string;\n}\n\nexport const RutterConfigSerializer = {\n  _fromJsonObject(object: any): RutterConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: RutterConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface SegmentConfig {\n  secret?: string | null;\n}\n\nexport const SegmentConfigSerializer = {\n  _fromJsonObject(object: any): SegmentConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: SegmentConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface ShopifyConfig {\n  secret: string;\n}\n\nexport const ShopifyConfigSerializer = {\n  _fromJsonObject(object: any): ShopifyConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: ShopifyConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface SlackConfig {\n  secret: string;\n}\n\nexport const SlackConfigSerializer = {\n  _fromJsonObject(object: any): SlackConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: SlackConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface StripeConfig {\n  secret: string;\n}\n\nexport const StripeConfigSerializer = {\n  _fromJsonObject(object: any): StripeConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: StripeConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface SvixConfig {\n  secret: string;\n}\n\nexport const SvixConfigSerializer = {\n  _fromJsonObject(object: any): SvixConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: SvixConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface TelnyxConfig {\n  publicKey: string;\n}\n\nexport const TelnyxConfigSerializer = {\n  _fromJsonObject(object: any): TelnyxConfig {\n    return {\n      publicKey: object[\"publicKey\"],\n    };\n  },\n\n  _toJsonObject(self: TelnyxConfig): any {\n    return {\n      publicKey: self.publicKey,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface VapiConfig {\n  secret: string;\n}\n\nexport const VapiConfigSerializer = {\n  _fromJsonObject(object: any): VapiConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: VapiConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface VeriffConfig {\n  secret: string;\n}\n\nexport const VeriffConfigSerializer = {\n  _fromJsonObject(object: any): VeriffConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: VeriffConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface ZoomConfig {\n  secret: string;\n}\n\nexport const ZoomConfigSerializer = {\n  _fromJsonObject(object: any): ZoomConfig {\n    return {\n      secret: object[\"secret\"],\n    };\n  },\n\n  _toJsonObject(self: ZoomConfig): any {\n    return {\n      secret: self.secret,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { AdobeSignConfig, AdobeSignConfigSerializer } from \"./adobeSignConfig\";\nimport { AirwallexConfig, AirwallexConfigSerializer } from \"./airwallexConfig\";\nimport { CheckbookConfig, CheckbookConfigSerializer } from \"./checkbookConfig\";\nimport { CronConfig, CronConfigSerializer } from \"./cronConfig\";\nimport { DocusignConfig, DocusignConfigSerializer } from \"./docusignConfig\";\nimport { EasypostConfig, EasypostConfigSerializer } from \"./easypostConfig\";\nimport { GithubConfig, GithubConfigSerializer } from \"./githubConfig\";\nimport { HubspotConfig, HubspotConfigSerializer } from \"./hubspotConfig\";\nimport { OrumIoConfig, OrumIoConfigSerializer } from \"./orumIoConfig\";\nimport { PandaDocConfig, PandaDocConfigSerializer } from \"./pandaDocConfig\";\nimport { PortIoConfig, PortIoConfigSerializer } from \"./portIoConfig\";\nimport { RutterConfig, RutterConfigSerializer } from \"./rutterConfig\";\nimport { SegmentConfig, SegmentConfigSerializer } from \"./segmentConfig\";\nimport { ShopifyConfig, ShopifyConfigSerializer } from \"./shopifyConfig\";\nimport { SlackConfig, SlackConfigSerializer } from \"./slackConfig\";\nimport { StripeConfig, StripeConfigSerializer } from \"./stripeConfig\";\nimport { SvixConfig, SvixConfigSerializer } from \"./svixConfig\";\nimport { TelnyxConfig, TelnyxConfigSerializer } from \"./telnyxConfig\";\nimport { VapiConfig, VapiConfigSerializer } from \"./vapiConfig\";\nimport { VeriffConfig, VeriffConfigSerializer } from \"./veriffConfig\";\nimport { ZoomConfig, ZoomConfigSerializer } from \"./zoomConfig\";\ninterface _IngestSourceInFields {\n  metadata?: { [key: string]: string };\n  name: string;\n  /** The Source's UID. */\n  uid?: string | null;\n}\n\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\ninterface IngestSourceInGenericWebhookConfig {}\n\ninterface IngestSourceInGenericWebhook {\n  type: \"generic-webhook\";\n  config?: IngestSourceInGenericWebhookConfig;\n}\n\ninterface IngestSourceInCron {\n  type: \"cron\";\n  config: CronConfig;\n}\n\ninterface IngestSourceInAdobeSign {\n  type: \"adobe-sign\";\n  config: AdobeSignConfig;\n}\n\ninterface IngestSourceInBeehiiv {\n  type: \"beehiiv\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInBrex {\n  type: \"brex\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInCheckbook {\n  type: \"checkbook\";\n  config: CheckbookConfig;\n}\n\ninterface IngestSourceInClerk {\n  type: \"clerk\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInDocusign {\n  type: \"docusign\";\n  config: DocusignConfig;\n}\n\ninterface IngestSourceInEasypost {\n  type: \"easypost\";\n  config: EasypostConfig;\n}\n\ninterface IngestSourceInGithub {\n  type: \"github\";\n  config: GithubConfig;\n}\n\ninterface IngestSourceInGuesty {\n  type: \"guesty\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInHubspot {\n  type: \"hubspot\";\n  config: HubspotConfig;\n}\n\ninterface IngestSourceInIncidentIo {\n  type: \"incident-io\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInLithic {\n  type: \"lithic\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInNash {\n  type: \"nash\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInOrumIo {\n  type: \"orum-io\";\n  config: OrumIoConfig;\n}\n\ninterface IngestSourceInPandaDoc {\n  type: \"panda-doc\";\n  config: PandaDocConfig;\n}\n\ninterface IngestSourceInPortIo {\n  type: \"port-io\";\n  config: PortIoConfig;\n}\n\ninterface IngestSourceInPleo {\n  type: \"pleo\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInReplicate {\n  type: \"replicate\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInResend {\n  type: \"resend\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInRutter {\n  type: \"rutter\";\n  config: RutterConfig;\n}\n\ninterface IngestSourceInSafebase {\n  type: \"safebase\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInSardine {\n  type: \"sardine\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInSegment {\n  type: \"segment\";\n  config: SegmentConfig;\n}\n\ninterface IngestSourceInShopify {\n  type: \"shopify\";\n  config: ShopifyConfig;\n}\n\ninterface IngestSourceInSlack {\n  type: \"slack\";\n  config: SlackConfig;\n}\n\ninterface IngestSourceInStripe {\n  type: \"stripe\";\n  config: StripeConfig;\n}\n\ninterface IngestSourceInStych {\n  type: \"stych\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInSvix {\n  type: \"svix\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInZoom {\n  type: \"zoom\";\n  config: ZoomConfig;\n}\n\ninterface IngestSourceInTelnyx {\n  type: \"telnyx\";\n  config: TelnyxConfig;\n}\n\ninterface IngestSourceInVapi {\n  type: \"vapi\";\n  config: VapiConfig;\n}\n\ninterface IngestSourceInOpenAi {\n  type: \"open-ai\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInRender {\n  type: \"render\";\n  config: SvixConfig;\n}\n\ninterface IngestSourceInVeriff {\n  type: \"veriff\";\n  config: VeriffConfig;\n}\n\ninterface IngestSourceInAirwallex {\n  type: \"airwallex\";\n  config: AirwallexConfig;\n}\n\nexport type IngestSourceIn = _IngestSourceInFields &\n  (\n    | IngestSourceInGenericWebhook\n    | IngestSourceInCron\n    | IngestSourceInAdobeSign\n    | IngestSourceInBeehiiv\n    | IngestSourceInBrex\n    | IngestSourceInCheckbook\n    | IngestSourceInClerk\n    | IngestSourceInDocusign\n    | IngestSourceInEasypost\n    | IngestSourceInGithub\n    | IngestSourceInGuesty\n    | IngestSourceInHubspot\n    | IngestSourceInIncidentIo\n    | IngestSourceInLithic\n    | IngestSourceInNash\n    | IngestSourceInOrumIo\n    | IngestSourceInPandaDoc\n    | IngestSourceInPortIo\n    | IngestSourceInPleo\n    | IngestSourceInReplicate\n    | IngestSourceInResend\n    | IngestSourceInRutter\n    | IngestSourceInSafebase\n    | IngestSourceInSardine\n    | IngestSourceInSegment\n    | IngestSourceInShopify\n    | IngestSourceInSlack\n    | IngestSourceInStripe\n    | IngestSourceInStych\n    | IngestSourceInSvix\n    | IngestSourceInZoom\n    | IngestSourceInTelnyx\n    | IngestSourceInVapi\n    | IngestSourceInOpenAi\n    | IngestSourceInRender\n    | IngestSourceInVeriff\n    | IngestSourceInAirwallex\n  );\n\nexport const IngestSourceInSerializer = {\n  _fromJsonObject(object: any): IngestSourceIn {\n    const type = object[\"type\"];\n\n    function getConfig(type: string): any {\n      switch (type) {\n        case \"generic-webhook\":\n          return {};\n        case \"cron\":\n          return CronConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"adobe-sign\":\n          return AdobeSignConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"beehiiv\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"brex\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"checkbook\":\n          return CheckbookConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"clerk\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"docusign\":\n          return DocusignConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"easypost\":\n          return EasypostConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"github\":\n          return GithubConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"guesty\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"hubspot\":\n          return HubspotConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"incident-io\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"lithic\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"nash\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"orum-io\":\n          return OrumIoConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"panda-doc\":\n          return PandaDocConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"port-io\":\n          return PortIoConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"pleo\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"replicate\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"resend\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"rutter\":\n          return RutterConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"safebase\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"sardine\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"segment\":\n          return SegmentConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"shopify\":\n          return ShopifyConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"slack\":\n          return SlackConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"stripe\":\n          return StripeConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"stych\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"svix\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"zoom\":\n          return ZoomConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"telnyx\":\n          return TelnyxConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"vapi\":\n          return VapiConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"open-ai\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"render\":\n          return SvixConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"veriff\":\n          return VeriffConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"airwallex\":\n          return AirwallexConfigSerializer._fromJsonObject(object[\"config\"]);\n        default:\n          throw new Error(`Unexpected type: ${type}`);\n      }\n    }\n    return {\n      type,\n      config: getConfig(type),\n      metadata: object[\"metadata\"],\n      name: object[\"name\"],\n      uid: object[\"uid\"],\n    };\n  },\n\n  _toJsonObject(self: IngestSourceIn): any {\n    let config;\n    switch (self.type) {\n      case \"generic-webhook\":\n        config = {};\n        break;\n      case \"cron\":\n        config = CronConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"adobe-sign\":\n        config = AdobeSignConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"beehiiv\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"brex\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"checkbook\":\n        config = CheckbookConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"clerk\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"docusign\":\n        config = DocusignConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"easypost\":\n        config = EasypostConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"github\":\n        config = GithubConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"guesty\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"hubspot\":\n        config = HubspotConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"incident-io\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"lithic\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"nash\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"orum-io\":\n        config = OrumIoConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"panda-doc\":\n        config = PandaDocConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"port-io\":\n        config = PortIoConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"pleo\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"replicate\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"resend\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"rutter\":\n        config = RutterConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"safebase\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"sardine\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"segment\":\n        config = SegmentConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"shopify\":\n        config = ShopifyConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"slack\":\n        config = SlackConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"stripe\":\n        config = StripeConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"stych\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"svix\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"zoom\":\n        config = ZoomConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"telnyx\":\n        config = TelnyxConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"vapi\":\n        config = VapiConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"open-ai\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"render\":\n        config = SvixConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"veriff\":\n        config = VeriffConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"airwallex\":\n        config = AirwallexConfigSerializer._toJsonObject(self.config);\n        break;\n    }\n\n    return {\n      type: self.type,\n      config: config,\n      metadata: self.metadata,\n      name: self.name,\n      uid: self.uid,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface AdobeSignConfigOut {}\n\nexport const AdobeSignConfigOutSerializer = {\n  _fromJsonObject(object: any): AdobeSignConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: AdobeSignConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface AirwallexConfigOut {}\n\nexport const AirwallexConfigOutSerializer = {\n  _fromJsonObject(object: any): AirwallexConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: AirwallexConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface CheckbookConfigOut {}\n\nexport const CheckbookConfigOutSerializer = {\n  _fromJsonObject(object: any): CheckbookConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: CheckbookConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface DocusignConfigOut {}\n\nexport const DocusignConfigOutSerializer = {\n  _fromJsonObject(object: any): DocusignConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: DocusignConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface EasypostConfigOut {}\n\nexport const EasypostConfigOutSerializer = {\n  _fromJsonObject(object: any): EasypostConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: EasypostConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface GithubConfigOut {}\n\nexport const GithubConfigOutSerializer = {\n  _fromJsonObject(object: any): GithubConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: GithubConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface HubspotConfigOut {}\n\nexport const HubspotConfigOutSerializer = {\n  _fromJsonObject(object: any): HubspotConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: HubspotConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OrumIoConfigOut {\n  publicKey: string;\n}\n\nexport const OrumIoConfigOutSerializer = {\n  _fromJsonObject(object: any): OrumIoConfigOut {\n    return {\n      publicKey: object[\"publicKey\"],\n    };\n  },\n\n  _toJsonObject(self: OrumIoConfigOut): any {\n    return {\n      publicKey: self.publicKey,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface PandaDocConfigOut {}\n\nexport const PandaDocConfigOutSerializer = {\n  _fromJsonObject(object: any): PandaDocConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: PandaDocConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface PortIoConfigOut {}\n\nexport const PortIoConfigOutSerializer = {\n  _fromJsonObject(object: any): PortIoConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: PortIoConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface RutterConfigOut {}\n\nexport const RutterConfigOutSerializer = {\n  _fromJsonObject(object: any): RutterConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: RutterConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface SegmentConfigOut {}\n\nexport const SegmentConfigOutSerializer = {\n  _fromJsonObject(object: any): SegmentConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: SegmentConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface ShopifyConfigOut {}\n\nexport const ShopifyConfigOutSerializer = {\n  _fromJsonObject(object: any): ShopifyConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: ShopifyConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface SlackConfigOut {}\n\nexport const SlackConfigOutSerializer = {\n  _fromJsonObject(object: any): SlackConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: SlackConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface StripeConfigOut {}\n\nexport const StripeConfigOutSerializer = {\n  _fromJsonObject(object: any): StripeConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: StripeConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface SvixConfigOut {}\n\nexport const SvixConfigOutSerializer = {\n  _fromJsonObject(object: any): SvixConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: SvixConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface TelnyxConfigOut {\n  publicKey: string;\n}\n\nexport const TelnyxConfigOutSerializer = {\n  _fromJsonObject(object: any): TelnyxConfigOut {\n    return {\n      publicKey: object[\"publicKey\"],\n    };\n  },\n\n  _toJsonObject(self: TelnyxConfigOut): any {\n    return {\n      publicKey: self.publicKey,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface VapiConfigOut {}\n\nexport const VapiConfigOutSerializer = {\n  _fromJsonObject(object: any): VapiConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: VapiConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface VeriffConfigOut {}\n\nexport const VeriffConfigOutSerializer = {\n  _fromJsonObject(object: any): VeriffConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: VeriffConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\n/* eslint @typescript-eslint/no-unused-vars: 0 */\n\nexport interface ZoomConfigOut {}\n\nexport const ZoomConfigOutSerializer = {\n  _fromJsonObject(object: any): ZoomConfigOut {\n    return {};\n  },\n\n  _toJsonObject(self: ZoomConfigOut): any {\n    return {};\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { AdobeSignConfigOut, AdobeSignConfigOutSerializer } from \"./adobeSignConfigOut\";\nimport { AirwallexConfigOut, AirwallexConfigOutSerializer } from \"./airwallexConfigOut\";\nimport { CheckbookConfigOut, CheckbookConfigOutSerializer } from \"./checkbookConfigOut\";\nimport { CronConfig, CronConfigSerializer } from \"./cronConfig\";\nimport { DocusignConfigOut, DocusignConfigOutSerializer } from \"./docusignConfigOut\";\nimport { EasypostConfigOut, EasypostConfigOutSerializer } from \"./easypostConfigOut\";\nimport { GithubConfigOut, GithubConfigOutSerializer } from \"./githubConfigOut\";\nimport { HubspotConfigOut, HubspotConfigOutSerializer } from \"./hubspotConfigOut\";\nimport { OrumIoConfigOut, OrumIoConfigOutSerializer } from \"./orumIoConfigOut\";\nimport { PandaDocConfigOut, PandaDocConfigOutSerializer } from \"./pandaDocConfigOut\";\nimport { PortIoConfigOut, PortIoConfigOutSerializer } from \"./portIoConfigOut\";\nimport { RutterConfigOut, RutterConfigOutSerializer } from \"./rutterConfigOut\";\nimport { SegmentConfigOut, SegmentConfigOutSerializer } from \"./segmentConfigOut\";\nimport { ShopifyConfigOut, ShopifyConfigOutSerializer } from \"./shopifyConfigOut\";\nimport { SlackConfigOut, SlackConfigOutSerializer } from \"./slackConfigOut\";\nimport { StripeConfigOut, StripeConfigOutSerializer } from \"./stripeConfigOut\";\nimport { SvixConfigOut, SvixConfigOutSerializer } from \"./svixConfigOut\";\nimport { TelnyxConfigOut, TelnyxConfigOutSerializer } from \"./telnyxConfigOut\";\nimport { VapiConfigOut, VapiConfigOutSerializer } from \"./vapiConfigOut\";\nimport { VeriffConfigOut, VeriffConfigOutSerializer } from \"./veriffConfigOut\";\nimport { ZoomConfigOut, ZoomConfigOutSerializer } from \"./zoomConfigOut\";\ninterface _IngestSourceOutFields {\n  createdAt: Date;\n  /** The Source's ID. */\n  id: string;\n  ingestUrl?: string | null;\n  metadata: { [key: string]: string };\n  name: string;\n  /** The Source's UID. */\n  uid?: string | null;\n  updatedAt: Date;\n}\n\n/* eslint @typescript-eslint/no-empty-object-type: 0 */\ninterface IngestSourceOutGenericWebhookConfig {}\n\ninterface IngestSourceOutGenericWebhook {\n  type: \"generic-webhook\";\n  config?: IngestSourceOutGenericWebhookConfig;\n}\n\ninterface IngestSourceOutCron {\n  type: \"cron\";\n  config: CronConfig;\n}\n\ninterface IngestSourceOutAdobeSign {\n  type: \"adobe-sign\";\n  config: AdobeSignConfigOut;\n}\n\ninterface IngestSourceOutBeehiiv {\n  type: \"beehiiv\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutBrex {\n  type: \"brex\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutCheckbook {\n  type: \"checkbook\";\n  config: CheckbookConfigOut;\n}\n\ninterface IngestSourceOutClerk {\n  type: \"clerk\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutDocusign {\n  type: \"docusign\";\n  config: DocusignConfigOut;\n}\n\ninterface IngestSourceOutEasypost {\n  type: \"easypost\";\n  config: EasypostConfigOut;\n}\n\ninterface IngestSourceOutGithub {\n  type: \"github\";\n  config: GithubConfigOut;\n}\n\ninterface IngestSourceOutGuesty {\n  type: \"guesty\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutHubspot {\n  type: \"hubspot\";\n  config: HubspotConfigOut;\n}\n\ninterface IngestSourceOutIncidentIo {\n  type: \"incident-io\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutLithic {\n  type: \"lithic\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutNash {\n  type: \"nash\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutOrumIo {\n  type: \"orum-io\";\n  config: OrumIoConfigOut;\n}\n\ninterface IngestSourceOutPandaDoc {\n  type: \"panda-doc\";\n  config: PandaDocConfigOut;\n}\n\ninterface IngestSourceOutPortIo {\n  type: \"port-io\";\n  config: PortIoConfigOut;\n}\n\ninterface IngestSourceOutPleo {\n  type: \"pleo\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutReplicate {\n  type: \"replicate\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutResend {\n  type: \"resend\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutRutter {\n  type: \"rutter\";\n  config: RutterConfigOut;\n}\n\ninterface IngestSourceOutSafebase {\n  type: \"safebase\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutSardine {\n  type: \"sardine\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutSegment {\n  type: \"segment\";\n  config: SegmentConfigOut;\n}\n\ninterface IngestSourceOutShopify {\n  type: \"shopify\";\n  config: ShopifyConfigOut;\n}\n\ninterface IngestSourceOutSlack {\n  type: \"slack\";\n  config: SlackConfigOut;\n}\n\ninterface IngestSourceOutStripe {\n  type: \"stripe\";\n  config: StripeConfigOut;\n}\n\ninterface IngestSourceOutStych {\n  type: \"stych\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutSvix {\n  type: \"svix\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutZoom {\n  type: \"zoom\";\n  config: ZoomConfigOut;\n}\n\ninterface IngestSourceOutTelnyx {\n  type: \"telnyx\";\n  config: TelnyxConfigOut;\n}\n\ninterface IngestSourceOutVapi {\n  type: \"vapi\";\n  config: VapiConfigOut;\n}\n\ninterface IngestSourceOutOpenAi {\n  type: \"open-ai\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutRender {\n  type: \"render\";\n  config: SvixConfigOut;\n}\n\ninterface IngestSourceOutVeriff {\n  type: \"veriff\";\n  config: VeriffConfigOut;\n}\n\ninterface IngestSourceOutAirwallex {\n  type: \"airwallex\";\n  config: AirwallexConfigOut;\n}\n\nexport type IngestSourceOut = _IngestSourceOutFields &\n  (\n    | IngestSourceOutGenericWebhook\n    | IngestSourceOutCron\n    | IngestSourceOutAdobeSign\n    | IngestSourceOutBeehiiv\n    | IngestSourceOutBrex\n    | IngestSourceOutCheckbook\n    | IngestSourceOutClerk\n    | IngestSourceOutDocusign\n    | IngestSourceOutEasypost\n    | IngestSourceOutGithub\n    | IngestSourceOutGuesty\n    | IngestSourceOutHubspot\n    | IngestSourceOutIncidentIo\n    | IngestSourceOutLithic\n    | IngestSourceOutNash\n    | IngestSourceOutOrumIo\n    | IngestSourceOutPandaDoc\n    | IngestSourceOutPortIo\n    | IngestSourceOutPleo\n    | IngestSourceOutReplicate\n    | IngestSourceOutResend\n    | IngestSourceOutRutter\n    | IngestSourceOutSafebase\n    | IngestSourceOutSardine\n    | IngestSourceOutSegment\n    | IngestSourceOutShopify\n    | IngestSourceOutSlack\n    | IngestSourceOutStripe\n    | IngestSourceOutStych\n    | IngestSourceOutSvix\n    | IngestSourceOutZoom\n    | IngestSourceOutTelnyx\n    | IngestSourceOutVapi\n    | IngestSourceOutOpenAi\n    | IngestSourceOutRender\n    | IngestSourceOutVeriff\n    | IngestSourceOutAirwallex\n  );\n\nexport const IngestSourceOutSerializer = {\n  _fromJsonObject(object: any): IngestSourceOut {\n    const type = object[\"type\"];\n\n    function getConfig(type: string): any {\n      switch (type) {\n        case \"generic-webhook\":\n          return {};\n        case \"cron\":\n          return CronConfigSerializer._fromJsonObject(object[\"config\"]);\n        case \"adobe-sign\":\n          return AdobeSignConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"beehiiv\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"brex\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"checkbook\":\n          return CheckbookConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"clerk\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"docusign\":\n          return DocusignConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"easypost\":\n          return EasypostConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"github\":\n          return GithubConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"guesty\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"hubspot\":\n          return HubspotConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"incident-io\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"lithic\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"nash\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"orum-io\":\n          return OrumIoConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"panda-doc\":\n          return PandaDocConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"port-io\":\n          return PortIoConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"pleo\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"replicate\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"resend\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"rutter\":\n          return RutterConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"safebase\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"sardine\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"segment\":\n          return SegmentConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"shopify\":\n          return ShopifyConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"slack\":\n          return SlackConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"stripe\":\n          return StripeConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"stych\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"svix\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"zoom\":\n          return ZoomConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"telnyx\":\n          return TelnyxConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"vapi\":\n          return VapiConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"open-ai\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"render\":\n          return SvixConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"veriff\":\n          return VeriffConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        case \"airwallex\":\n          return AirwallexConfigOutSerializer._fromJsonObject(object[\"config\"]);\n        default:\n          throw new Error(`Unexpected type: ${type}`);\n      }\n    }\n    return {\n      type,\n      config: getConfig(type),\n      createdAt: new Date(object[\"createdAt\"]),\n      id: object[\"id\"],\n      ingestUrl: object[\"ingestUrl\"],\n      metadata: object[\"metadata\"],\n      name: object[\"name\"],\n      uid: object[\"uid\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n    };\n  },\n\n  _toJsonObject(self: IngestSourceOut): any {\n    let config;\n    switch (self.type) {\n      case \"generic-webhook\":\n        config = {};\n        break;\n      case \"cron\":\n        config = CronConfigSerializer._toJsonObject(self.config);\n        break;\n      case \"adobe-sign\":\n        config = AdobeSignConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"beehiiv\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"brex\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"checkbook\":\n        config = CheckbookConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"clerk\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"docusign\":\n        config = DocusignConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"easypost\":\n        config = EasypostConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"github\":\n        config = GithubConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"guesty\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"hubspot\":\n        config = HubspotConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"incident-io\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"lithic\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"nash\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"orum-io\":\n        config = OrumIoConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"panda-doc\":\n        config = PandaDocConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"port-io\":\n        config = PortIoConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"pleo\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"replicate\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"resend\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"rutter\":\n        config = RutterConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"safebase\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"sardine\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"segment\":\n        config = SegmentConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"shopify\":\n        config = ShopifyConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"slack\":\n        config = SlackConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"stripe\":\n        config = StripeConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"stych\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"svix\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"zoom\":\n        config = ZoomConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"telnyx\":\n        config = TelnyxConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"vapi\":\n        config = VapiConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"open-ai\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"render\":\n        config = SvixConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"veriff\":\n        config = VeriffConfigOutSerializer._toJsonObject(self.config);\n        break;\n      case \"airwallex\":\n        config = AirwallexConfigOutSerializer._toJsonObject(self.config);\n        break;\n    }\n\n    return {\n      type: self.type,\n      config: config,\n      createdAt: self.createdAt,\n      id: self.id,\n      ingestUrl: self.ingestUrl,\n      metadata: self.metadata,\n      name: self.name,\n      uid: self.uid,\n      updatedAt: self.updatedAt,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { IngestSourceOut, IngestSourceOutSerializer } from \"./ingestSourceOut\";\n\nexport interface ListResponseIngestSourceOut {\n  data: IngestSourceOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseIngestSourceOutSerializer = {\n  _fromJsonObject(object: any): ListResponseIngestSourceOut {\n    return {\n      data: object[\"data\"].map((item: IngestSourceOut) =>\n        IngestSourceOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseIngestSourceOut): any {\n    return {\n      data: self.data.map((item) => IngestSourceOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface RotateTokenOut {\n  ingestUrl: string;\n}\n\nexport const RotateTokenOutSerializer = {\n  _fromJsonObject(object: any): RotateTokenOut {\n    return {\n      ingestUrl: object[\"ingestUrl\"],\n    };\n  },\n\n  _toJsonObject(self: RotateTokenOut): any {\n    return {\n      ingestUrl: self.ingestUrl,\n    };\n  },\n};\n", "// this file is @generated\n\nimport { IngestSourceIn, IngestSourceInSerializer } from \"../models/ingestSourceIn\";\nimport { IngestSourceOut, IngestSourceOutSerializer } from \"../models/ingestSourceOut\";\nimport {\n  ListResponseIngestSourceOut,\n  ListResponseIngestSourceOutSerializer,\n} from \"../models/listResponseIngestSourceOut\";\nimport { Ordering } from \"../models/ordering\";\nimport { RotateTokenOut, RotateTokenOutSerializer } from \"../models/rotateTokenOut\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface IngestSourceListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n}\n\nexport interface IngestSourceCreateOptions {\n  idempotencyKey?: string;\n}\n\nexport interface IngestSourceRotateTokenOptions {\n  idempotencyKey?: string;\n}\n\nexport class IngestSource {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** List of all the organization's Ingest Sources. */\n  public list(options?: IngestSourceListOptions): Promise<ListResponseIngestSourceOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/ingest/api/v1/source\");\n\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseIngestSourceOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Create Ingest Source. */\n  public create(\n    ingestSourceIn: IngestSourceIn,\n    options?: IngestSourceCreateOptions\n  ): Promise<IngestSourceOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/ingest/api/v1/source\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(IngestSourceInSerializer._toJsonObject(ingestSourceIn));\n\n    return request.send(this.requestCtx, IngestSourceOutSerializer._fromJsonObject);\n  }\n\n  /** Get an Ingest Source by id or uid. */\n  public get(sourceId: string): Promise<IngestSourceOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/ingest/api/v1/source/{source_id}\");\n\n    request.setPathParam(\"source_id\", sourceId);\n\n    return request.send(this.requestCtx, IngestSourceOutSerializer._fromJsonObject);\n  }\n\n  /** Update an Ingest Source. */\n  public update(\n    sourceId: string,\n    ingestSourceIn: IngestSourceIn\n  ): Promise<IngestSourceOut> {\n    const request = new SvixRequest(HttpMethod.PUT, \"/ingest/api/v1/source/{source_id}\");\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setBody(IngestSourceInSerializer._toJsonObject(ingestSourceIn));\n\n    return request.send(this.requestCtx, IngestSourceOutSerializer._fromJsonObject);\n  }\n\n  /** Delete an Ingest Source. */\n  public delete(sourceId: string): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/ingest/api/v1/source/{source_id}\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /**\n   * Rotate the Ingest Source's Url Token.\n   *\n   * This will rotate the ingest source's token, which is used to\n   * construct the unique `ingestUrl` for the source. Previous tokens\n   * will remain valid for 48 hours after rotation. The token can be\n   * rotated a maximum of three times within the 48-hour period.\n   */\n  public rotateToken(\n    sourceId: string,\n    options?: IngestSourceRotateTokenOptions\n  ): Promise<RotateTokenOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/ingest/api/v1/source/{source_id}/token/rotate\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n\n    return request.send(this.requestCtx, RotateTokenOutSerializer._fromJsonObject);\n  }\n}\n", "// this file is @generated\n\nimport {\n  DashboardAccessOut,\n  DashboardAccessOutSerializer,\n} from \"../models/dashboardAccessOut\";\nimport {\n  IngestSourceConsumerPortalAccessIn,\n  IngestSourceConsumerPortalAccessInSerializer,\n} from \"../models/ingestSourceConsumerPortalAccessIn\";\nimport { IngestEndpoint } from \"./ingestEndpoint\";\nimport { IngestSource } from \"./ingestSource\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface IngestDashboardOptions {\n  idempotencyKey?: string;\n}\n\nexport class Ingest {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  public get endpoint() {\n    return new IngestEndpoint(this.requestCtx);\n  }\n\n  public get source() {\n    return new IngestSource(this.requestCtx);\n  }\n\n  /** Get access to the Ingest Source Consumer Portal. */\n  public dashboard(\n    sourceId: string,\n    ingestSourceConsumerPortalAccessIn: IngestSourceConsumerPortalAccessIn,\n    options?: IngestDashboardOptions\n  ): Promise<DashboardAccessOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/ingest/api/v1/source/{source_id}/dashboard\"\n    );\n\n    request.setPathParam(\"source_id\", sourceId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      IngestSourceConsumerPortalAccessInSerializer._toJsonObject(\n        ingestSourceConsumerPortalAccessIn\n      )\n    );\n\n    return request.send(this.requestCtx, DashboardAccessOutSerializer._fromJsonObject);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IntegrationIn {\n  /** The set of feature flags the integration will have access to. */\n  featureFlags?: string[];\n  name: string;\n}\n\nexport const IntegrationInSerializer = {\n  _fromJsonObject(object: any): IntegrationIn {\n    return {\n      featureFlags: object[\"featureFlags\"],\n      name: object[\"name\"],\n    };\n  },\n\n  _toJsonObject(self: IntegrationIn): any {\n    return {\n      featureFlags: self.featureFlags,\n      name: self.name,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IntegrationKeyOut {\n  key: string;\n}\n\nexport const IntegrationKeyOutSerializer = {\n  _fromJsonObject(object: any): IntegrationKeyOut {\n    return {\n      key: object[\"key\"],\n    };\n  },\n\n  _toJsonObject(self: IntegrationKeyOut): any {\n    return {\n      key: self.key,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IntegrationOut {\n  createdAt: Date;\n  /** The set of feature flags the integration has access to. */\n  featureFlags?: string[];\n  /** The Integration's ID. */\n  id: string;\n  name: string;\n  updatedAt: Date;\n}\n\nexport const IntegrationOutSerializer = {\n  _fromJsonObject(object: any): IntegrationOut {\n    return {\n      createdAt: new Date(object[\"createdAt\"]),\n      featureFlags: object[\"featureFlags\"],\n      id: object[\"id\"],\n      name: object[\"name\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n    };\n  },\n\n  _toJsonObject(self: IntegrationOut): any {\n    return {\n      createdAt: self.createdAt,\n      featureFlags: self.featureFlags,\n      id: self.id,\n      name: self.name,\n      updatedAt: self.updatedAt,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface IntegrationUpdate {\n  /** The set of feature flags the integration will have access to. */\n  featureFlags?: string[];\n  name: string;\n}\n\nexport const IntegrationUpdateSerializer = {\n  _fromJsonObject(object: any): IntegrationUpdate {\n    return {\n      featureFlags: object[\"featureFlags\"],\n      name: object[\"name\"],\n    };\n  },\n\n  _toJsonObject(self: IntegrationUpdate): any {\n    return {\n      featureFlags: self.featureFlags,\n      name: self.name,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { IntegrationOut, IntegrationOutSerializer } from \"./integrationOut\";\n\nexport interface ListResponseIntegrationOut {\n  data: IntegrationOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseIntegrationOutSerializer = {\n  _fromJsonObject(object: any): ListResponseIntegrationOut {\n    return {\n      data: object[\"data\"].map((item: IntegrationOut) =>\n        IntegrationOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseIntegrationOut): any {\n    return {\n      data: self.data.map((item) => IntegrationOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n\nimport { IntegrationIn, IntegrationInSerializer } from \"../models/integrationIn\";\nimport {\n  IntegrationKeyOut,\n  IntegrationKeyOutSerializer,\n} from \"../models/integrationKeyOut\";\nimport { IntegrationOut, IntegrationOutSerializer } from \"../models/integrationOut\";\nimport {\n  IntegrationUpdate,\n  IntegrationUpdateSerializer,\n} from \"../models/integrationUpdate\";\nimport {\n  ListResponseIntegrationOut,\n  ListResponseIntegrationOutSerializer,\n} from \"../models/listResponseIntegrationOut\";\nimport { Ordering } from \"../models/ordering\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface IntegrationListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n}\n\nexport interface IntegrationCreateOptions {\n  idempotencyKey?: string;\n}\n\nexport interface IntegrationRotateKeyOptions {\n  idempotencyKey?: string;\n}\n\nexport class Integration {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** List the application's integrations. */\n  public list(\n    appId: string,\n    options?: IntegrationListOptions\n  ): Promise<ListResponseIntegrationOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/app/{app_id}/integration\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseIntegrationOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Create an integration. */\n  public create(\n    appId: string,\n    integrationIn: IntegrationIn,\n    options?: IntegrationCreateOptions\n  ): Promise<IntegrationOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/app/{app_id}/integration\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(IntegrationInSerializer._toJsonObject(integrationIn));\n\n    return request.send(this.requestCtx, IntegrationOutSerializer._fromJsonObject);\n  }\n\n  /** Get an integration. */\n  public get(appId: string, integId: string): Promise<IntegrationOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/integration/{integ_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"integ_id\", integId);\n\n    return request.send(this.requestCtx, IntegrationOutSerializer._fromJsonObject);\n  }\n\n  /** Update an integration. */\n  public update(\n    appId: string,\n    integId: string,\n    integrationUpdate: IntegrationUpdate\n  ): Promise<IntegrationOut> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/api/v1/app/{app_id}/integration/{integ_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"integ_id\", integId);\n    request.setBody(IntegrationUpdateSerializer._toJsonObject(integrationUpdate));\n\n    return request.send(this.requestCtx, IntegrationOutSerializer._fromJsonObject);\n  }\n\n  /** Delete an integration. */\n  public delete(appId: string, integId: string): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/api/v1/app/{app_id}/integration/{integ_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"integ_id\", integId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /**\n   * Get an integration's key.\n   *\n   * @deprecated\n   */\n  public getKey(appId: string, integId: string): Promise<IntegrationKeyOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/integration/{integ_id}/key\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"integ_id\", integId);\n\n    return request.send(this.requestCtx, IntegrationKeyOutSerializer._fromJsonObject);\n  }\n\n  /** Rotate the integration's key. The previous key will be immediately revoked. */\n  public rotateKey(\n    appId: string,\n    integId: string,\n    options?: IntegrationRotateKeyOptions\n  ): Promise<IntegrationKeyOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/integration/{integ_id}/key/rotate\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"integ_id\", integId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n\n    return request.send(this.requestCtx, IntegrationKeyOutSerializer._fromJsonObject);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  BackgroundTaskStatus,\n  BackgroundTaskStatusSerializer,\n} from \"./backgroundTaskStatus\";\nimport { BackgroundTaskType, BackgroundTaskTypeSerializer } from \"./backgroundTaskType\";\n\nexport interface ExpungeAllContentsOut {\n  /** The QueueBackgroundTask's ID. */\n  id: string;\n  status: BackgroundTaskStatus;\n  task: BackgroundTaskType;\n}\n\nexport const ExpungeAllContentsOutSerializer = {\n  _fromJsonObject(object: any): ExpungeAllContentsOut {\n    return {\n      id: object[\"id\"],\n      status: BackgroundTaskStatusSerializer._fromJsonObject(object[\"status\"]),\n      task: BackgroundTaskTypeSerializer._fromJsonObject(object[\"task\"]),\n    };\n  },\n\n  _toJsonObject(self: ExpungeAllContentsOut): any {\n    return {\n      id: self.id,\n      status: BackgroundTaskStatusSerializer._toJsonObject(self.status),\n      task: BackgroundTaskTypeSerializer._toJsonObject(self.task),\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { MessageOut, MessageOutSerializer } from \"./messageOut\";\n\nexport interface ListResponseMessageOut {\n  data: MessageOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseMessageOutSerializer = {\n  _fromJsonObject(object: any): ListResponseMessageOut {\n    return {\n      data: object[\"data\"].map((item: MessageOut) =>\n        MessageOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseMessageOut): any {\n    return {\n      data: self.data.map((item) => MessageOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface PollingEndpointConsumerSeekIn {\n  after: Date;\n}\n\nexport const PollingEndpointConsumerSeekInSerializer = {\n  _fromJsonObject(object: any): PollingEndpointConsumerSeekIn {\n    return {\n      after: new Date(object[\"after\"]),\n    };\n  },\n\n  _toJsonObject(self: PollingEndpointConsumerSeekIn): any {\n    return {\n      after: self.after,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface PollingEndpointConsumerSeekOut {\n  iterator: string;\n}\n\nexport const PollingEndpointConsumerSeekOutSerializer = {\n  _fromJsonObject(object: any): PollingEndpointConsumerSeekOut {\n    return {\n      iterator: object[\"iterator\"],\n    };\n  },\n\n  _toJsonObject(self: PollingEndpointConsumerSeekOut): any {\n    return {\n      iterator: self.iterator,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\n/** The MessageOut equivalent of polling endpoint */\nexport interface PollingEndpointMessageOut {\n  /** List of free-form identifiers that endpoints can filter by */\n  channels?: string[] | null;\n  /** Optional unique identifier for the message */\n  eventId?: string | null;\n  /** The event type's name */\n  eventType: string;\n  headers?: { [key: string]: string } | null;\n  /** The Message's ID. */\n  id: string;\n  payload: any;\n  tags?: string[] | null;\n  timestamp: Date;\n}\n\nexport const PollingEndpointMessageOutSerializer = {\n  _fromJsonObject(object: any): PollingEndpointMessageOut {\n    return {\n      channels: object[\"channels\"],\n      eventId: object[\"eventId\"],\n      eventType: object[\"eventType\"],\n      headers: object[\"headers\"],\n      id: object[\"id\"],\n      payload: object[\"payload\"],\n      tags: object[\"tags\"],\n      timestamp: new Date(object[\"timestamp\"]),\n    };\n  },\n\n  _toJsonObject(self: PollingEndpointMessageOut): any {\n    return {\n      channels: self.channels,\n      eventId: self.eventId,\n      eventType: self.eventType,\n      headers: self.headers,\n      id: self.id,\n      payload: self.payload,\n      tags: self.tags,\n      timestamp: self.timestamp,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  PollingEndpointMessageOut,\n  PollingEndpointMessageOutSerializer,\n} from \"./pollingEndpointMessageOut\";\n\nexport interface PollingEndpointOut {\n  data: PollingEndpointMessageOut[];\n  done: boolean;\n  iterator: string;\n}\n\nexport const PollingEndpointOutSerializer = {\n  _fromJsonObject(object: any): PollingEndpointOut {\n    return {\n      data: object[\"data\"].map((item: PollingEndpointMessageOut) =>\n        PollingEndpointMessageOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n    };\n  },\n\n  _toJsonObject(self: PollingEndpointOut): any {\n    return {\n      data: self.data.map((item) =>\n        PollingEndpointMessageOutSerializer._toJsonObject(item)\n      ),\n      done: self.done,\n      iterator: self.iterator,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  PollingEndpointConsumerSeekIn,\n  PollingEndpointConsumerSeekInSerializer,\n} from \"../models/pollingEndpointConsumerSeekIn\";\nimport {\n  PollingEndpointConsumerSeekOut,\n  PollingEndpointConsumerSeekOutSerializer,\n} from \"../models/pollingEndpointConsumerSeekOut\";\nimport {\n  PollingEndpointOut,\n  PollingEndpointOutSerializer,\n} from \"../models/pollingEndpointOut\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface MessagePollerPollOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** Filters messages sent with this event type (optional). */\n  eventType?: string;\n  /** Filters messages sent with this channel (optional). */\n  channel?: string;\n  after?: Date | null;\n}\n\nexport interface MessagePollerConsumerPollOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n}\n\nexport interface MessagePollerConsumerSeekOptions {\n  idempotencyKey?: string;\n}\n\nexport class MessagePoller {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** Reads the stream of created messages for an application, filtered on the Sink's event types and Channels. */\n  public poll(\n    appId: string,\n    sinkId: string,\n    options?: MessagePollerPollOptions\n  ): Promise<PollingEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/poller/{sink_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"sink_id\", sinkId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"event_type\", options?.eventType);\n    request.setQueryParam(\"channel\", options?.channel);\n    request.setQueryParam(\"after\", options?.after);\n\n    return request.send(this.requestCtx, PollingEndpointOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Reads the stream of created messages for an application, filtered on the Sink's event types and\n   * Channels, using server-managed iterator tracking.\n   */\n  public consumerPoll(\n    appId: string,\n    sinkId: string,\n    consumerId: string,\n    options?: MessagePollerConsumerPollOptions\n  ): Promise<PollingEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/poller/{sink_id}/consumer/{consumer_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"sink_id\", sinkId);\n    request.setPathParam(\"consumer_id\", consumerId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n\n    return request.send(this.requestCtx, PollingEndpointOutSerializer._fromJsonObject);\n  }\n\n  /** Sets the starting offset for the consumer of a polling endpoint. */\n  public consumerSeek(\n    appId: string,\n    sinkId: string,\n    consumerId: string,\n    pollingEndpointConsumerSeekIn: PollingEndpointConsumerSeekIn,\n    options?: MessagePollerConsumerSeekOptions\n  ): Promise<PollingEndpointConsumerSeekOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/poller/{sink_id}/consumer/{consumer_id}/seek\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"sink_id\", sinkId);\n    request.setPathParam(\"consumer_id\", consumerId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      PollingEndpointConsumerSeekInSerializer._toJsonObject(pollingEndpointConsumerSeekIn)\n    );\n\n    return request.send(\n      this.requestCtx,\n      PollingEndpointConsumerSeekOutSerializer._fromJsonObject\n    );\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { ApplicationIn, ApplicationInSerializer } from \"./applicationIn\";\n\nexport interface MessageIn {\n  /**\n   * Optionally creates a new application alongside the message.\n   *\n   * If the application id or uid that is used in the path already exists, this argument is ignored.\n   */\n  application?: ApplicationIn | null;\n  /** List of free-form identifiers that endpoints can filter by */\n  channels?: string[] | null;\n  /** Optional unique identifier for the message */\n  eventId?: string | null;\n  /** The event type's name */\n  eventType: string;\n  /**\n   * JSON payload to send as the request body of the webhook.\n   *\n   * We also support sending non-JSON payloads. Please contact us for more information.\n   */\n  payload: any;\n  /** Optional number of hours to retain the message payload. Note that this is mutually exclusive with `payloadRetentionPeriod`. */\n  payloadRetentionHours?: number | null;\n  /** Optional number of days to retain the message payload. Defaults to 90. Note that this is mutually exclusive with `payloadRetentionHours`. */\n  payloadRetentionPeriod?: number | null;\n  /** List of free-form tags that can be filtered by when listing messages */\n  tags?: string[] | null;\n  /** Extra parameters to pass to Transformations (for future use) */\n  transformationsParams?: any | null;\n}\n\nexport const MessageInSerializer = {\n  _fromJsonObject(object: any): MessageIn {\n    return {\n      application: object[\"application\"]\n        ? ApplicationInSerializer._fromJsonObject(object[\"application\"])\n        : undefined,\n      channels: object[\"channels\"],\n      eventId: object[\"eventId\"],\n      eventType: object[\"eventType\"],\n      payload: object[\"payload\"],\n      payloadRetentionHours: object[\"payloadRetentionHours\"],\n      payloadRetentionPeriod: object[\"payloadRetentionPeriod\"],\n      tags: object[\"tags\"],\n      transformationsParams: object[\"transformationsParams\"],\n    };\n  },\n\n  _toJsonObject(self: MessageIn): any {\n    return {\n      application: self.application\n        ? ApplicationInSerializer._toJsonObject(self.application)\n        : undefined,\n      channels: self.channels,\n      eventId: self.eventId,\n      eventType: self.eventType,\n      payload: self.payload,\n      payloadRetentionHours: self.payloadRetentionHours,\n      payloadRetentionPeriod: self.payloadRetentionPeriod,\n      tags: self.tags,\n      transformationsParams: self.transformationsParams,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  ExpungeAllContentsOut,\n  ExpungeAllContentsOutSerializer,\n} from \"../models/expungeAllContentsOut\";\nimport {\n  ListResponseMessageOut,\n  ListResponseMessageOutSerializer,\n} from \"../models/listResponseMessageOut\";\nimport { MessageOut, MessageOutSerializer } from \"../models/messageOut\";\nimport { MessagePoller } from \"./messagePoller\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\nimport { MessageIn, MessageInSerializer } from \"../models/messageIn\";\n\nexport interface MessageListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** Filter response based on the channel. */\n  channel?: string;\n  /** Only include items created before a certain date. */\n  before?: Date | null;\n  /** Only include items created after a certain date. */\n  after?: Date | null;\n  /** When `true` message payloads are included in the response. */\n  withContent?: boolean;\n  /** Filter messages matching the provided tag. */\n  tag?: string;\n  /** Filter response based on the event type */\n  eventTypes?: string[];\n}\n\nexport interface MessageCreateOptions {\n  /** When `true`, message payloads are included in the response. */\n  withContent?: boolean;\n  idempotencyKey?: string;\n}\n\nexport interface MessageExpungeAllContentsOptions {\n  idempotencyKey?: string;\n}\n\nexport interface MessageGetOptions {\n  /** When `true` message payloads are included in the response. */\n  withContent?: boolean;\n}\n\nexport class Message {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  public get poller() {\n    return new MessagePoller(this.requestCtx);\n  }\n\n  /**\n   * List all of the application's messages.\n   *\n   * The `before` and `after` parameters let you filter all items created before or after a certain date. These can be used alongside an iterator to paginate over results\n   * within a certain window.\n   *\n   * Note that by default this endpoint is limited to retrieving 90 days' worth of data\n   * relative to now or, if an iterator is provided, 90 days before/after the time indicated\n   * by the iterator ID. If you require data beyond those time ranges, you will need to explicitly\n   * set the `before` or `after` parameter as appropriate.\n   */\n  public list(\n    appId: string,\n    options?: MessageListOptions\n  ): Promise<ListResponseMessageOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/app/{app_id}/msg\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"channel\", options?.channel);\n    request.setQueryParam(\"before\", options?.before);\n    request.setQueryParam(\"after\", options?.after);\n    request.setQueryParam(\"with_content\", options?.withContent);\n    request.setQueryParam(\"tag\", options?.tag);\n    request.setQueryParam(\"event_types\", options?.eventTypes);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseMessageOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * Creates a new message and dispatches it to all of the application's endpoints.\n   *\n   * The `eventId` is an optional custom unique ID. It's verified to be unique only up to a day, after that no verification will be made.\n   * If a message with the same `eventId` already exists for the application, a 409 conflict error will be returned.\n   *\n   * The `eventType` indicates the type and schema of the event. All messages of a certain `eventType` are expected to have the same schema. Endpoints can choose to only listen to specific event types.\n   * Messages can also have `channels`, which similar to event types let endpoints filter by them. Unlike event types, messages can have multiple channels, and channels don't imply a specific message content or schema.\n   *\n   * The `payload` property is the webhook's body (the actual webhook message). Svix supports payload sizes of up to 1MiB, though it's generally a good idea to keep webhook payloads small, probably no larger than 40kb.\n   */\n  public create(\n    appId: string,\n    messageIn: MessageIn,\n    options?: MessageCreateOptions\n  ): Promise<MessageOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/app/{app_id}/msg\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setQueryParam(\"with_content\", options?.withContent);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(MessageInSerializer._toJsonObject(messageIn));\n\n    return request.send(this.requestCtx, MessageOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Delete all message payloads for the application.\n   *\n   * This operation is only available in the <a href=\"https://svix.com/pricing\" target=\"_blank\">Enterprise</a> plan.\n   */\n  public expungeAllContents(\n    appId: string,\n    options?: MessageExpungeAllContentsOptions\n  ): Promise<ExpungeAllContentsOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/msg/expunge-all-contents\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n\n    return request.send(this.requestCtx, ExpungeAllContentsOutSerializer._fromJsonObject);\n  }\n\n  /** Get a message by its ID or eventID. */\n  public get(\n    appId: string,\n    msgId: string,\n    options?: MessageGetOptions\n  ): Promise<MessageOut> {\n    const request = new SvixRequest(HttpMethod.GET, \"/api/v1/app/{app_id}/msg/{msg_id}\");\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"msg_id\", msgId);\n    request.setQueryParam(\"with_content\", options?.withContent);\n\n    return request.send(this.requestCtx, MessageOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Delete the given message's payload.\n   *\n   * Useful in cases when a message was accidentally sent with sensitive content.\n   * The message can't be replayed or resent once its payload has been deleted or expired.\n   */\n  public expungeContent(appId: string, msgId: string): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/api/v1/app/{app_id}/msg/{msg_id}/content\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"msg_id\", msgId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n\n/**\n * Creates a `MessageIn` with a raw string payload.\n *\n * The payload is not normalized on the server. Normally, payloads are\n * required to be JSON, and Svix will minify the payload before sending the\n * webhooks (for example, by removing extraneous whitespace or unnecessarily\n * escaped characters in strings). With this function, the payload will be\n * sent \"as is\", without any minification or other processing.\n *\n * @param payload Serialized message payload\n * @param contentType The value to use for the Content-Type header of the webhook sent by Svix, overwriting the default of `application/json` if specified\n *\n * See the class documentation for details about the other parameters.\n */\nexport function messageInRaw(\n  eventType: string,\n  payload: string,\n  contentType?: string\n): MessageIn {\n  const headers = contentType ? { \"content-type\": contentType } : undefined;\n\n  return {\n    eventType,\n    payload: {},\n    transformationsParams: {\n      rawPayload: payload,\n      headers,\n    },\n  };\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/**\n * The sending status of the message:\n *\n * - Success = 0\n * - Pending = 1\n * - Fail = 2\n * - Sending = 3\n */\nexport enum MessageStatus {\n  Success = 0,\n  Pending = 1,\n  Fail = 2,\n  Sending = 3,\n}\n\nexport const MessageStatusSerializer = {\n  _fromJsonObject(object: any): MessageStatus {\n    return object;\n  },\n\n  _toJsonObject(self: MessageStatus): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport enum MessageStatusText {\n  Success = \"success\",\n  Pending = \"pending\",\n  Fail = \"fail\",\n  Sending = \"sending\",\n}\n\nexport const MessageStatusTextSerializer = {\n  _fromJsonObject(object: any): MessageStatusText {\n    return object;\n  },\n\n  _toJsonObject(self: MessageStatusText): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { MessageStatus, MessageStatusSerializer } from \"./messageStatus\";\nimport { MessageStatusText, MessageStatusTextSerializer } from \"./messageStatusText\";\n\n/** A model containing information on a given message plus additional fields on the last attempt for that message. */\nexport interface EndpointMessageOut {\n  /** List of free-form identifiers that endpoints can filter by */\n  channels?: string[] | null;\n  /** Optional unique identifier for the message */\n  eventId?: string | null;\n  /** The event type's name */\n  eventType: string;\n  /** The Message's ID. */\n  id: string;\n  nextAttempt?: Date | null;\n  payload: any;\n  status: MessageStatus;\n  statusText: MessageStatusText;\n  tags?: string[] | null;\n  timestamp: Date;\n}\n\nexport const EndpointMessageOutSerializer = {\n  _fromJsonObject(object: any): EndpointMessageOut {\n    return {\n      channels: object[\"channels\"],\n      eventId: object[\"eventId\"],\n      eventType: object[\"eventType\"],\n      id: object[\"id\"],\n      nextAttempt: object[\"nextAttempt\"] ? new Date(object[\"nextAttempt\"]) : null,\n      payload: object[\"payload\"],\n      status: MessageStatusSerializer._fromJsonObject(object[\"status\"]),\n      statusText: MessageStatusTextSerializer._fromJsonObject(object[\"statusText\"]),\n      tags: object[\"tags\"],\n      timestamp: new Date(object[\"timestamp\"]),\n    };\n  },\n\n  _toJsonObject(self: EndpointMessageOut): any {\n    return {\n      channels: self.channels,\n      eventId: self.eventId,\n      eventType: self.eventType,\n      id: self.id,\n      nextAttempt: self.nextAttempt,\n      payload: self.payload,\n      status: MessageStatusSerializer._toJsonObject(self.status),\n      statusText: MessageStatusTextSerializer._toJsonObject(self.statusText),\n      tags: self.tags,\n      timestamp: self.timestamp,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { EndpointMessageOut, EndpointMessageOutSerializer } from \"./endpointMessageOut\";\n\nexport interface ListResponseEndpointMessageOut {\n  data: EndpointMessageOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseEndpointMessageOutSerializer = {\n  _fromJsonObject(object: any): ListResponseEndpointMessageOut {\n    return {\n      data: object[\"data\"].map((item: EndpointMessageOut) =>\n        EndpointMessageOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseEndpointMessageOut): any {\n    return {\n      data: self.data.map((item) => EndpointMessageOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/**\n * The reason an attempt was made:\n *\n * - Scheduled = 0\n * - Manual = 1\n */\nexport enum MessageAttemptTriggerType {\n  Scheduled = 0,\n  Manual = 1,\n}\n\nexport const MessageAttemptTriggerTypeSerializer = {\n  _fromJsonObject(object: any): MessageAttemptTriggerType {\n    return object;\n  },\n\n  _toJsonObject(self: MessageAttemptTriggerType): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  MessageAttemptTriggerType,\n  MessageAttemptTriggerTypeSerializer,\n} from \"./messageAttemptTriggerType\";\nimport { MessageOut, MessageOutSerializer } from \"./messageOut\";\nimport { MessageStatus, MessageStatusSerializer } from \"./messageStatus\";\nimport { MessageStatusText, MessageStatusTextSerializer } from \"./messageStatusText\";\n\nexport interface MessageAttemptOut {\n  /** The Endpoint's ID. */\n  endpointId: string;\n  /** The MessageAttempt's ID. */\n  id: string;\n  msg?: MessageOut | null;\n  /** The Message's ID. */\n  msgId: string;\n  response: string;\n  /** Response duration in milliseconds. */\n  responseDurationMs: number;\n  responseStatusCode: number;\n  status: MessageStatus;\n  statusText: MessageStatusText;\n  timestamp: Date;\n  triggerType: MessageAttemptTriggerType;\n  url: string;\n}\n\nexport const MessageAttemptOutSerializer = {\n  _fromJsonObject(object: any): MessageAttemptOut {\n    return {\n      endpointId: object[\"endpointId\"],\n      id: object[\"id\"],\n      msg: object[\"msg\"]\n        ? MessageOutSerializer._fromJsonObject(object[\"msg\"])\n        : undefined,\n      msgId: object[\"msgId\"],\n      response: object[\"response\"],\n      responseDurationMs: object[\"responseDurationMs\"],\n      responseStatusCode: object[\"responseStatusCode\"],\n      status: MessageStatusSerializer._fromJsonObject(object[\"status\"]),\n      statusText: MessageStatusTextSerializer._fromJsonObject(object[\"statusText\"]),\n      timestamp: new Date(object[\"timestamp\"]),\n      triggerType: MessageAttemptTriggerTypeSerializer._fromJsonObject(\n        object[\"triggerType\"]\n      ),\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: MessageAttemptOut): any {\n    return {\n      endpointId: self.endpointId,\n      id: self.id,\n      msg: self.msg ? MessageOutSerializer._toJsonObject(self.msg) : undefined,\n      msgId: self.msgId,\n      response: self.response,\n      responseDurationMs: self.responseDurationMs,\n      responseStatusCode: self.responseStatusCode,\n      status: MessageStatusSerializer._toJsonObject(self.status),\n      statusText: MessageStatusTextSerializer._toJsonObject(self.statusText),\n      timestamp: self.timestamp,\n      triggerType: MessageAttemptTriggerTypeSerializer._toJsonObject(self.triggerType),\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { MessageAttemptOut, MessageAttemptOutSerializer } from \"./messageAttemptOut\";\n\nexport interface ListResponseMessageAttemptOut {\n  data: MessageAttemptOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseMessageAttemptOutSerializer = {\n  _fromJsonObject(object: any): ListResponseMessageAttemptOut {\n    return {\n      data: object[\"data\"].map((item: MessageAttemptOut) =>\n        MessageAttemptOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseMessageAttemptOut): any {\n    return {\n      data: self.data.map((item) => MessageAttemptOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { MessageStatus, MessageStatusSerializer } from \"./messageStatus\";\nimport { MessageStatusText, MessageStatusTextSerializer } from \"./messageStatusText\";\n\nexport interface MessageEndpointOut {\n  /** List of message channels this endpoint listens to (omit for all). */\n  channels?: string[] | null;\n  createdAt: Date;\n  /** An example endpoint name. */\n  description: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  /** The Endpoint's ID. */\n  id: string;\n  nextAttempt?: Date | null;\n  rateLimit?: number | null;\n  status: MessageStatus;\n  statusText: MessageStatusText;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  updatedAt: Date;\n  url: string;\n  version: number;\n}\n\nexport const MessageEndpointOutSerializer = {\n  _fromJsonObject(object: any): MessageEndpointOut {\n    return {\n      channels: object[\"channels\"],\n      createdAt: new Date(object[\"createdAt\"]),\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      id: object[\"id\"],\n      nextAttempt: object[\"nextAttempt\"] ? new Date(object[\"nextAttempt\"]) : null,\n      rateLimit: object[\"rateLimit\"],\n      status: MessageStatusSerializer._fromJsonObject(object[\"status\"]),\n      statusText: MessageStatusTextSerializer._fromJsonObject(object[\"statusText\"]),\n      uid: object[\"uid\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n      url: object[\"url\"],\n      version: object[\"version\"],\n    };\n  },\n\n  _toJsonObject(self: MessageEndpointOut): any {\n    return {\n      channels: self.channels,\n      createdAt: self.createdAt,\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      id: self.id,\n      nextAttempt: self.nextAttempt,\n      rateLimit: self.rateLimit,\n      status: MessageStatusSerializer._toJsonObject(self.status),\n      statusText: MessageStatusTextSerializer._toJsonObject(self.statusText),\n      uid: self.uid,\n      updatedAt: self.updatedAt,\n      url: self.url,\n      version: self.version,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport { MessageEndpointOut, MessageEndpointOutSerializer } from \"./messageEndpointOut\";\n\nexport interface ListResponseMessageEndpointOut {\n  data: MessageEndpointOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseMessageEndpointOutSerializer = {\n  _fromJsonObject(object: any): ListResponseMessageEndpointOut {\n    return {\n      data: object[\"data\"].map((item: MessageEndpointOut) =>\n        MessageEndpointOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseMessageEndpointOut): any {\n    return {\n      data: self.data.map((item) => MessageEndpointOutSerializer._toJsonObject(item)),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  ListResponseEndpointMessageOut,\n  ListResponseEndpointMessageOutSerializer,\n} from \"../models/listResponseEndpointMessageOut\";\nimport {\n  ListResponseMessageAttemptOut,\n  ListResponseMessageAttemptOutSerializer,\n} from \"../models/listResponseMessageAttemptOut\";\nimport {\n  ListResponseMessageEndpointOut,\n  ListResponseMessageEndpointOutSerializer,\n} from \"../models/listResponseMessageEndpointOut\";\nimport {\n  MessageAttemptOut,\n  MessageAttemptOutSerializer,\n} from \"../models/messageAttemptOut\";\nimport { MessageStatus } from \"../models/messageStatus\";\nimport { StatusCodeClass } from \"../models/statusCodeClass\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface MessageAttemptListByEndpointOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** Filter response based on the status of the attempt: Success (0), Pending (1), Failed (2), or Sending (3) */\n  status?: MessageStatus;\n  /** Filter response based on the HTTP status code */\n  statusCodeClass?: StatusCodeClass;\n  /** Filter response based on the channel */\n  channel?: string;\n  /** Filter response based on the tag */\n  tag?: string;\n  /** Only include items created before a certain date */\n  before?: Date | null;\n  /** Only include items created after a certain date */\n  after?: Date | null;\n  /** When `true` attempt content is included in the response */\n  withContent?: boolean;\n  /** When `true`, the message information is included in the response */\n  withMsg?: boolean;\n  /** Filter response based on the event type */\n  eventTypes?: string[];\n}\n\nexport interface MessageAttemptListByMsgOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** Filter response based on the status of the attempt: Success (0), Pending (1), Failed (2), or Sending (3) */\n  status?: MessageStatus;\n  /** Filter response based on the HTTP status code */\n  statusCodeClass?: StatusCodeClass;\n  /** Filter response based on the channel */\n  channel?: string;\n  /** Filter response based on the tag */\n  tag?: string;\n  /** Filter the attempts based on the attempted endpoint */\n  endpointId?: string;\n  /** Only include items created before a certain date */\n  before?: Date | null;\n  /** Only include items created after a certain date */\n  after?: Date | null;\n  /** When `true` attempt content is included in the response */\n  withContent?: boolean;\n  /** Filter response based on the event type */\n  eventTypes?: string[];\n}\n\nexport interface MessageAttemptListAttemptedMessagesOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** Filter response based on the channel */\n  channel?: string;\n  /** Filter response based on the message tags */\n  tag?: string;\n  /** Filter response based on the status of the attempt: Success (0), Pending (1), Failed (2), or Sending (3) */\n  status?: MessageStatus;\n  /** Only include items created before a certain date */\n  before?: Date | null;\n  /** Only include items created after a certain date */\n  after?: Date | null;\n  /** When `true` message payloads are included in the response */\n  withContent?: boolean;\n  /** Filter response based on the event type */\n  eventTypes?: string[];\n}\n\nexport interface MessageAttemptListAttemptedDestinationsOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n}\n\nexport interface MessageAttemptResendOptions {\n  idempotencyKey?: string;\n}\n\nexport class MessageAttempt {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /**\n   * List attempts by endpoint id\n   *\n   * Note that by default this endpoint is limited to retrieving 90 days' worth of data\n   * relative to now or, if an iterator is provided, 90 days before/after the time indicated\n   * by the iterator ID. If you require data beyond those time ranges, you will need to explicitly\n   * set the `before` or `after` parameter as appropriate.\n   */\n  public listByEndpoint(\n    appId: string,\n    endpointId: string,\n    options?: MessageAttemptListByEndpointOptions\n  ): Promise<ListResponseMessageAttemptOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/attempt/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"status\", options?.status);\n    request.setQueryParam(\"status_code_class\", options?.statusCodeClass);\n    request.setQueryParam(\"channel\", options?.channel);\n    request.setQueryParam(\"tag\", options?.tag);\n    request.setQueryParam(\"before\", options?.before);\n    request.setQueryParam(\"after\", options?.after);\n    request.setQueryParam(\"with_content\", options?.withContent);\n    request.setQueryParam(\"with_msg\", options?.withMsg);\n    request.setQueryParam(\"event_types\", options?.eventTypes);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseMessageAttemptOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * List attempts by message ID.\n   *\n   * Note that by default this endpoint is limited to retrieving 90 days' worth of data\n   * relative to now or, if an iterator is provided, 90 days before/after the time indicated\n   * by the iterator ID. If you require data beyond those time ranges, you will need to explicitly\n   * set the `before` or `after` parameter as appropriate.\n   */\n  public listByMsg(\n    appId: string,\n    msgId: string,\n    options?: MessageAttemptListByMsgOptions\n  ): Promise<ListResponseMessageAttemptOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/attempt/msg/{msg_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"msg_id\", msgId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"status\", options?.status);\n    request.setQueryParam(\"status_code_class\", options?.statusCodeClass);\n    request.setQueryParam(\"channel\", options?.channel);\n    request.setQueryParam(\"tag\", options?.tag);\n    request.setQueryParam(\"endpoint_id\", options?.endpointId);\n    request.setQueryParam(\"before\", options?.before);\n    request.setQueryParam(\"after\", options?.after);\n    request.setQueryParam(\"with_content\", options?.withContent);\n    request.setQueryParam(\"event_types\", options?.eventTypes);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseMessageAttemptOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * List messages for a particular endpoint. Additionally includes metadata about the latest message attempt.\n   *\n   * The `before` parameter lets you filter all items created before a certain date and is ignored if an iterator is passed.\n   *\n   * Note that by default this endpoint is limited to retrieving 90 days' worth of data\n   * relative to now or, if an iterator is provided, 90 days before/after the time indicated\n   * by the iterator ID. If you require data beyond those time ranges, you will need to explicitly\n   * set the `before` or `after` parameter as appropriate.\n   */\n  public listAttemptedMessages(\n    appId: string,\n    endpointId: string,\n    options?: MessageAttemptListAttemptedMessagesOptions\n  ): Promise<ListResponseEndpointMessageOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/endpoint/{endpoint_id}/msg\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"channel\", options?.channel);\n    request.setQueryParam(\"tag\", options?.tag);\n    request.setQueryParam(\"status\", options?.status);\n    request.setQueryParam(\"before\", options?.before);\n    request.setQueryParam(\"after\", options?.after);\n    request.setQueryParam(\"with_content\", options?.withContent);\n    request.setQueryParam(\"event_types\", options?.eventTypes);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseEndpointMessageOutSerializer._fromJsonObject\n    );\n  }\n\n  /** `msg_id`: Use a message id or a message `eventId` */\n  public get(\n    appId: string,\n    msgId: string,\n    attemptId: string\n  ): Promise<MessageAttemptOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"msg_id\", msgId);\n    request.setPathParam(\"attempt_id\", attemptId);\n\n    return request.send(this.requestCtx, MessageAttemptOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Deletes the given attempt's response body.\n   *\n   * Useful when an endpoint accidentally returned sensitive content.\n   * The message can't be replayed or resent once its payload has been deleted or expired.\n   */\n  public expungeContent(appId: string, msgId: string, attemptId: string): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/content\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"msg_id\", msgId);\n    request.setPathParam(\"attempt_id\", attemptId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /**\n   * List endpoints attempted by a given message.\n   *\n   * Additionally includes metadata about the latest message attempt.\n   * By default, endpoints are listed in ascending order by ID.\n   */\n  public listAttemptedDestinations(\n    appId: string,\n    msgId: string,\n    options?: MessageAttemptListAttemptedDestinationsOptions\n  ): Promise<ListResponseMessageEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/app/{app_id}/msg/{msg_id}/endpoint\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"msg_id\", msgId);\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseMessageEndpointOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Resend a message to the specified endpoint. */\n  public resend(\n    appId: string,\n    msgId: string,\n    endpointId: string,\n    options?: MessageAttemptResendOptions\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend\"\n    );\n\n    request.setPathParam(\"app_id\", appId);\n    request.setPathParam(\"msg_id\", msgId);\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OperationalWebhookEndpointOut {\n  createdAt: Date;\n  /** An example endpoint name. */\n  description: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  /** The Endpoint's ID. */\n  id: string;\n  metadata: { [key: string]: string };\n  rateLimit?: number | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  updatedAt: Date;\n  url: string;\n}\n\nexport const OperationalWebhookEndpointOutSerializer = {\n  _fromJsonObject(object: any): OperationalWebhookEndpointOut {\n    return {\n      createdAt: new Date(object[\"createdAt\"]),\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      id: object[\"id\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n      updatedAt: new Date(object[\"updatedAt\"]),\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: OperationalWebhookEndpointOut): any {\n    return {\n      createdAt: self.createdAt,\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      id: self.id,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n      updatedAt: self.updatedAt,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  OperationalWebhookEndpointOut,\n  OperationalWebhookEndpointOutSerializer,\n} from \"./operationalWebhookEndpointOut\";\n\nexport interface ListResponseOperationalWebhookEndpointOut {\n  data: OperationalWebhookEndpointOut[];\n  done: boolean;\n  iterator: string | null;\n  prevIterator?: string | null;\n}\n\nexport const ListResponseOperationalWebhookEndpointOutSerializer = {\n  _fromJsonObject(object: any): ListResponseOperationalWebhookEndpointOut {\n    return {\n      data: object[\"data\"].map((item: OperationalWebhookEndpointOut) =>\n        OperationalWebhookEndpointOutSerializer._fromJsonObject(item)\n      ),\n      done: object[\"done\"],\n      iterator: object[\"iterator\"],\n      prevIterator: object[\"prevIterator\"],\n    };\n  },\n\n  _toJsonObject(self: ListResponseOperationalWebhookEndpointOut): any {\n    return {\n      data: self.data.map((item) =>\n        OperationalWebhookEndpointOutSerializer._toJsonObject(item)\n      ),\n      done: self.done,\n      iterator: self.iterator,\n      prevIterator: self.prevIterator,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OperationalWebhookEndpointHeadersIn {\n  headers: { [key: string]: string };\n}\n\nexport const OperationalWebhookEndpointHeadersInSerializer = {\n  _fromJsonObject(object: any): OperationalWebhookEndpointHeadersIn {\n    return {\n      headers: object[\"headers\"],\n    };\n  },\n\n  _toJsonObject(self: OperationalWebhookEndpointHeadersIn): any {\n    return {\n      headers: self.headers,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OperationalWebhookEndpointHeadersOut {\n  headers: { [key: string]: string };\n  sensitive: string[];\n}\n\nexport const OperationalWebhookEndpointHeadersOutSerializer = {\n  _fromJsonObject(object: any): OperationalWebhookEndpointHeadersOut {\n    return {\n      headers: object[\"headers\"],\n      sensitive: object[\"sensitive\"],\n    };\n  },\n\n  _toJsonObject(self: OperationalWebhookEndpointHeadersOut): any {\n    return {\n      headers: self.headers,\n      sensitive: self.sensitive,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OperationalWebhookEndpointIn {\n  description?: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  metadata?: { [key: string]: string };\n  rateLimit?: number | null;\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  secret?: string | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  url: string;\n}\n\nexport const OperationalWebhookEndpointInSerializer = {\n  _fromJsonObject(object: any): OperationalWebhookEndpointIn {\n    return {\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      secret: object[\"secret\"],\n      uid: object[\"uid\"],\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: OperationalWebhookEndpointIn): any {\n    return {\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      secret: self.secret,\n      uid: self.uid,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OperationalWebhookEndpointSecretIn {\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  key?: string | null;\n}\n\nexport const OperationalWebhookEndpointSecretInSerializer = {\n  _fromJsonObject(object: any): OperationalWebhookEndpointSecretIn {\n    return {\n      key: object[\"key\"],\n    };\n  },\n\n  _toJsonObject(self: OperationalWebhookEndpointSecretIn): any {\n    return {\n      key: self.key,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OperationalWebhookEndpointSecretOut {\n  /**\n   * The endpoint's verification secret.\n   *\n   * Format: `base64` encoded random bytes optionally prefixed with `whsec_`.\n   * It is recommended to not set this and let the server generate the secret.\n   */\n  key: string;\n}\n\nexport const OperationalWebhookEndpointSecretOutSerializer = {\n  _fromJsonObject(object: any): OperationalWebhookEndpointSecretOut {\n    return {\n      key: object[\"key\"],\n    };\n  },\n\n  _toJsonObject(self: OperationalWebhookEndpointSecretOut): any {\n    return {\n      key: self.key,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface OperationalWebhookEndpointUpdate {\n  description?: string;\n  disabled?: boolean;\n  filterTypes?: string[] | null;\n  metadata?: { [key: string]: string };\n  rateLimit?: number | null;\n  /** Optional unique identifier for the endpoint. */\n  uid?: string | null;\n  url: string;\n}\n\nexport const OperationalWebhookEndpointUpdateSerializer = {\n  _fromJsonObject(object: any): OperationalWebhookEndpointUpdate {\n    return {\n      description: object[\"description\"],\n      disabled: object[\"disabled\"],\n      filterTypes: object[\"filterTypes\"],\n      metadata: object[\"metadata\"],\n      rateLimit: object[\"rateLimit\"],\n      uid: object[\"uid\"],\n      url: object[\"url\"],\n    };\n  },\n\n  _toJsonObject(self: OperationalWebhookEndpointUpdate): any {\n    return {\n      description: self.description,\n      disabled: self.disabled,\n      filterTypes: self.filterTypes,\n      metadata: self.metadata,\n      rateLimit: self.rateLimit,\n      uid: self.uid,\n      url: self.url,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  ListResponseOperationalWebhookEndpointOut,\n  ListResponseOperationalWebhookEndpointOutSerializer,\n} from \"../models/listResponseOperationalWebhookEndpointOut\";\nimport {\n  OperationalWebhookEndpointHeadersIn,\n  OperationalWebhookEndpointHeadersInSerializer,\n} from \"../models/operationalWebhookEndpointHeadersIn\";\nimport {\n  OperationalWebhookEndpointHeadersOut,\n  OperationalWebhookEndpointHeadersOutSerializer,\n} from \"../models/operationalWebhookEndpointHeadersOut\";\nimport {\n  OperationalWebhookEndpointIn,\n  OperationalWebhookEndpointInSerializer,\n} from \"../models/operationalWebhookEndpointIn\";\nimport {\n  OperationalWebhookEndpointOut,\n  OperationalWebhookEndpointOutSerializer,\n} from \"../models/operationalWebhookEndpointOut\";\nimport {\n  OperationalWebhookEndpointSecretIn,\n  OperationalWebhookEndpointSecretInSerializer,\n} from \"../models/operationalWebhookEndpointSecretIn\";\nimport {\n  OperationalWebhookEndpointSecretOut,\n  OperationalWebhookEndpointSecretOutSerializer,\n} from \"../models/operationalWebhookEndpointSecretOut\";\nimport {\n  OperationalWebhookEndpointUpdate,\n  OperationalWebhookEndpointUpdateSerializer,\n} from \"../models/operationalWebhookEndpointUpdate\";\nimport { Ordering } from \"../models/ordering\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface OperationalWebhookEndpointListOptions {\n  /** Limit the number of returned items */\n  limit?: number;\n  /** The iterator returned from a prior invocation */\n  iterator?: string | null;\n  /** The sorting order of the returned items */\n  order?: Ordering;\n}\n\nexport interface OperationalWebhookEndpointCreateOptions {\n  idempotencyKey?: string;\n}\n\nexport interface OperationalWebhookEndpointRotateSecretOptions {\n  idempotencyKey?: string;\n}\n\nexport class OperationalWebhookEndpoint {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /** List operational webhook endpoints. */\n  public list(\n    options?: OperationalWebhookEndpointListOptions\n  ): Promise<ListResponseOperationalWebhookEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/operational-webhook/endpoint\"\n    );\n\n    request.setQueryParam(\"limit\", options?.limit);\n    request.setQueryParam(\"iterator\", options?.iterator);\n    request.setQueryParam(\"order\", options?.order);\n\n    return request.send(\n      this.requestCtx,\n      ListResponseOperationalWebhookEndpointOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Create an operational webhook endpoint. */\n  public create(\n    operationalWebhookEndpointIn: OperationalWebhookEndpointIn,\n    options?: OperationalWebhookEndpointCreateOptions\n  ): Promise<OperationalWebhookEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/operational-webhook/endpoint\"\n    );\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      OperationalWebhookEndpointInSerializer._toJsonObject(operationalWebhookEndpointIn)\n    );\n\n    return request.send(\n      this.requestCtx,\n      OperationalWebhookEndpointOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Get an operational webhook endpoint. */\n  public get(endpointId: string): Promise<OperationalWebhookEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/operational-webhook/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(\n      this.requestCtx,\n      OperationalWebhookEndpointOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Update an operational webhook endpoint. */\n  public update(\n    endpointId: string,\n    operationalWebhookEndpointUpdate: OperationalWebhookEndpointUpdate\n  ): Promise<OperationalWebhookEndpointOut> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/api/v1/operational-webhook/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(\n      OperationalWebhookEndpointUpdateSerializer._toJsonObject(\n        operationalWebhookEndpointUpdate\n      )\n    );\n\n    return request.send(\n      this.requestCtx,\n      OperationalWebhookEndpointOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Delete an operational webhook endpoint. */\n  public delete(endpointId: string): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.DELETE,\n      \"/api/v1/operational-webhook/endpoint/{endpoint_id}\"\n    );\n\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /** Get the additional headers to be sent with the operational webhook. */\n  public getHeaders(endpointId: string): Promise<OperationalWebhookEndpointHeadersOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/operational-webhook/endpoint/{endpoint_id}/headers\"\n    );\n\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(\n      this.requestCtx,\n      OperationalWebhookEndpointHeadersOutSerializer._fromJsonObject\n    );\n  }\n\n  /** Set the additional headers to be sent with the operational webhook. */\n  public updateHeaders(\n    endpointId: string,\n    operationalWebhookEndpointHeadersIn: OperationalWebhookEndpointHeadersIn\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.PUT,\n      \"/api/v1/operational-webhook/endpoint/{endpoint_id}/headers\"\n    );\n\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setBody(\n      OperationalWebhookEndpointHeadersInSerializer._toJsonObject(\n        operationalWebhookEndpointHeadersIn\n      )\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n\n  /**\n   * Get an operational webhook endpoint's signing secret.\n   *\n   * This is used to verify the authenticity of the webhook.\n   * For more information please refer to [the consuming webhooks docs](https://docs.svix.com/consuming-webhooks/).\n   */\n  public getSecret(endpointId: string): Promise<OperationalWebhookEndpointSecretOut> {\n    const request = new SvixRequest(\n      HttpMethod.GET,\n      \"/api/v1/operational-webhook/endpoint/{endpoint_id}/secret\"\n    );\n\n    request.setPathParam(\"endpoint_id\", endpointId);\n\n    return request.send(\n      this.requestCtx,\n      OperationalWebhookEndpointSecretOutSerializer._fromJsonObject\n    );\n  }\n\n  /**\n   * Rotates an operational webhook endpoint's signing secret.\n   *\n   * The previous secret will remain valid for the next 24 hours.\n   */\n  public rotateSecret(\n    endpointId: string,\n    operationalWebhookEndpointSecretIn: OperationalWebhookEndpointSecretIn,\n    options?: OperationalWebhookEndpointRotateSecretOptions\n  ): Promise<void> {\n    const request = new SvixRequest(\n      HttpMethod.POST,\n      \"/api/v1/operational-webhook/endpoint/{endpoint_id}/secret/rotate\"\n    );\n\n    request.setPathParam(\"endpoint_id\", endpointId);\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(\n      OperationalWebhookEndpointSecretInSerializer._toJsonObject(\n        operationalWebhookEndpointSecretIn\n      )\n    );\n\n    return request.sendNoResponseBody(this.requestCtx);\n  }\n}\n", "// this file is @generated\n\nimport { OperationalWebhookEndpoint } from \"./operationalWebhookEndpoint\";\nimport { SvixRequestContext } from \"../request\";\n\nexport class OperationalWebhook {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  public get endpoint() {\n    return new OperationalWebhookEndpoint(this.requestCtx);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  BackgroundTaskStatus,\n  BackgroundTaskStatusSerializer,\n} from \"./backgroundTaskStatus\";\nimport { BackgroundTaskType, BackgroundTaskTypeSerializer } from \"./backgroundTaskType\";\n\nexport interface AggregateEventTypesOut {\n  /** The QueueBackgroundTask's ID. */\n  id: string;\n  status: BackgroundTaskStatus;\n  task: BackgroundTaskType;\n}\n\nexport const AggregateEventTypesOutSerializer = {\n  _fromJsonObject(object: any): AggregateEventTypesOut {\n    return {\n      id: object[\"id\"],\n      status: BackgroundTaskStatusSerializer._fromJsonObject(object[\"status\"]),\n      task: BackgroundTaskTypeSerializer._fromJsonObject(object[\"task\"]),\n    };\n  },\n\n  _toJsonObject(self: AggregateEventTypesOut): any {\n    return {\n      id: self.id,\n      status: BackgroundTaskStatusSerializer._toJsonObject(self.status),\n      task: BackgroundTaskTypeSerializer._toJsonObject(self.task),\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport interface AppUsageStatsIn {\n  /**\n   * Specific app IDs or UIDs to aggregate stats for.\n   *\n   * Note that if none of the given IDs or UIDs are resolved, a 422 response will be given.\n   */\n  appIds?: string[] | null;\n  since: Date;\n  until: Date;\n}\n\nexport const AppUsageStatsInSerializer = {\n  _fromJsonObject(object: any): AppUsageStatsIn {\n    return {\n      appIds: object[\"appIds\"],\n      since: new Date(object[\"since\"]),\n      until: new Date(object[\"until\"]),\n    };\n  },\n\n  _toJsonObject(self: AppUsageStatsIn): any {\n    return {\n      appIds: self.appIds,\n      since: self.since,\n      until: self.until,\n    };\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nimport {\n  BackgroundTaskStatus,\n  BackgroundTaskStatusSerializer,\n} from \"./backgroundTaskStatus\";\nimport { BackgroundTaskType, BackgroundTaskTypeSerializer } from \"./backgroundTaskType\";\n\nexport interface AppUsageStatsOut {\n  /** The QueueBackgroundTask's ID. */\n  id: string;\n  status: BackgroundTaskStatus;\n  task: BackgroundTaskType;\n  /**\n   * Any app IDs or UIDs received in the request that weren't found.\n   *\n   * Stats will be produced for all the others.\n   */\n  unresolvedAppIds: string[];\n}\n\nexport const AppUsageStatsOutSerializer = {\n  _fromJsonObject(object: any): AppUsageStatsOut {\n    return {\n      id: object[\"id\"],\n      status: BackgroundTaskStatusSerializer._fromJsonObject(object[\"status\"]),\n      task: BackgroundTaskTypeSerializer._fromJsonObject(object[\"task\"]),\n      unresolvedAppIds: object[\"unresolvedAppIds\"],\n    };\n  },\n\n  _toJsonObject(self: AppUsageStatsOut): any {\n    return {\n      id: self.id,\n      status: BackgroundTaskStatusSerializer._toJsonObject(self.status),\n      task: BackgroundTaskTypeSerializer._toJsonObject(self.task),\n      unresolvedAppIds: self.unresolvedAppIds,\n    };\n  },\n};\n", "// this file is @generated\n\nimport {\n  AggregateEventTypesOut,\n  AggregateEventTypesOutSerializer,\n} from \"../models/aggregateEventTypesOut\";\nimport { AppUsageStatsIn, AppUsageStatsInSerializer } from \"../models/appUsageStatsIn\";\nimport { AppUsageStatsOut, AppUsageStatsOutSerializer } from \"../models/appUsageStatsOut\";\nimport { HttpMethod, SvixRequest, SvixRequestContext } from \"../request\";\n\nexport interface StatisticsAggregateAppStatsOptions {\n  idempotencyKey?: string;\n}\n\nexport class Statistics {\n  public constructor(private readonly requestCtx: SvixRequestContext) {}\n\n  /**\n   * Creates a background task to calculate the message destinations for all applications in the environment.\n   *\n   * Note that this endpoint is asynchronous. You will need to poll the `Get Background Task` endpoint to\n   * retrieve the results of the operation.\n   */\n  public aggregateAppStats(\n    appUsageStatsIn: AppUsageStatsIn,\n    options?: StatisticsAggregateAppStatsOptions\n  ): Promise<AppUsageStatsOut> {\n    const request = new SvixRequest(HttpMethod.POST, \"/api/v1/stats/usage/app\");\n\n    request.setHeaderParam(\"idempotency-key\", options?.idempotencyKey);\n    request.setBody(AppUsageStatsInSerializer._toJsonObject(appUsageStatsIn));\n\n    return request.send(this.requestCtx, AppUsageStatsOutSerializer._fromJsonObject);\n  }\n\n  /**\n   * Creates a background task to calculate the listed event types for all apps in the organization.\n   *\n   * Note that this endpoint is asynchronous. You will need to poll the `Get Background Task` endpoint to\n   * retrieve the results of the operation.\n   */\n  public aggregateEventTypes(): Promise<AggregateEventTypesOut> {\n    const request = new SvixRequest(HttpMethod.PUT, \"/api/v1/stats/usage/event-types\");\n\n    return request.send(\n      this.requestCtx,\n      AggregateEventTypesOutSerializer._fromJsonObject\n    );\n  }\n}\n", "export class HttpErrorOut {\n  \"code\": string;\n  \"detail\": string;\n\n  static readonly discriminator: string | undefined = undefined;\n\n  static readonly mapping: { [index: string]: string } | undefined = undefined;\n\n  static readonly attributeTypeMap: Array<{\n    name: string;\n    baseName: string;\n    type: string;\n    format: string;\n  }> = [\n    {\n      name: \"code\",\n      baseName: \"code\",\n      type: \"string\",\n      format: \"\",\n    },\n    {\n      name: \"detail\",\n      baseName: \"detail\",\n      type: \"string\",\n      format: \"\",\n    },\n  ];\n\n  static getAttributeTypeMap() {\n    return HttpErrorOut.attributeTypeMap;\n  }\n}\n\n/**\n * Validation errors have their own schema to provide context for invalid requests eg. mismatched types and out of bounds values. There may be any number of these per 422 UNPROCESSABLE ENTITY error.\n */\nexport class ValidationError {\n  /**\n   * The location as a [`Vec`] of [`String`]s -- often in the form `[\\\"body\\\", \\\"field_name\\\"]`, `[\\\"query\\\", \\\"field_name\\\"]`, etc. They may, however, be arbitrarily deep.\n   */\n  \"loc\": Array<string>;\n  /**\n   * The message accompanying the validation error item.\n   */\n  \"msg\": string;\n  /**\n   * The type of error, often \\\"type_error\\\" or \\\"value_error\\\", but sometimes with more context like as \\\"value_error.number.not_ge\\\"\n   */\n  \"type\": string;\n\n  static readonly discriminator: string | undefined = undefined;\n\n  static readonly mapping: { [index: string]: string } | undefined = undefined;\n\n  static readonly attributeTypeMap: Array<{\n    name: string;\n    baseName: string;\n    type: string;\n    format: string;\n  }> = [\n    {\n      name: \"loc\",\n      baseName: \"loc\",\n      type: \"Array<string>\",\n      format: \"\",\n    },\n    {\n      name: \"msg\",\n      baseName: \"msg\",\n      type: \"string\",\n      format: \"\",\n    },\n    {\n      name: \"type\",\n      baseName: \"type\",\n      type: \"string\",\n      format: \"\",\n    },\n  ];\n\n  static getAttributeTypeMap() {\n    return ValidationError.attributeTypeMap;\n  }\n}\n\nexport class HTTPValidationError {\n  \"detail\": Array<ValidationError>;\n\n  static readonly discriminator: string | undefined = undefined;\n\n  static readonly mapping: { [index: string]: string } | undefined = undefined;\n\n  static readonly attributeTypeMap: Array<{\n    name: string;\n    baseName: string;\n    type: string;\n    format: string;\n  }> = [\n    {\n      name: \"detail\",\n      baseName: \"detail\",\n      type: \"Array<ValidationError>\",\n      format: \"\",\n    },\n  ];\n\n  static getAttributeTypeMap() {\n    return HTTPValidationError.attributeTypeMap;\n  }\n}\n", "// Copyright 2018-2022 the Deno authors. All rights reserved. MIT license.\n// https://github.com/denoland/deno_std/blob/main/crypto/timing_safe_equal.ts\n\n/** Make an assertion, if not `true`, then throw. */\nfunction assert(expr: unknown, msg = \"\"): asserts expr {\n  if (!expr) {\n    throw new Error(msg);\n  }\n}\n\n/** Compare to array buffers or data views in a way that timing based attacks\n * cannot gain information about the platform. */\nexport function timingSafeEqual(\n  a: ArrayBufferView | ArrayBufferLike | DataView,\n  b: ArrayBufferView | ArrayBufferLike | DataView\n): boolean {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  if (!(a instanceof DataView)) {\n    a = new DataView(ArrayBuffer.isView(a) ? a.buffer : a);\n  }\n  if (!(b instanceof DataView)) {\n    b = new DataView(ArrayBuffer.isView(b) ? b.buffer : b);\n  }\n  assert(a instanceof DataView);\n  assert(b instanceof DataView);\n  const length = a.byteLength;\n  let out = 0;\n  let i = -1;\n  while (++i < length) {\n    out |= a.getUint8(i) ^ b.getUint8(i);\n  }\n  return out === 0;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package base64 implements Base64 encoding and decoding.\n */\n\n// Invalid character used in decoding to indicate\n// that the character to decode is out of range of\n// alphabet and cannot be decoded.\nconst INVALID_BYTE = 256;\n\n/**\n * Implements standard Base64 encoding.\n *\n * Operates in constant time.\n */\nexport class Coder {\n    // TODO(dchest): methods to encode chunk-by-chunk.\n\n    constructor(private _paddingCharacter = \"=\") { }\n\n    encodedLength(length: number): number {\n        if (!this._paddingCharacter) {\n            return (length * 8 + 5) / 6 | 0;\n        }\n        return (length + 2) / 3 * 4 | 0;\n    }\n\n    encode(data: Uint8Array): string {\n        let out = \"\";\n\n        let i = 0;\n        for (; i < data.length - 2; i += 3) {\n            let c = (data[i] << 16) | (data[i + 1] << 8) | (data[i + 2]);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            out += this._encodeByte((c >>> 1 * 6) & 63);\n            out += this._encodeByte((c >>> 0 * 6) & 63);\n        }\n\n        const left = data.length - i;\n        if (left > 0) {\n            let c = (data[i] << 16) | (left === 2 ? data[i + 1] << 8 : 0);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            if (left === 2) {\n                out += this._encodeByte((c >>> 1 * 6) & 63);\n            } else {\n                out += this._paddingCharacter || \"\";\n            }\n            out += this._paddingCharacter || \"\";\n        }\n\n        return out;\n    }\n\n    maxDecodedLength(length: number): number {\n        if (!this._paddingCharacter) {\n            return (length * 6 + 7) / 8 | 0;\n        }\n        return length / 4 * 3 | 0;\n    }\n\n    decodedLength(s: string): number {\n        return this.maxDecodedLength(s.length - this._getPaddingLength(s));\n    }\n\n    decode(s: string): Uint8Array {\n        if (s.length === 0) {\n            return new Uint8Array(0);\n        }\n        const paddingLength = this._getPaddingLength(s);\n        const length = s.length - paddingLength;\n        const out = new Uint8Array(this.maxDecodedLength(length));\n        let op = 0;\n        let i = 0;\n        let haveBad = 0;\n        let v0 = 0, v1 = 0, v2 = 0, v3 = 0;\n        for (; i < length - 4; i += 4) {\n            v0 = this._decodeChar(s.charCodeAt(i + 0));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n            haveBad |= v2 & INVALID_BYTE;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (i < length - 1) {\n            v0 = this._decodeChar(s.charCodeAt(i));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n        }\n        if (i < length - 2) {\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            haveBad |= v2 & INVALID_BYTE;\n        }\n        if (i < length - 3) {\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (haveBad !== 0) {\n            throw new Error(\"Base64Coder: incorrect characters for decoding\");\n        }\n        return out;\n    }\n\n    // Standard encoding have the following encoded/decoded ranges,\n    // which we need to convert between.\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  +   /\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   43  47\n    //\n\n    // Encode 6 bits in b into a new character.\n    protected _encodeByte(b: number): string {\n        // Encoding uses constant time operations as follows:\n        //\n        // 1. Define comparison of A with B using (A - B) >>> 8:\n        //          if A > B, then result is positive integer\n        //          if A <= B, then result is 0\n        //\n        // 2. Define selection of C or 0 using bitwise AND: X & C:\n        //          if X == 0, then result is 0\n        //          if X != 0, then result is C\n        //\n        // 3. Start with the smallest comparison (b >= 0), which is always\n        //    true, so set the result to the starting ASCII value (65).\n        //\n        // 4. Continue comparing b to higher ASCII values, and selecting\n        //    zero if comparison isn't true, otherwise selecting a value\n        //    to add to result, which:\n        //\n        //          a) undoes the previous addition\n        //          b) provides new value to add\n        //\n        let result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 43);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 43) - 63 + 47);\n\n        return String.fromCharCode(result);\n    }\n\n    // Decode a character code into a byte.\n    // Must return 256 if character is out of alphabet range.\n    protected _decodeChar(c: number): number {\n        // Decoding works similar to encoding: using the same comparison\n        // function, but now it works on ranges: result is always incremented\n        // by value, but this value becomes zero if the range is not\n        // satisfied.\n        //\n        // Decoding starts with invalid value, 256, which is then\n        // subtracted when the range is satisfied. If none of the ranges\n        // apply, the function returns 256, which is then checked by\n        // the caller to throw error.\n        let result = INVALID_BYTE; // start with invalid character\n\n        // c == 43 (c > 42 and c < 44)\n        result += (((42 - c) & (c - 44)) >>> 8) & (-INVALID_BYTE + c - 43 + 62);\n        // c == 47 (c > 46 and c < 48)\n        result += (((46 - c) & (c - 48)) >>> 8) & (-INVALID_BYTE + c - 47 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n\n        return result;\n    }\n\n    private _getPaddingLength(s: string): number {\n        let paddingLength = 0;\n        if (this._paddingCharacter) {\n            for (let i = s.length - 1; i >= 0; i--) {\n                if (s[i] !== this._paddingCharacter) {\n                    break;\n                }\n                paddingLength++;\n            }\n            if (s.length < 4 || paddingLength > 2) {\n                throw new Error(\"Base64Coder: incorrect padding\");\n            }\n        }\n        return paddingLength;\n    }\n\n}\n\nconst stdCoder = new Coder();\n\nexport function encode(data: Uint8Array): string {\n    return stdCoder.encode(data);\n}\n\nexport function decode(s: string): Uint8Array {\n    return stdCoder.decode(s);\n}\n\n/**\n * Implements URL-safe Base64 encoding.\n * (Same as Base64, but '+' is replaced with '-', and '/' with '_').\n *\n * Operates in constant time.\n */\nexport class URLSafeCoder extends Coder {\n    // URL-safe encoding have the following encoded/decoded ranges:\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  -   _\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   45  95\n    //\n\n    protected _encodeByte(b: number): string {\n        let result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 45);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 45) - 63 + 95);\n\n        return String.fromCharCode(result);\n    }\n\n    protected _decodeChar(c: number): number {\n        let result = INVALID_BYTE;\n\n        // c == 45 (c > 44 and c < 46)\n        result += (((44 - c) & (c - 46)) >>> 8) & (-INVALID_BYTE + c - 45 + 62);\n        // c == 95 (c > 94 and c < 96)\n        result += (((94 - c) & (c - 96)) >>> 8) & (-INVALID_BYTE + c - 95 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n\n        return result;\n    }\n}\n\nconst urlSafeCoder = new URLSafeCoder();\n\nexport function encodeURLSafe(data: Uint8Array): string {\n    return urlSafeCoder.encode(data);\n}\n\nexport function decodeURLSafe(s: string): Uint8Array {\n    return urlSafeCoder.decode(s);\n}\n\n\nexport const encodedLength = (length: number) =>\n    stdCoder.encodedLength(length);\n\nexport const maxDecodedLength = (length: number) =>\n    stdCoder.maxDecodedLength(length);\n\nexport const decodedLength = (s: string) =>\n    stdCoder.decodedLength(s);\n", "(function (root, factory) {\n    // Hack to make all exports of this module sha256 function object properties.\n    var exports = {};\n    factory(exports);\n    var sha256 = exports[\"default\"];\n    for (var k in exports) {\n        sha256[k] = exports[k];\n    }\n        \n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = sha256;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return sha256; }); \n    } else {\n        root.sha256 = sha256;\n    }\n})(this, function(exports) {\n\"use strict\";\nexports.__esModule = true;\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexports.digestLength = 32;\nexports.blockSize = 64;\n// SHA-256 constants\nvar K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    var a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len >= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i < 16; i++) {\n            j = pos + i * 4;\n            w[i] = (((p[j] & 0xff) << 24) | ((p[j + 1] & 0xff) << 16) |\n                ((p[j + 2] & 0xff) << 8) | (p[j + 3] & 0xff));\n        }\n        for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n            u = w[i - 15];\n            t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n        for (i = 0; i < 64; i++) {\n            t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n            t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        this.digestLength = exports.digestLength;\n        this.blockSize = exports.blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    Hash.prototype.reset = function () {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    };\n    // Cleans internal buffers and re-initializes hash state.\n    Hash.prototype.clean = function () {\n        for (var i = 0; i < this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (var i = 0; i < this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    };\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    Hash.prototype.update = function (data, dataLength) {\n        if (dataLength === void 0) { dataLength = data.length; }\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        var dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength > 0) {\n            while (this.bufferLength < 64 && dataLength > 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength >= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength > 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    };\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    Hash.prototype.finish = function (out) {\n        if (!this.finished) {\n            var bytesHashed = this.bytesHashed;\n            var left = this.bufferLength;\n            var bitLenHi = (bytesHashed / 0x20000000) | 0;\n            var bitLenLo = bytesHashed << 3;\n            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (var i = left + 1; i < padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (var i = 0; i < 8; i++) {\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return this;\n    };\n    // Returns the final hash digest.\n    Hash.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._saveState = function (out) {\n        for (var i = 0; i < this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    };\n    // Internal function for use in HMAC for optimization.\n    Hash.prototype._restoreState = function (from, bytesHashed) {\n        for (var i = 0; i < this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    };\n    return Hash;\n}());\nexports.Hash = Hash;\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nvar HMAC = /** @class */ (function () {\n    function HMAC(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        var pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            (new Hash()).update(key).finish(pad).clean();\n        }\n        else {\n            for (var i = 0; i < key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (var i = 0; i < pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    HMAC.prototype.reset = function () {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    };\n    // Cleans HMAC state.\n    HMAC.prototype.clean = function () {\n        for (var i = 0; i < this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    };\n    // Updates state with provided data.\n    HMAC.prototype.update = function (data) {\n        this.inner.update(data);\n        return this;\n    };\n    // Finalizes HMAC and puts the result in out.\n    HMAC.prototype.finish = function (out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    };\n    // Returns message authentication code.\n    HMAC.prototype.digest = function () {\n        var out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    };\n    return HMAC;\n}());\nexports.HMAC = HMAC;\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    var h = (new Hash()).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hash = hash;\n// Function hash is both available as module.hash and as default export.\nexports[\"default\"] = hash;\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    var h = (new HMAC(key)).update(data);\n    var digest = h.digest();\n    h.clean();\n    return digest;\n}\nexports.hmac = hmac;\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    var num = counter[0];\n    if (num === 0) {\n        throw new Error(\"hkdf: cannot expand more\");\n    }\n    // Prepare HMAC instance for new data with old key.\n    hmac.reset();\n    // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n    if (num > 1) {\n        hmac.update(buffer);\n    }\n    // Hash in info if it exists.\n    if (info) {\n        hmac.update(info);\n    }\n    // Hash in the counter.\n    hmac.update(counter);\n    // Output result to buffer and clean HMAC instance.\n    hmac.finish(buffer);\n    // Increment counter inside typed array, this works properly.\n    counter[0]++;\n}\nvar hkdfSalt = new Uint8Array(exports.digestLength); // Filled with zeroes.\nfunction hkdf(key, salt, info, length) {\n    if (salt === void 0) { salt = hkdfSalt; }\n    if (length === void 0) { length = 32; }\n    var counter = new Uint8Array([1]);\n    // HKDF-Extract uses salt as HMAC key, and key as data.\n    var okm = hmac(salt, key);\n    // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n    var hmac_ = new HMAC(okm);\n    // Allocate buffer.\n    var buffer = new Uint8Array(hmac_.digestLength);\n    var bufpos = buffer.length;\n    var out = new Uint8Array(length);\n    for (var i = 0; i < length; i++) {\n        if (bufpos === buffer.length) {\n            fillBuffer(buffer, hmac_, info, counter);\n            bufpos = 0;\n        }\n        out[i] = buffer[bufpos++];\n    }\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n}\nexports.hkdf = hkdf;\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    var prf = new HMAC(password);\n    var len = prf.digestLength;\n    var ctr = new Uint8Array(4);\n    var t = new Uint8Array(len);\n    var u = new Uint8Array(len);\n    var dk = new Uint8Array(dkLen);\n    for (var i = 0; i * len < dkLen; i++) {\n        var c = i + 1;\n        ctr[0] = (c >>> 24) & 0xff;\n        ctr[1] = (c >>> 16) & 0xff;\n        ctr[2] = (c >>> 8) & 0xff;\n        ctr[3] = (c >>> 0) & 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (var j = 0; j < len; j++) {\n            t[j] = u[j];\n        }\n        for (var j = 2; j <= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (var k = 0; k < len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (var j = 0; j < len && i * len + j < dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (var i = 0; i < len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (var i = 0; i < 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\nexports.pbkdf2 = pbkdf2;\n});\n", "import { timingSafeEqual } from \"./timing_safe_equal\";\nimport * as base64 from \"@stablelib/base64\";\nimport * as sha256 from \"fast-sha256\";\n\nconst WEBHOOK_TOLERANCE_IN_SECONDS = 5 * 60; // 5 minutes\n\nclass ExtendableError extends Error {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(message: any) {\n    super(message);\n    Object.setPrototypeOf(this, ExtendableError.prototype);\n    this.name = \"ExtendableError\";\n    this.stack = new Error(message).stack;\n  }\n}\n\nexport class WebhookVerificationError extends ExtendableError {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, WebhookVerificationError.prototype);\n    this.name = \"WebhookVerificationError\";\n  }\n}\n\nexport interface WebhookRequiredHeaders {\n  \"svix-id\": string;\n  \"svix-timestamp\": string;\n  \"svix-signature\": string;\n}\n\nexport interface WebhookUnbrandedRequiredHeaders {\n  \"webhook-id\": string;\n  \"webhook-timestamp\": string;\n  \"webhook-signature\": string;\n}\n\nexport interface WebhookOptions {\n  format?: \"raw\";\n}\n\nexport class Webhook {\n  private static prefix = \"whsec_\";\n  private readonly key: Uint8Array;\n\n  constructor(secret: string | Uint8Array, options?: WebhookOptions) {\n    if (!secret) {\n      throw new Error(\"Secret can't be empty.\");\n    }\n    if (options?.format === \"raw\") {\n      if (secret instanceof Uint8Array) {\n        this.key = secret;\n      } else {\n        this.key = Uint8Array.from(secret, (c) => c.charCodeAt(0));\n      }\n    } else {\n      if (typeof secret !== \"string\") {\n        throw new Error(\"Expected secret to be of type string\");\n      }\n      if (secret.startsWith(Webhook.prefix)) {\n        secret = secret.substring(Webhook.prefix.length);\n      }\n      this.key = base64.decode(secret);\n    }\n  }\n\n  public verify(\n    payload: string | Buffer,\n    headers_:\n      | WebhookRequiredHeaders\n      | WebhookUnbrandedRequiredHeaders\n      | Record<string, string>\n  ): unknown {\n    const headers: Record<string, string> = {};\n    for (const key of Object.keys(headers_)) {\n      headers[key.toLowerCase()] = (headers_ as Record<string, string>)[key];\n    }\n\n    let msgId = headers[\"svix-id\"];\n    let msgSignature = headers[\"svix-signature\"];\n    let msgTimestamp = headers[\"svix-timestamp\"];\n\n    if (!msgSignature || !msgId || !msgTimestamp) {\n      msgId = headers[\"webhook-id\"];\n      msgSignature = headers[\"webhook-signature\"];\n      msgTimestamp = headers[\"webhook-timestamp\"];\n\n      if (!msgSignature || !msgId || !msgTimestamp) {\n        throw new WebhookVerificationError(\"Missing required headers\");\n      }\n    }\n\n    const timestamp = this.verifyTimestamp(msgTimestamp);\n\n    const computedSignature = this.sign(msgId, timestamp, payload);\n    const expectedSignature = computedSignature.split(\",\")[1];\n\n    const passedSignatures = msgSignature.split(\" \");\n\n    const encoder = new globalThis.TextEncoder();\n    for (const versionedSignature of passedSignatures) {\n      const [version, signature] = versionedSignature.split(\",\");\n      if (version !== \"v1\") {\n        continue;\n      }\n\n      if (timingSafeEqual(encoder.encode(signature), encoder.encode(expectedSignature))) {\n        return JSON.parse(payload.toString());\n      }\n    }\n    throw new WebhookVerificationError(\"No matching signature found\");\n  }\n\n  public sign(msgId: string, timestamp: Date, payload: string | Buffer): string {\n    if (typeof payload === \"string\") {\n      // Do nothing, already a string\n    } else if (payload.constructor.name === \"Buffer\") {\n      payload = payload.toString();\n    } else {\n      throw new Error(\n        \"Expected payload to be of type string or Buffer. Please refer to https://docs.svix.com/receiving/verifying-payloads/how for more information.\"\n      );\n    }\n\n    const encoder = new TextEncoder();\n    const timestampNumber = Math.floor(timestamp.getTime() / 1000);\n    const toSign = encoder.encode(`${msgId}.${timestampNumber}.${payload}`);\n    const expectedSignature = base64.encode(sha256.hmac(this.key, toSign));\n    return `v1,${expectedSignature}`;\n  }\n\n  private verifyTimestamp(timestampHeader: string): Date {\n    const now = Math.floor(Date.now() / 1000);\n    const timestamp = parseInt(timestampHeader, 10);\n    if (isNaN(timestamp)) {\n      throw new WebhookVerificationError(\"Invalid Signature Headers\");\n    }\n\n    if (now - timestamp > WEBHOOK_TOLERANCE_IN_SECONDS) {\n      throw new WebhookVerificationError(\"Message timestamp too old\");\n    }\n    if (timestamp > now + WEBHOOK_TOLERANCE_IN_SECONDS) {\n      throw new WebhookVerificationError(\"Message timestamp too new\");\n    }\n    return new Date(timestamp * 1000);\n  }\n}\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n\nexport enum EndpointDisabledTrigger {\n  Manual = \"manual\",\n  Automatic = \"automatic\",\n}\n\nexport const EndpointDisabledTriggerSerializer = {\n  _fromJsonObject(object: any): EndpointDisabledTrigger {\n    return object;\n  },\n\n  _toJsonObject(self: EndpointDisabledTrigger): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/** Defines the ordering in a listing of results. */\nexport enum Ordering {\n  Ascending = \"ascending\",\n  Descending = \"descending\",\n}\n\nexport const OrderingSerializer = {\n  _fromJsonObject(object: any): Ordering {\n    return object;\n  },\n\n  _toJsonObject(self: Ordering): any {\n    return self;\n  },\n};\n", "// this file is @generated\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/**\n * The different classes of HTTP status codes:\n *\n * - CodeNone = 0\n * - Code1xx = 100\n * - Code2xx = 200\n * - Code3xx = 300\n * - Code4xx = 400\n * - Code5xx = 500\n */\nexport enum StatusCodeClass {\n  CodeNone = 0,\n  Code1xx = 100,\n  Code2xx = 200,\n  Code3xx = 300,\n  Code4xx = 400,\n  Code5xx = 500,\n}\n\nexport const StatusCodeClassSerializer = {\n  _fromJsonObject(object: any): StatusCodeClass {\n    return object;\n  },\n\n  _toJsonObject(self: StatusCodeClass): any {\n    return self;\n  },\n};\n", "// this file is @generated\nexport { AdobeSignConfig } from \"./adobeSignConfig\";\nexport { AdobeSignConfigOut } from \"./adobeSignConfigOut\";\nexport { AggregateEventTypesOut } from \"./aggregateEventTypesOut\";\nexport { AirwallexConfig } from \"./airwallexConfig\";\nexport { AirwallexConfigOut } from \"./airwallexConfigOut\";\nexport { AppPortalAccessIn } from \"./appPortalAccessIn\";\nexport { AppPortalAccessOut } from \"./appPortalAccessOut\";\nexport { AppPortalCapability } from \"./appPortalCapability\";\nexport { AppUsageStatsIn } from \"./appUsageStatsIn\";\nexport { AppUsageStatsOut } from \"./appUsageStatsOut\";\nexport { ApplicationIn } from \"./applicationIn\";\nexport { ApplicationOut } from \"./applicationOut\";\nexport { ApplicationPatch } from \"./applicationPatch\";\nexport { ApplicationTokenExpireIn } from \"./applicationTokenExpireIn\";\nexport { BackgroundTaskFinishedEvent } from \"./backgroundTaskFinishedEvent\";\nexport { BackgroundTaskFinishedEvent2 } from \"./backgroundTaskFinishedEvent2\";\nexport { BackgroundTaskOut } from \"./backgroundTaskOut\";\nexport { BackgroundTaskStatus } from \"./backgroundTaskStatus\";\nexport { BackgroundTaskType } from \"./backgroundTaskType\";\nexport { CheckbookConfig } from \"./checkbookConfig\";\nexport { CheckbookConfigOut } from \"./checkbookConfigOut\";\nexport { ConnectorIn } from \"./connectorIn\";\nexport { ConnectorKind } from \"./connectorKind\";\nexport { ConnectorOut } from \"./connectorOut\";\nexport { CronConfig } from \"./cronConfig\";\nexport { DashboardAccessOut } from \"./dashboardAccessOut\";\nexport { DocusignConfig } from \"./docusignConfig\";\nexport { DocusignConfigOut } from \"./docusignConfigOut\";\nexport { EasypostConfig } from \"./easypostConfig\";\nexport { EasypostConfigOut } from \"./easypostConfigOut\";\nexport { EndpointCreatedEvent } from \"./endpointCreatedEvent\";\nexport { EndpointCreatedEventData } from \"./endpointCreatedEventData\";\nexport { EndpointDeletedEvent } from \"./endpointDeletedEvent\";\nexport { EndpointDeletedEventData } from \"./endpointDeletedEventData\";\nexport { EndpointDisabledEvent } from \"./endpointDisabledEvent\";\nexport { EndpointDisabledEventData } from \"./endpointDisabledEventData\";\nexport { EndpointDisabledTrigger } from \"./endpointDisabledTrigger\";\nexport { EndpointEnabledEvent } from \"./endpointEnabledEvent\";\nexport { EndpointEnabledEventData } from \"./endpointEnabledEventData\";\nexport { EndpointHeadersIn } from \"./endpointHeadersIn\";\nexport { EndpointHeadersOut } from \"./endpointHeadersOut\";\nexport { EndpointHeadersPatchIn } from \"./endpointHeadersPatchIn\";\nexport { EndpointIn } from \"./endpointIn\";\nexport { EndpointMessageOut } from \"./endpointMessageOut\";\nexport { EndpointOut } from \"./endpointOut\";\nexport { EndpointPatch } from \"./endpointPatch\";\nexport { EndpointSecretOut } from \"./endpointSecretOut\";\nexport { EndpointSecretRotateIn } from \"./endpointSecretRotateIn\";\nexport { EndpointStats } from \"./endpointStats\";\nexport { EndpointTransformationIn } from \"./endpointTransformationIn\";\nexport { EndpointTransformationOut } from \"./endpointTransformationOut\";\nexport { EndpointTransformationPatch } from \"./endpointTransformationPatch\";\nexport { EndpointUpdate } from \"./endpointUpdate\";\nexport { EndpointUpdatedEvent } from \"./endpointUpdatedEvent\";\nexport { EndpointUpdatedEventData } from \"./endpointUpdatedEventData\";\nexport { EnvironmentIn } from \"./environmentIn\";\nexport { EnvironmentOut } from \"./environmentOut\";\nexport { EventExampleIn } from \"./eventExampleIn\";\nexport { EventTypeFromOpenApi } from \"./eventTypeFromOpenApi\";\nexport { EventTypeImportOpenApiIn } from \"./eventTypeImportOpenApiIn\";\nexport { EventTypeImportOpenApiOut } from \"./eventTypeImportOpenApiOut\";\nexport { EventTypeImportOpenApiOutData } from \"./eventTypeImportOpenApiOutData\";\nexport { EventTypeIn } from \"./eventTypeIn\";\nexport { EventTypeOut } from \"./eventTypeOut\";\nexport { EventTypePatch } from \"./eventTypePatch\";\nexport { EventTypeUpdate } from \"./eventTypeUpdate\";\nexport { ExpungeAllContentsOut } from \"./expungeAllContentsOut\";\nexport { GithubConfig } from \"./githubConfig\";\nexport { GithubConfigOut } from \"./githubConfigOut\";\nexport { HubspotConfig } from \"./hubspotConfig\";\nexport { HubspotConfigOut } from \"./hubspotConfigOut\";\nexport { IngestEndpointHeadersIn } from \"./ingestEndpointHeadersIn\";\nexport { IngestEndpointHeadersOut } from \"./ingestEndpointHeadersOut\";\nexport { IngestEndpointIn } from \"./ingestEndpointIn\";\nexport { IngestEndpointOut } from \"./ingestEndpointOut\";\nexport { IngestEndpointSecretIn } from \"./ingestEndpointSecretIn\";\nexport { IngestEndpointSecretOut } from \"./ingestEndpointSecretOut\";\nexport { IngestEndpointTransformationOut } from \"./ingestEndpointTransformationOut\";\nexport { IngestEndpointTransformationPatch } from \"./ingestEndpointTransformationPatch\";\nexport { IngestEndpointUpdate } from \"./ingestEndpointUpdate\";\nexport { IngestSourceConsumerPortalAccessIn } from \"./ingestSourceConsumerPortalAccessIn\";\nexport { IngestSourceIn } from \"./ingestSourceIn\";\nexport { IngestSourceOut } from \"./ingestSourceOut\";\nexport { IntegrationIn } from \"./integrationIn\";\nexport { IntegrationKeyOut } from \"./integrationKeyOut\";\nexport { IntegrationOut } from \"./integrationOut\";\nexport { IntegrationUpdate } from \"./integrationUpdate\";\nexport { ListResponseApplicationOut } from \"./listResponseApplicationOut\";\nexport { ListResponseBackgroundTaskOut } from \"./listResponseBackgroundTaskOut\";\nexport { ListResponseEndpointMessageOut } from \"./listResponseEndpointMessageOut\";\nexport { ListResponseEndpointOut } from \"./listResponseEndpointOut\";\nexport { ListResponseEventTypeOut } from \"./listResponseEventTypeOut\";\nexport { ListResponseIngestEndpointOut } from \"./listResponseIngestEndpointOut\";\nexport { ListResponseIngestSourceOut } from \"./listResponseIngestSourceOut\";\nexport { ListResponseIntegrationOut } from \"./listResponseIntegrationOut\";\nexport { ListResponseMessageAttemptOut } from \"./listResponseMessageAttemptOut\";\nexport { ListResponseMessageEndpointOut } from \"./listResponseMessageEndpointOut\";\nexport { ListResponseMessageOut } from \"./listResponseMessageOut\";\nexport { ListResponseOperationalWebhookEndpointOut } from \"./listResponseOperationalWebhookEndpointOut\";\nexport { MessageAttemptExhaustedEvent } from \"./messageAttemptExhaustedEvent\";\nexport { MessageAttemptExhaustedEventData } from \"./messageAttemptExhaustedEventData\";\nexport { MessageAttemptFailedData } from \"./messageAttemptFailedData\";\nexport { MessageAttemptFailingEvent } from \"./messageAttemptFailingEvent\";\nexport { MessageAttemptFailingEventData } from \"./messageAttemptFailingEventData\";\nexport { MessageAttemptOut } from \"./messageAttemptOut\";\nexport { MessageAttemptRecoveredEvent } from \"./messageAttemptRecoveredEvent\";\nexport { MessageAttemptRecoveredEventData } from \"./messageAttemptRecoveredEventData\";\nexport { MessageAttemptTriggerType } from \"./messageAttemptTriggerType\";\nexport { MessageEndpointOut } from \"./messageEndpointOut\";\nexport { MessageIn } from \"./messageIn\";\nexport { MessageOut } from \"./messageOut\";\nexport { MessageStatus } from \"./messageStatus\";\nexport { MessageStatusText } from \"./messageStatusText\";\nexport { OperationalWebhookEndpointHeadersIn } from \"./operationalWebhookEndpointHeadersIn\";\nexport { OperationalWebhookEndpointHeadersOut } from \"./operationalWebhookEndpointHeadersOut\";\nexport { OperationalWebhookEndpointIn } from \"./operationalWebhookEndpointIn\";\nexport { OperationalWebhookEndpointOut } from \"./operationalWebhookEndpointOut\";\nexport { OperationalWebhookEndpointSecretIn } from \"./operationalWebhookEndpointSecretIn\";\nexport { OperationalWebhookEndpointSecretOut } from \"./operationalWebhookEndpointSecretOut\";\nexport { OperationalWebhookEndpointUpdate } from \"./operationalWebhookEndpointUpdate\";\nexport { Ordering } from \"./ordering\";\nexport { OrumIoConfig } from \"./orumIoConfig\";\nexport { OrumIoConfigOut } from \"./orumIoConfigOut\";\nexport { PandaDocConfig } from \"./pandaDocConfig\";\nexport { PandaDocConfigOut } from \"./pandaDocConfigOut\";\nexport { PollingEndpointConsumerSeekIn } from \"./pollingEndpointConsumerSeekIn\";\nexport { PollingEndpointConsumerSeekOut } from \"./pollingEndpointConsumerSeekOut\";\nexport { PollingEndpointMessageOut } from \"./pollingEndpointMessageOut\";\nexport { PollingEndpointOut } from \"./pollingEndpointOut\";\nexport { PortIoConfig } from \"./portIoConfig\";\nexport { PortIoConfigOut } from \"./portIoConfigOut\";\nexport { RecoverIn } from \"./recoverIn\";\nexport { RecoverOut } from \"./recoverOut\";\nexport { ReplayIn } from \"./replayIn\";\nexport { ReplayOut } from \"./replayOut\";\nexport { RotateTokenOut } from \"./rotateTokenOut\";\nexport { RutterConfig } from \"./rutterConfig\";\nexport { RutterConfigOut } from \"./rutterConfigOut\";\nexport { SegmentConfig } from \"./segmentConfig\";\nexport { SegmentConfigOut } from \"./segmentConfigOut\";\nexport { ShopifyConfig } from \"./shopifyConfig\";\nexport { ShopifyConfigOut } from \"./shopifyConfigOut\";\nexport { SlackConfig } from \"./slackConfig\";\nexport { SlackConfigOut } from \"./slackConfigOut\";\nexport { StatusCodeClass } from \"./statusCodeClass\";\nexport { StripeConfig } from \"./stripeConfig\";\nexport { StripeConfigOut } from \"./stripeConfigOut\";\nexport { SvixConfig } from \"./svixConfig\";\nexport { SvixConfigOut } from \"./svixConfigOut\";\nexport { TelnyxConfig } from \"./telnyxConfig\";\nexport { TelnyxConfigOut } from \"./telnyxConfigOut\";\nexport { VapiConfig } from \"./vapiConfig\";\nexport { VapiConfigOut } from \"./vapiConfigOut\";\nexport { VeriffConfig } from \"./veriffConfig\";\nexport { VeriffConfigOut } from \"./veriffConfigOut\";\nexport { ZoomConfig } from \"./zoomConfig\";\nexport { ZoomConfigOut } from \"./zoomConfigOut\";\n", "// this file is @generated\nimport { Application } from \"./api/application\";\nimport { Authentication } from \"./api/authentication\";\nimport { BackgroundTask } from \"./api/backgroundTask\";\nimport { Endpoint } from \"./api/endpoint\";\nimport { Environment } from \"./api/environment\";\nimport { EventType } from \"./api/eventType\";\nimport { Health } from \"./api/health\";\nimport { Ingest } from \"./api/ingest\";\nimport { Integration } from \"./api/integration\";\nimport { Message } from \"./api/message\";\nimport { MessageAttempt } from \"./api/messageAttempt\";\nimport { OperationalWebhook } from \"./api/operationalWebhook\";\nimport { Statistics } from \"./api/statistics\";\nimport { OperationalWebhookEndpoint } from \"./api/operationalWebhookEndpoint\";\nimport { SvixRequestContext } from \"./request\";\n\nexport { PostOptions, ApiException } from \"./util\";\nexport { HTTPValidationError, HttpErrorOut, ValidationError } from \"./HttpErrors\";\nexport * from \"./webhook\";\nexport * from \"./models/index\";\nimport { XOR } from \"./util\";\n\nexport { ApplicationListOptions } from \"./api/application\";\nexport { BackgroundTaskListOptions } from \"./api/backgroundTask\";\nexport { EndpointListOptions, EndpointGetStatsOptions } from \"./api/endpoint\";\nexport { EventTypeListOptions } from \"./api/eventType\";\nexport { IntegrationListOptions } from \"./api/integration\";\nexport { MessageListOptions, messageInRaw } from \"./api/message\";\nexport { MessageAttemptListByEndpointOptions } from \"./api/messageAttempt\";\nexport { OperationalWebhookEndpointListOptions } from \"./api/operationalWebhookEndpoint\";\n\nexport type SvixOptions = {\n  debug?: boolean;\n  serverUrl?: string;\n  /** Time in milliseconds to wait for requests to get a response. */\n  requestTimeout?: number;\n} & XOR<\n  {\n    /** List of delays (in milliseconds) to wait before each retry attempt.*/\n    retryScheduleInMs?: number[];\n  },\n  {\n    /** The number of times the client will retry if a server-side error\n     *  or timeout is received.\n     *  Default: 2\n     */\n    numRetries?: number;\n  }\n>;\n\nconst REGIONS = [\n  { region: \"us\", url: \"https://api.us.svix.com\" },\n  { region: \"eu\", url: \"https://api.eu.svix.com\" },\n  { region: \"in\", url: \"https://api.in.svix.com\" },\n  { region: \"ca\", url: \"https://api.ca.svix.com\" },\n  { region: \"au\", url: \"https://api.au.svix.com\" },\n];\n\nexport class Svix {\n  private readonly requestCtx: SvixRequestContext;\n\n  public constructor(token: string, options: SvixOptions = {}) {\n    const regionalUrl = REGIONS.find((x) => x.region === token.split(\".\")[1])?.url;\n    const baseUrl: string = options.serverUrl ?? regionalUrl ?? \"https://api.svix.com\";\n\n    if (options.retryScheduleInMs) {\n      this.requestCtx = {\n        baseUrl,\n        token,\n        timeout: options.requestTimeout,\n        retryScheduleInMs: options.retryScheduleInMs,\n      };\n      return;\n    }\n    if (options.numRetries) {\n      this.requestCtx = {\n        baseUrl,\n        token,\n        timeout: options.requestTimeout,\n        numRetries: options.numRetries,\n      };\n      return;\n    }\n    this.requestCtx = {\n      baseUrl,\n      token,\n      timeout: options.requestTimeout,\n    };\n  }\n\n  public get application() {\n    return new Application(this.requestCtx);\n  }\n\n  public get authentication() {\n    return new Authentication(this.requestCtx);\n  }\n\n  public get backgroundTask() {\n    return new BackgroundTask(this.requestCtx);\n  }\n\n  public get endpoint() {\n    return new Endpoint(this.requestCtx);\n  }\n\n  public get environment() {\n    return new Environment(this.requestCtx);\n  }\n\n  public get eventType() {\n    return new EventType(this.requestCtx);\n  }\n\n  public get health() {\n    return new Health(this.requestCtx);\n  }\n\n  public get ingest() {\n    return new Ingest(this.requestCtx);\n  }\n\n  public get integration() {\n    return new Integration(this.requestCtx);\n  }\n\n  public get message() {\n    return new Message(this.requestCtx);\n  }\n\n  public get messageAttempt() {\n    return new MessageAttempt(this.requestCtx);\n  }\n\n  public get operationalWebhook() {\n    return new OperationalWebhook(this.requestCtx);\n  }\n\n  public get statistics() {\n    return new Statistics(this.requestCtx);\n  }\n\n  public get operationalWebhookEndpoint() {\n    return new OperationalWebhookEndpoint(this.requestCtx);\n  }\n}\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { HTTPException } from \"./http-exception.js\";\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param && /\\%/.test(param) ? tryDecodeURIComponent(param) : param;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value !== void 0) {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nvar cloneRawRequest = async (req) => {\n  if (!req.raw.bodyUsed) {\n    return req.raw.clone();\n  }\n  const cacheKey = Object.keys(req.bodyCache)[0];\n  if (!cacheKey) {\n    throw new HTTPException(500, {\n      message: \"Cannot clone request: body was already consumed and not cached. Please use HonoRequest methods (e.g., req.json(), req.text()) instead of consuming req.raw directly.\"\n    });\n  }\n  const requestInit = {\n    body: await req[cacheKey](),\n    cache: req.raw.cache,\n    credentials: req.raw.credentials,\n    headers: req.header(),\n    integrity: req.raw.integrity,\n    keepalive: req.raw.keepalive,\n    method: req.method,\n    mode: req.raw.mode,\n    redirect: req.raw.redirect,\n    referrer: req.raw.referrer,\n    referrerPolicy: req.raw.referrerPolicy,\n    signal: req.raw.signal\n  };\n  return new Request(req.url, requestInit);\n};\nexport {\n  HonoRequest,\n  cloneRawRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/matcher.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nvar emptyParam = [];\nfunction match(method, path) {\n  const matchers = this.buildAllMatchers();\n  const match2 = (method2, path2) => {\n    const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n    const staticMatch = matcher[2][path2];\n    if (staticMatch) {\n      return staticMatch;\n    }\n    const match3 = path2.match(matcher[0]);\n    if (!match3) {\n      return [[], emptyParam];\n    }\n    const index = match3.indexOf(\"\", 1);\n    return [matcher[1][index], match3];\n  };\n  this.match = match2;\n  return match2(method, path);\n}\nexport {\n  emptyParam,\n  match\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { match, emptyParam } from \"./matcher.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match = match;\n  buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    clearWildcardRegExpCache();\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = await findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = await findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// src/utils/color.ts\nfunction getColorEnabled() {\n  const { process, Deno } = globalThis;\n  const isNoColor = typeof Deno?.noColor === \"boolean\" ? Deno.noColor : process !== void 0 ? \"NO_COLOR\" in process?.env : false;\n  return !isNoColor;\n}\nasync function getColorEnabledAsync() {\n  const { navigator } = globalThis;\n  const cfWorkers = \"cloudflare:workers\";\n  const isNoColor = navigator !== void 0 && navigator.userAgent === \"Cloudflare-Workers\" ? await (async () => {\n    try {\n      return \"NO_COLOR\" in ((await import(cfWorkers)).env ?? {});\n    } catch {\n      return false;\n    }\n  })() : !getColorEnabled();\n  return !isNoColor;\n}\nexport {\n  getColorEnabled,\n  getColorEnabledAsync\n};\n", "// src/middleware/logger/index.ts\nimport { getColorEnabledAsync } from \"../../utils/color.js\";\nvar humanize = (times) => {\n  const [delimiter, separator] = [\",\", \".\"];\n  const orderTimes = times.map((v) => v.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1\" + delimiter));\n  return orderTimes.join(separator);\n};\nvar time = (start) => {\n  const delta = Date.now() - start;\n  return humanize([delta < 1e3 ? delta + \"ms\" : Math.round(delta / 1e3) + \"s\"]);\n};\nvar colorStatus = async (status) => {\n  const colorEnabled = await getColorEnabledAsync();\n  if (colorEnabled) {\n    switch (status / 100 | 0) {\n      case 5:\n        return `\\x1B[31m${status}\\x1B[0m`;\n      case 4:\n        return `\\x1B[33m${status}\\x1B[0m`;\n      case 3:\n        return `\\x1B[36m${status}\\x1B[0m`;\n      case 2:\n        return `\\x1B[32m${status}\\x1B[0m`;\n    }\n  }\n  return `${status}`;\n};\nasync function log(fn, prefix, method, path, status = 0, elapsed) {\n  const out = prefix === \"<--\" /* Incoming */ ? `${prefix} ${method} ${path}` : `${prefix} ${method} ${path} ${await colorStatus(status)} ${elapsed}`;\n  fn(out);\n}\nvar logger = (fn = console.log) => {\n  return async function logger2(c, next) {\n    const { method, url } = c.req;\n    const path = url.slice(url.indexOf(\"/\", 8));\n    await log(fn, \"<--\" /* Incoming */, method, path);\n    const start = Date.now();\n    await next();\n    await log(fn, \"-->\" /* Outgoing */, method, path, c.res.status, time(start));\n  };\n};\nexport {\n  logger\n};\n", "/**\n * Main application with dynamic automation routing.\n * Automatically registers all enabled automations.\n */\n\nimport { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport { logger as honoLogger } from 'hono/logger';\nimport { config } from './config.js';\nimport { getEnabledAutomations } from './core/automation-registry.js';\nimport { logger } from './shared/utils/logger.js';\nimport { monitor } from './shared/utils/monitor.js';\n\n// Initialize monitoring\nmonitor.initMonitoring();\n\nconst app = new Hono();\n\n// Global middleware\napp.use('*', cors());\napp.use('*', honoLogger());\n\n// Platform health check\napp.get('/', (c) => {\n  const enabledAutomations = getEnabledAutomations();\n\n  return c.json({\n    status: 'ok',\n    service: 'automation-platform',\n    version: '1.0.0',\n    environment: config.env,\n    automations: enabledAutomations.map((a) => ({\n      id: a.id,\n      name: a.name,\n      route: a.baseRoute,\n    })),\n    timestamp: new Date().toISOString(),\n  });\n});\n\n// List all automations\napp.get('/automations', (c) => {\n  const enabledAutomations = getEnabledAutomations();\n\n  return c.json({\n    automations: enabledAutomations.map((a) => ({\n      id: a.id,\n      name: a.name,\n      description: a.description,\n      baseRoute: a.baseRoute,\n    })),\n  });\n});\n\n// Dynamically register all enabled automations\nlogger.info('Registering automations...');\nconst enabledAutomations = getEnabledAutomations();\n\nfor (const automation of enabledAutomations) {\n  logger.info(`Registering: ${automation.name}`, {\n    automationId: automation.id,\n    route: automation.baseRoute,\n  });\n\n  automation.setup(app);\n}\n\nlogger.info(`${enabledAutomations.length} automations registered`);\n\n// 404 handler\napp.notFound((c) => {\n  return c.json({ error: 'Not found' }, 404);\n});\n\n// Global error handler\napp.onError((err, c) => {\n  logger.error('Unhandled error', err);\n  monitor.captureException(err);\n\n  return c.json(\n    {\n      error: 'Internal server error',\n      message: config.env === 'development' ? err.message : undefined,\n    },\n    500\n  );\n});\n\n// Log startup info (development)\nif (config.env === 'development') {\n  const port = config.port;\n\n  console.log(`\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551                                                            \u2551\n\u2551  \uD83D\uDE80  Multi-Automation Platform                             \u2551\n\u2551                                                            \u2551\n\u2551  Server: http://localhost:${port}                        \u2551\n\u2551  Environment: ${config.env}                              \u2551\n\u2551                                                            \u2551\n\u2551  Enabled Automations:                                      \u2551\n${enabledAutomations\n  .map((a) => `\u2551    \u2022 ${a.name.padEnd(50)}  \u2551`)\n  .join('\\n')}\n\u2551                                                            \u2551\n\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D\n  `);\n}\n\nexport default app;\n", "/**\n * Configuration specific to Lead Management automation.\n */\n\nexport const config = {\n  notionDatabase: process.env.LEAD_NOTION_DATABASE_ID!,\n  companiesDatabase: process.env.LEAD_COMPANIES_DATABASE_ID!,\n  peopleDatabase: process.env.LEAD_PEOPLE_DATABASE_ID!,\n  slackChannel: process.env.LEAD_SLACK_CHANNEL_ID!,\n  calcomLink: process.env.LEAD_CALCOM_LINK || '',\n  calcomWebhookSecret: process.env.LEAD_CALCOM_WEBHOOK_SECRET || '',\n\n  google: {\n    clientId: process.env.GOOGLE_CLIENT_ID || '',\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET || '',\n    refreshToken: process.env.GOOGLE_REFRESH_TOKEN || '',\n  },\n\n  features: {\n    minimumBudget: parseInt(process.env.LEAD_MINIMUM_BUDGET || '0'),\n    autoAccept: process.env.LEAD_AUTO_ACCEPT === 'true',\n  },\n\n  budgetRanges: [\n    '$250 - $1000',\n    '$1000 - $5000',\n    '$5000 - $20000',\n    '$20000+',\n  ],\n};\n\n// Validate required config\nif (!config.notionDatabase) {\n  throw new Error('LEAD_NOTION_DATABASE_ID is required');\n}\n\nif (!config.companiesDatabase) {\n  throw new Error('LEAD_COMPANIES_DATABASE_ID is required');\n}\n\nif (!config.peopleDatabase) {\n  throw new Error('LEAD_PEOPLE_DATABASE_ID is required');\n}\n\nif (!config.slackChannel) {\n  throw new Error('LEAD_SLACK_CHANNEL_ID is required');\n}\n", "/**\n * Gmail webhook handler for incoming lead emails.\n */\n\nimport type { Context } from 'hono';\nimport { google } from 'googleapis';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { monitor } from '../../../shared/utils/monitor.js';\nimport { processLead } from '../workflows/process-lead.js';\nimport { config } from '../config.js';\nimport type { EmailParsedData } from '../types.js';\n\n/**\n * Handle Gmail push notification\n */\nexport async function handleGmailWebhook(c: Context) {\n  try {\n    logger.info('Gmail webhook received', { automationId: 'lead-management' });\n\n    // Parse the Gmail push notification\n    const body = await c.req.json();\n    const message = body.message;\n\n    if (!message || !message.data) {\n      logger.warn('Invalid Gmail webhook payload');\n      return c.json({ success: false, error: 'Invalid payload' }, 400);\n    }\n\n    // Decode the message data\n    const decodedData = Buffer.from(message.data, 'base64').toString('utf-8');\n    const data = JSON.parse(decodedData);\n\n    logger.info('Gmail push notification decoded', { data });\n\n    // Get the message details from Gmail API\n    const emailData = await fetchGmailMessage(data.historyId);\n\n    if (!emailData) {\n      logger.warn('Could not fetch email message');\n      return c.json({ success: false, error: 'Could not fetch email' }, 400);\n    }\n\n    // Process the lead\n    await processLead(emailData);\n\n    return c.json({\n      success: true,\n      message: 'Lead processed successfully',\n    });\n  } catch (error) {\n    logger.error('Error handling Gmail webhook', error);\n    monitor.captureException(error, {\n      automationId: 'lead-management',\n      webhook: 'gmail',\n    });\n\n    return c.json(\n      {\n        success: false,\n        error: 'Internal server error',\n      },\n      500\n    );\n  }\n}\n\n/**\n * Fetch email message from Gmail API\n */\nasync function fetchGmailMessage(historyId: string): Promise<EmailParsedData | null> {\n  try {\n    // Initialize Gmail API client\n    const oauth2Client = new google.auth.OAuth2(\n      config.google.clientId,\n      config.google.clientSecret\n    );\n\n    oauth2Client.setCredentials({\n      refresh_token: config.google.refreshToken,\n    });\n\n    const gmail = google.gmail({ version: 'v1', auth: oauth2Client });\n\n    // Get the latest message\n    const response = await gmail.users.messages.list({\n      userId: 'me',\n      maxResults: 1,\n      q: 'is:unread', // Only fetch unread messages\n    });\n\n    const messages = response.data.messages;\n\n    if (!messages || messages.length === 0) {\n      return null;\n    }\n\n    const messageId = messages[0].id!;\n\n    // Get full message details\n    const message = await gmail.users.messages.get({\n      userId: 'me',\n      id: messageId,\n      format: 'full',\n    });\n\n    // Extract headers\n    const headers = message.data.payload?.headers || [];\n    const from = headers.find((h) => h.name?.toLowerCase() === 'from')?.value || '';\n    const subject = headers.find((h) => h.name?.toLowerCase() === 'subject')?.value || '';\n\n    // Extract body\n    let body = '';\n    if (message.data.payload?.body?.data) {\n      body = Buffer.from(message.data.payload.body.data, 'base64').toString('utf-8');\n    } else if (message.data.payload?.parts) {\n      // Handle multipart messages\n      for (const part of message.data.payload.parts) {\n        if (part.mimeType === 'text/plain' && part.body?.data) {\n          body = Buffer.from(part.body.data, 'base64').toString('utf-8');\n          break;\n        }\n      }\n    }\n\n    // Mark as read\n    await gmail.users.messages.modify({\n      userId: 'me',\n      id: messageId,\n      requestBody: {\n        removeLabelIds: ['UNREAD'],\n      },\n    });\n\n    logger.info('Email fetched successfully', { messageId, from, subject });\n\n    return {\n      from,\n      subject,\n      body,\n    };\n  } catch (error) {\n    logger.error('Error fetching Gmail message', error);\n    return null;\n  }\n}\n", "/**\n * Error monitoring with Sentry.\n */\n\nimport * as Sentry from '@sentry/node';\nimport { config } from '../../config.js';\nimport { logger } from './logger.js';\n\n/**\n * Initialize Sentry\n */\nexport function initMonitoring() {\n  if (config.observability.sentry.dsn) {\n    Sentry.init({\n      dsn: config.observability.sentry.dsn,\n      environment: config.env,\n      tracesSampleRate: config.env === 'production' ? 0.1 : 1.0,\n    });\n\n    logger.info('Sentry monitoring initialized');\n  }\n}\n\n/**\n * Capture an exception\n */\nexport function captureException(error: Error | unknown, context?: Record<string, any>) {\n  logger.error('Exception captured', error);\n\n  if (config.observability.sentry.dsn) {\n    Sentry.captureException(error, {\n      extra: context,\n    });\n  }\n}\n\n/**\n * Capture a message\n */\nexport function captureMessage(message: string, level: Sentry.SeverityLevel = 'info') {\n  if (config.observability.sentry.dsn) {\n    Sentry.captureMessage(message, level);\n  }\n}\n\n/**\n * Set user context\n */\nexport function setUser(user: { id: string; email?: string; username?: string }) {\n  if (config.observability.sentry.dsn) {\n    Sentry.setUser(user);\n  }\n}\n\n/**\n * Add breadcrumb\n */\nexport function addBreadcrumb(breadcrumb: Sentry.Breadcrumb) {\n  if (config.observability.sentry.dsn) {\n    Sentry.addBreadcrumb(breadcrumb);\n  }\n}\n\nexport const monitor = {\n  initMonitoring,\n  captureException,\n  captureMessage,\n  setUser,\n  addBreadcrumb,\n};\n", "/**\n * Generic Notion service used by all automations.\n * Provides reusable CRUD operations.\n */\n\nimport { Client } from '@notionhq/client';\nimport { config } from '../../config.js';\nimport { withRetry } from '../utils/retry.js';\nimport { logger } from '../utils/logger.js';\n\nconst notion = new Client({ auth: config.notion.apiKey });\n\n/**\n * Create a page in any database\n */\nexport async function createPage(databaseId: string, properties: Record<string, any>) {\n  logger.info('Creating Notion page', { databaseId });\n\n  return withRetry(() =>\n    notion.pages.create({\n      parent: { database_id: databaseId },\n      properties,\n    })\n  );\n}\n\n/**\n * Update any page\n */\nexport async function updatePage(pageId: string, properties: Record<string, any>) {\n  logger.info('Updating Notion page', { pageId });\n\n  return withRetry(() =>\n    notion.pages.update({\n      page_id: pageId,\n      properties,\n    })\n  );\n}\n\n/**\n * Query a database with optional filter\n */\nexport async function queryDatabase(databaseId: string, filter?: any) {\n  return withRetry(() =>\n    notion.databases.query({\n      database_id: databaseId,\n      filter,\n    })\n  );\n}\n\n/**\n * Find page by property value\n */\nexport async function findPageByProperty(\n  databaseId: string,\n  propertyName: string,\n  propertyType: 'email' | 'rich_text' | 'title',\n  value: string\n): Promise<any | null> {\n  const filter: any = { property: propertyName };\n\n  if (propertyType === 'email') {\n    filter.email = { equals: value };\n  } else if (propertyType === 'rich_text') {\n    filter.rich_text = { equals: value };\n  } else if (propertyType === 'title') {\n    filter.title = { equals: value };\n  }\n\n  const results = await queryDatabase(databaseId, filter);\n  return results.results[0] || null;\n}\n\n/**\n * Retrieve a page\n */\nexport async function retrievePage(pageId: string) {\n  return withRetry(() => notion.pages.retrieve({ page_id: pageId }));\n}\n\n/**\n * Retrieve a database\n */\nexport async function retrieveDatabase(databaseId: string) {\n  return withRetry(() => notion.databases.retrieve({ database_id: databaseId }));\n}\n\n/**\n * Get the title property name for a database\n */\nexport async function getTitlePropertyName(databaseId: string): Promise<string> {\n  const db = await retrieveDatabase(databaseId);\n\n  // Find the title property\n  for (const [propName, prop] of Object.entries(db.properties as Record<string, any>)) {\n    if (prop.type === 'title') {\n      logger.info('Found title property', { databaseId, propertyName: propName });\n      return propName;\n    }\n  }\n\n  throw new Error(`No title property found in database ${databaseId}`);\n}\n\n/**\n * Create a comment on a page\n */\nexport async function createComment(pageId: string, text: string) {\n  return withRetry(() =>\n    notion.comments.create({\n      parent: { page_id: pageId },\n      rich_text: [\n        {\n          type: 'text',\n          text: { content: text },\n        },\n      ],\n    })\n  );\n}\n", "/**\n * Process lead workflow: Parse email \u2192 Create Notion record \u2192 Send Slack notification\n */\n\nimport { createPage, getTitlePropertyName } from '../../../shared/services/notion.js';\nimport { sendMessage } from '../../../shared/services/slack.js';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { extractEmail, parseCurrency, cleanText } from '../../../shared/utils/parser.js';\nimport { config } from '../config.js';\nimport { findOrCreateCompany } from './manage-company.js';\nimport { findOrCreateContact } from './manage-contact.js';\nimport type { EmailParsedData, Lead } from '../types.js';\n\n/**\n * Map budget amount to budget range select option\n */\nfunction mapBudgetToRange(budget?: number): string | undefined {\n  if (!budget) return undefined;\n\n  if (budget < 1000) return '$250 - $1000';\n  if (budget < 5000) return '$1000 - $5000';\n  if (budget < 20000) return '$5000 - $20000';\n  return '$20000+';\n}\n\n/**\n * Parse booking email to extract lead information\n */\nexport function parseBookingEmail(emailData: {\n  from: string;\n  subject: string;\n  body: string;\n}): EmailParsedData {\n  const { from, subject, body } = emailData;\n\n  // Extract email\n  const email = extractEmail(from) || '';\n\n  // Try to extract name from \"Name <email@domain.com>\" format\n  const nameMatch = from.match(/^([^<]+)</);\n  const name = nameMatch ? nameMatch[1].trim() : '';\n\n  // Extract company (look for common patterns)\n  const companyMatch = body.match(/company:?\\s*([^\\n]+)/i);\n  const company = companyMatch ? companyMatch[1].trim() : undefined;\n\n  // Extract project description\n  const projectMatch = body.match(/project:?\\s*([^\\n]+(?:\\n(?!\\w+:)[^\\n]+)*)/i);\n  const projectDescription = projectMatch ? cleanText(projectMatch[1]) : body.slice(0, 500);\n\n  // Extract budget\n  const budget = parseCurrency(body) || undefined;\n\n  // Extract timeline\n  const timelineMatch = body.match(/timeline:?\\s*([^\\n]+)/i);\n  const timeline = timelineMatch ? timelineMatch[1].trim() : undefined;\n\n  return {\n    from,\n    subject,\n    body,\n    name,\n    company,\n    projectDescription,\n    budget,\n    timeline,\n  };\n}\n\n/**\n * Create lead in Notion (with company and contact relations)\n */\nexport async function createLeadInNotion(lead: Lead): Promise<string> {\n  logger.info('Creating lead in Notion', { email: lead.email, company: lead.company });\n\n  // Step 1: Find or create company\n  let companyId: string | undefined;\n  if (lead.company) {\n    companyId = await findOrCreateCompany(lead.company);\n  }\n\n  // Step 2: Find or create contact\n  const contactId = await findOrCreateContact(\n    lead.name || '',\n    lead.email,\n    companyId\n  );\n\n  // Step 3: Create lead record\n  // Get the title property name\n  const titleProp = await getTitlePropertyName(config.notionDatabase);\n\n  const properties: any = {\n    [titleProp]: {\n      title: [\n        {\n          text: {\n            content: lead.name || lead.email,\n          },\n        },\n      ],\n    },\n    Stage: {\n      status: {\n        name: 'Lead', // Default stage\n      },\n    },\n  };\n\n  // Link to company (relation)\n  if (companyId) {\n    properties.Company = {\n      relation: [{ id: companyId }],\n    };\n  }\n\n  // Link to contact (relation)\n  if (contactId) {\n    properties.Contacts = {\n      relation: [{ id: contactId }],\n    };\n  }\n\n  // Add description\n  if (lead.projectDescription) {\n    properties.Description = {\n      rich_text: [{ text: { content: lead.projectDescription } }],\n    };\n  }\n\n  // Map budget to select range\n  const budgetRange = mapBudgetToRange(lead.budget);\n  if (budgetRange) {\n    properties.Budget = {\n      select: {\n        name: budgetRange,\n      },\n    };\n  }\n\n  const page = await createPage(config.notionDatabase, properties);\n\n  logger.info('Lead created in Notion', {\n    pageId: page.id,\n    email: lead.email,\n    companyId,\n    contactId,\n    budgetRange,\n  });\n\n  return page.id;\n}\n\n/**\n * Send Slack notification with interactive buttons\n */\nexport async function sendSlackNotification(\n  lead: Lead,\n  notionPageId: string\n): Promise<{ ts: string; channel: string }> {\n  logger.info('Sending Slack notification', { email: lead.email });\n\n  const budgetRange = mapBudgetToRange(lead.budget);\n\n  const blocks = [\n    {\n      type: 'header',\n      text: {\n        type: 'plain_text',\n        text: `\uD83C\uDFAF New Lead: ${lead.name || lead.email}`,\n      },\n    },\n    {\n      type: 'section',\n      fields: [\n        {\n          type: 'mrkdwn',\n          text: `*Email:*\\n${lead.email}`,\n        },\n        {\n          type: 'mrkdwn',\n          text: `*Company:*\\n${lead.company || 'N/A'}`,\n        },\n        {\n          type: 'mrkdwn',\n          text: `*Budget:*\\n${budgetRange || 'N/A'}`,\n        },\n        {\n          type: 'mrkdwn',\n          text: `*Contact:*\\n${lead.name || 'N/A'}`,\n        },\n      ],\n    },\n  ];\n\n  // Add project description\n  if (lead.projectDescription) {\n    blocks.push({\n      type: 'section',\n      text: {\n        type: 'mrkdwn',\n        text: `*Project:*\\n${lead.projectDescription}`,\n      },\n    } as any);\n  }\n\n  // Add Notion link\n  blocks.push({\n    type: 'section',\n    text: {\n      type: 'mrkdwn',\n      text: `<https://notion.so/${notionPageId.replace(/-/g, '')}|View in Notion>`,\n    },\n  } as any);\n\n  // Add action buttons\n  blocks.push({\n    type: 'actions',\n    block_id: 'lead_actions',\n    elements: [\n      {\n        type: 'button',\n        text: {\n          type: 'plain_text',\n          text: '\u2705 Accept Lead',\n        },\n        style: 'primary',\n        action_id: 'accept_lead',\n        value: notionPageId,\n      },\n      {\n        type: 'button',\n        text: {\n          type: 'plain_text',\n          text: '\u274C Reject Lead',\n        },\n        style: 'danger',\n        action_id: 'reject_lead',\n        value: notionPageId,\n      },\n    ],\n  } as any);\n\n  const result = await sendMessage(\n    config.slackChannel,\n    `New lead: ${lead.name || lead.email}`,\n    blocks\n  );\n\n  logger.info('Slack notification sent', { ts: result.ts, channel: result.channel });\n\n  return result;\n}\n\n/**\n * Complete workflow: Process email \u2192 Create Notion \u2192 Send Slack\n */\nexport async function processLead(emailData: EmailParsedData): Promise<void> {\n  logger.info('Processing new lead', { email: emailData.from });\n\n  // Parse email\n  const parsedData = parseBookingEmail({\n    from: emailData.from,\n    subject: emailData.subject,\n    body: emailData.body,\n  });\n\n  // Create lead object\n  const lead: Lead = {\n    email: extractEmail(parsedData.from)!,\n    name: parsedData.name,\n    company: parsedData.company,\n    projectDescription: parsedData.projectDescription,\n    budget: parsedData.budget,\n    timeline: parsedData.timeline,\n    status: 'new',\n  };\n\n  // Create in Notion\n  const notionPageId = await createLeadInNotion(lead);\n\n  // Send Slack notification\n  const { ts, channel } = await sendSlackNotification(lead, notionPageId);\n\n  // Update lead with Slack thread info\n  lead.notionPageId = notionPageId;\n  lead.slackThreadTs = ts;\n\n  logger.info('Lead processed successfully', {\n    email: lead.email,\n    notionPageId,\n    slackThreadTs: ts,\n  });\n}\n", "/**\n * Generic parsing utilities.\n */\n\nimport * as cheerio from 'cheerio';\n\n/**\n * Extract email from text\n */\nexport function extractEmail(text: string): string | null {\n  const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/;\n  const match = text.match(emailRegex);\n  return match ? match[0] : null;\n}\n\n/**\n * Extract multiple emails from text\n */\nexport function extractEmails(text: string): string[] {\n  const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g;\n  return text.match(emailRegex) || [];\n}\n\n/**\n * Extract phone numbers from text\n */\nexport function extractPhoneNumbers(text: string): string[] {\n  const phoneRegex = /(\\+\\d{1,3}[-.]?)?\\(?\\d{3}\\)?[-.]?\\d{3}[-.]?\\d{4}/g;\n  return text.match(phoneRegex) || [];\n}\n\n/**\n * Extract URLs from text\n */\nexport function extractUrls(text: string): string[] {\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n  return text.match(urlRegex) || [];\n}\n\n/**\n * Parse HTML to plain text\n */\nexport function htmlToText(html: string): string {\n  const $ = cheerio.load(html);\n  return $('body').text().trim();\n}\n\n/**\n * Extract text from HTML elements\n */\nexport function extractFromHtml(html: string, selector: string): string[] {\n  const $ = cheerio.load(html);\n  const results: string[] = [];\n\n  $(selector).each((_, element) => {\n    results.push($(element).text().trim());\n  });\n\n  return results;\n}\n\n/**\n * Parse currency amount from text\n */\nexport function parseCurrency(text: string): number | null {\n  const currencyRegex = /\\$?\\s*(\\d{1,3}(?:,?\\d{3})*(?:\\.\\d{2})?)/;\n  const match = text.match(currencyRegex);\n\n  if (match) {\n    const amount = match[1].replace(/,/g, '');\n    return parseFloat(amount);\n  }\n\n  return null;\n}\n\n/**\n * Parse date from text\n */\nexport function parseDate(text: string): Date | null {\n  try {\n    const date = new Date(text);\n    return isNaN(date.getTime()) ? null : date;\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Clean whitespace from text\n */\nexport function cleanText(text: string): string {\n  return text\n    .replace(/\\s+/g, ' ') // Replace multiple spaces with single space\n    .replace(/\\n\\s*\\n/g, '\\n') // Replace multiple newlines with single newline\n    .trim();\n}\n\n/**\n * Truncate text to a maximum length\n */\nexport function truncate(text: string, maxLength: number, suffix = '...'): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n\n  return text.slice(0, maxLength - suffix.length) + suffix;\n}\n\n/**\n * Parse key-value pairs from text\n */\nexport function parseKeyValuePairs(text: string): Record<string, string> {\n  const pairs: Record<string, string> = {};\n  const lines = text.split('\\n');\n\n  for (const line of lines) {\n    const match = line.match(/^([^:]+):\\s*(.+)$/);\n    if (match) {\n      const key = match[1].trim().toLowerCase().replace(/\\s+/g, '_');\n      const value = match[2].trim();\n      pairs[key] = value;\n    }\n  }\n\n  return pairs;\n}\n", "/**\n * Company management: Find or create companies\n */\n\nimport { createPage, findPageByProperty, getTitlePropertyName } from '../../../shared/services/notion.js';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { config } from '../config.js';\n\n/**\n * Find or create a company by name\n */\nexport async function findOrCreateCompany(companyName: string): Promise<string> {\n  if (!companyName || companyName.trim() === '') {\n    logger.warn('No company name provided');\n    return '';\n  }\n\n  logger.info('Finding or creating company', { companyName });\n\n  // Get the title property name\n  const titleProp = await getTitlePropertyName(config.companiesDatabase);\n\n  // Search for existing company by name\n  const existingCompany = await findPageByProperty(\n    config.companiesDatabase,\n    titleProp,\n    'title',\n    companyName\n  );\n\n  if (existingCompany) {\n    logger.info('Company found', { companyId: existingCompany.id, companyName });\n    return existingCompany.id;\n  }\n\n  // Company doesn't exist, create it\n  logger.info('Creating new company', { companyName });\n\n  const properties: any = {\n    [titleProp]: {\n      title: [\n        {\n          text: {\n            content: companyName,\n          },\n        },\n      ],\n    },\n  };\n\n  const newCompany = await createPage(config.companiesDatabase, properties);\n\n  logger.info('Company created', { companyId: newCompany.id, companyName });\n\n  return newCompany.id;\n}\n", "/**\n * Contact/People management: Find or create contacts\n */\n\nimport { createPage, findPageByProperty, updatePage, getTitlePropertyName } from '../../../shared/services/notion.js';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { config } from '../config.js';\n\n/**\n * Find or create a contact by email\n */\nexport async function findOrCreateContact(\n  name: string,\n  email: string,\n  companyId?: string\n): Promise<string> {\n  if (!email || email.trim() === '') {\n    logger.warn('No email provided for contact');\n    return '';\n  }\n\n  logger.info('Finding or creating contact', { name, email });\n\n  // Search for existing contact by email\n  const existingContact = await findPageByProperty(\n    config.peopleDatabase,\n    'Email',\n    'email',\n    email\n  );\n\n  if (existingContact) {\n    logger.info('Contact found', { contactId: existingContact.id, email });\n\n    // Update contact if we have new info (name or company)\n    if (name || companyId) {\n      await updateContactInfo(existingContact.id, name, companyId);\n    }\n\n    return existingContact.id;\n  }\n\n  // Contact doesn't exist, create it\n  logger.info('Creating new contact', { name, email });\n\n  // Get the title property name\n  const titleProp = await getTitlePropertyName(config.peopleDatabase);\n\n  const properties: any = {\n    [titleProp]: {\n      title: [\n        {\n          text: {\n            content: name || email,\n          },\n        },\n      ],\n    },\n    Email: {\n      email: email,\n    },\n  };\n\n  // Link to company if provided\n  if (companyId) {\n    properties.Company = {\n      relation: [{ id: companyId }],\n    };\n  }\n\n  const newContact = await createPage(config.peopleDatabase, properties);\n\n  logger.info('Contact created', { contactId: newContact.id, email });\n\n  return newContact.id;\n}\n\n/**\n * Update contact information\n */\nasync function updateContactInfo(\n  contactId: string,\n  name?: string,\n  companyId?: string\n): Promise<void> {\n  const properties: any = {};\n\n  if (name) {\n    const titleProp = await getTitlePropertyName(config.peopleDatabase);\n    properties[titleProp] = {\n      title: [\n        {\n          text: {\n            content: name,\n          },\n        },\n      ],\n    };\n  }\n\n  if (companyId) {\n    properties.Company = {\n      relation: [{ id: companyId }],\n    };\n  }\n\n  if (Object.keys(properties).length > 0) {\n    logger.info('Updating contact', { contactId, hasName: !!name, hasCompany: !!companyId });\n    await updatePage(contactId, properties);\n  }\n}\n", "/**\n * Cal.com webhook handler for booking events.\n */\n\nimport type { Context } from 'hono';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { monitor } from '../../../shared/utils/monitor.js';\nimport {\n  handleBookingConfirmation,\n  handleBookingCancellation,\n  handleBookingRescheduled,\n} from '../workflows/handle-booking.js';\nimport type { CalcomBooking } from '../types.js';\n\n/**\n * Handle Cal.com webhook\n */\nexport async function handleCalcomWebhook(c: Context) {\n  try {\n    logger.info('Cal.com webhook received', { automationId: 'lead-management' });\n\n    // Get the webhook payload\n    const body = await c.req.json<CalcomBooking>();\n\n    logger.info('Cal.com webhook payload', {\n      triggerEvent: body.triggerEvent,\n      bookingId: body.payload?.bookingId,\n    });\n\n    // Handle different event types\n    switch (body.triggerEvent) {\n      case 'BOOKING_CREATED':\n        await handleBookingConfirmation(body);\n        break;\n\n      case 'BOOKING_CANCELLED':\n        await handleBookingCancellation(body);\n        break;\n\n      case 'BOOKING_RESCHEDULED':\n        await handleBookingRescheduled(body);\n        break;\n\n      default:\n        logger.warn('Unknown Cal.com event type', { triggerEvent: body.triggerEvent });\n    }\n\n    return c.json({\n      success: true,\n      message: 'Booking event processed',\n    });\n  } catch (error) {\n    logger.error('Error handling Cal.com webhook', error);\n    monitor.captureException(error, {\n      automationId: 'lead-management',\n      webhook: 'calcom',\n    });\n\n    return c.json(\n      {\n        success: false,\n        error: 'Internal server error',\n      },\n      500\n    );\n  }\n}\n", "/**\n * Handle booking workflow: Update Notion \u2192 Send Slack confirmation\n */\n\nimport { updatePage, findPageByProperty } from '../../../shared/services/notion.js';\nimport { sendThreadReply } from '../../../shared/services/slack.js';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { formatDateTime } from '../../../shared/utils/format.js';\nimport { config } from '../config.js';\nimport type { CalcomBooking } from '../types.js';\n\n/**\n * Find lead by email in Notion\n */\nexport async function findLeadByEmail(email: string): Promise<string | null> {\n  logger.info('Finding lead by email', { email });\n\n  const page = await findPageByProperty(\n    config.notionDatabase,\n    'Email',\n    'email',\n    email\n  );\n\n  return page ? page.id : null;\n}\n\n/**\n * Update lead with booking information\n */\nexport async function updateLeadWithBooking(\n  pageId: string,\n  booking: CalcomBooking\n): Promise<void> {\n  logger.info('Updating lead with booking info', { pageId, bookingId: booking.payload.bookingId });\n\n  const properties: Record<string, any> = {\n    Status: {\n      select: {\n        name: 'booked',\n      },\n    },\n    'Booking Date': {\n      date: {\n        start: booking.payload.startTime,\n      },\n    },\n  };\n\n  // Add booking ID if available\n  if (booking.payload.bookingId) {\n    properties['Booking ID'] = {\n      number: booking.payload.bookingId,\n    };\n  }\n\n  await updatePage(pageId, properties);\n\n  logger.info('Lead updated with booking info', { pageId });\n}\n\n/**\n * Send Slack confirmation message\n */\nexport async function sendSlackBookingConfirmation(\n  email: string,\n  booking: CalcomBooking,\n  threadTs?: string\n): Promise<void> {\n  logger.info('Sending Slack booking confirmation', { email, bookingId: booking.payload.bookingId });\n\n  const { payload } = booking;\n  const attendee = payload.attendees[0];\n\n  const message = `\n\uD83C\uDF89 *Booking Confirmed!*\n\n*Lead:* ${attendee.name} (${attendee.email})\n*Meeting:* ${payload.title}\n*Time:* ${formatDateTime(new Date(payload.startTime))}\n*Duration:* ${payload.description || 'N/A'}\n\nThe discovery call has been scheduled!\n  `.trim();\n\n  if (threadTs) {\n    // Reply in thread if we have the thread timestamp\n    await sendThreadReply(config.slackChannel, threadTs, message);\n  } else {\n    // Otherwise, just send a new message (we'll need to import sendMessage)\n    const { sendMessage } = await import('../../../shared/services/slack');\n    await sendMessage(config.slackChannel, message);\n  }\n\n  logger.info('Slack booking confirmation sent', { email });\n}\n\n/**\n * Complete booking confirmation workflow\n */\nexport async function handleBookingConfirmation(\n  booking: CalcomBooking\n): Promise<void> {\n  logger.info('Handling booking confirmation', {\n    triggerEvent: booking.triggerEvent,\n    bookingId: booking.payload.bookingId,\n  });\n\n  // Get attendee email\n  const attendeeEmail = booking.payload.attendees[0]?.email;\n\n  if (!attendeeEmail) {\n    logger.warn('No attendee email found in booking', { bookingId: booking.payload.bookingId });\n    return;\n  }\n\n  // Find lead in Notion\n  const pageId = await findLeadByEmail(attendeeEmail);\n\n  if (!pageId) {\n    logger.warn('Lead not found for email', { email: attendeeEmail });\n    return;\n  }\n\n  // Update lead with booking info\n  await updateLeadWithBooking(pageId, booking);\n\n  // Send Slack confirmation\n  await sendSlackBookingConfirmation(attendeeEmail, booking);\n\n  logger.info('Booking confirmation handled successfully', {\n    email: attendeeEmail,\n    pageId,\n    bookingId: booking.payload.bookingId,\n  });\n}\n\n/**\n * Handle booking cancellation\n */\nexport async function handleBookingCancellation(\n  booking: CalcomBooking\n): Promise<void> {\n  logger.info('Handling booking cancellation', {\n    bookingId: booking.payload.bookingId,\n  });\n\n  const attendeeEmail = booking.payload.attendees[0]?.email;\n\n  if (!attendeeEmail) {\n    logger.warn('No attendee email found in booking', { bookingId: booking.payload.bookingId });\n    return;\n  }\n\n  // Find lead in Notion\n  const pageId = await findLeadByEmail(attendeeEmail);\n\n  if (!pageId) {\n    logger.warn('Lead not found for email', { email: attendeeEmail });\n    return;\n  }\n\n  // Update status back to accepted\n  await updatePage(pageId, {\n    Status: {\n      select: {\n        name: 'accepted',\n      },\n    },\n  });\n\n  logger.info('Booking cancellation handled', {\n    email: attendeeEmail,\n    pageId,\n  });\n}\n\n/**\n * Handle booking rescheduled\n */\nexport async function handleBookingRescheduled(\n  booking: CalcomBooking\n): Promise<void> {\n  logger.info('Handling booking rescheduled', {\n    bookingId: booking.payload.bookingId,\n  });\n\n  const attendeeEmail = booking.payload.attendees[0]?.email;\n\n  if (!attendeeEmail) {\n    return;\n  }\n\n  const pageId = await findLeadByEmail(attendeeEmail);\n\n  if (!pageId) {\n    return;\n  }\n\n  // Update with new booking time\n  await updateLeadWithBooking(pageId, booking);\n\n  logger.info('Booking rescheduled handled', {\n    email: attendeeEmail,\n    pageId,\n  });\n}\n", "/**\n * Formatting helpers for common data transformations.\n */\n\n/**\n * Format currency\n */\nexport function formatCurrency(amount: number, currency = 'USD'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(amount);\n}\n\n/**\n * Format date\n */\nexport function formatDate(date: Date | string, format: 'short' | 'long' | 'iso' = 'short'): string {\n  const d = typeof date === 'string' ? new Date(date) : date;\n\n  if (format === 'iso') {\n    return d.toISOString();\n  }\n\n  return d.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: format === 'long' ? 'long' : 'short',\n    day: 'numeric',\n  });\n}\n\n/**\n * Format date with time\n */\nexport function formatDateTime(date: Date | string): string {\n  const d = typeof date === 'string' ? new Date(date) : date;\n\n  return d.toLocaleString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true,\n  });\n}\n\n/**\n * Format relative time (e.g., \"2 hours ago\")\n */\nexport function formatRelativeTime(date: Date | string): string {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const now = new Date();\n  const diffMs = now.getTime() - d.getTime();\n  const diffSecs = Math.floor(diffMs / 1000);\n  const diffMins = Math.floor(diffSecs / 60);\n  const diffHours = Math.floor(diffMins / 60);\n  const diffDays = Math.floor(diffHours / 24);\n\n  if (diffSecs < 60) {\n    return 'just now';\n  } else if (diffMins < 60) {\n    return `${diffMins} minute${diffMins !== 1 ? 's' : ''} ago`;\n  } else if (diffHours < 24) {\n    return `${diffHours} hour${diffHours !== 1 ? 's' : ''} ago`;\n  } else if (diffDays < 7) {\n    return `${diffDays} day${diffDays !== 1 ? 's' : ''} ago`;\n  } else {\n    return formatDate(d);\n  }\n}\n\n/**\n * Format phone number\n */\nexport function formatPhoneNumber(phone: string): string {\n  const cleaned = phone.replace(/\\D/g, '');\n\n  if (cleaned.length === 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n  }\n\n  if (cleaned.length === 11 && cleaned[0] === '1') {\n    return `+1 (${cleaned.slice(1, 4)}) ${cleaned.slice(4, 7)}-${cleaned.slice(7)}`;\n  }\n\n  return phone; // Return original if format is unknown\n}\n\n/**\n * Format file size\n */\nexport function formatFileSize(bytes: number): string {\n  const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n  let size = bytes;\n  let unitIndex = 0;\n\n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024;\n    unitIndex++;\n  }\n\n  return `${size.toFixed(2)} ${units[unitIndex]}`;\n}\n\n/**\n * Slugify text (for URLs)\n */\nexport function slugify(text: string): string {\n  return text\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, '') // Remove non-word chars\n    .replace(/[\\s_-]+/g, '-') // Replace spaces and underscores with hyphens\n    .replace(/^-+|-+$/g, ''); // Remove leading/trailing hyphens\n}\n\n/**\n * Capitalize first letter\n */\nexport function capitalize(text: string): string {\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n}\n\n/**\n * Title case\n */\nexport function titleCase(text: string): string {\n  return text\n    .toLowerCase()\n    .split(' ')\n    .map((word) => capitalize(word))\n    .join(' ');\n}\n\n/**\n * Format duration in milliseconds\n */\nexport function formatDuration(ms: number): string {\n  if (ms < 1000) {\n    return `${ms}ms`;\n  }\n\n  const seconds = Math.floor(ms / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n\n  if (hours > 0) {\n    return `${hours}h ${minutes % 60}m`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${seconds % 60}s`;\n  } else {\n    return `${seconds}s`;\n  }\n}\n\n/**\n * Format percentage\n */\nexport function formatPercent(value: number, decimals = 0): string {\n  return `${(value * 100).toFixed(decimals)}%`;\n}\n", "/**\n * Slack interactive webhook handler for lead acceptance buttons.\n */\n\nimport type { Context } from 'hono';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { monitor } from '../../../shared/utils/monitor.js';\nimport { acceptLead, rejectLead } from '../workflows/accept-lead.js';\nimport { updateSlackMessage } from '../workflows/accept-lead.js';\nimport type { SlackInteractionPayload } from '../types.js';\n\n/**\n * Handle Slack interactive webhook\n */\nexport async function handleSlackInteraction(c: Context) {\n  try {\n    logger.info('Slack interaction received', { automationId: 'lead-management' });\n\n    // Parse the payload from form data\n    const body = await c.req.parseBody();\n    const payloadStr = body.payload as string;\n\n    if (!payloadStr) {\n      logger.warn('No payload in Slack interaction');\n      return c.json({ error: 'No payload' }, 400);\n    }\n\n    const payload: SlackInteractionPayload = JSON.parse(payloadStr);\n\n    logger.info('Slack interaction payload', {\n      type: payload.type,\n      actionId: payload.actions?.[0]?.action_id,\n      user: payload.user.username,\n    });\n\n    // Handle different action types\n    if (payload.type === 'block_actions' && payload.actions.length > 0) {\n      const action = payload.actions[0];\n      const pageId = action.value;\n      const actionId = action.action_id;\n      const userName = payload.user.name || payload.user.username;\n\n      const channel = payload.container.channel_id;\n      const messageTs = payload.container.message_ts;\n\n      if (actionId === 'accept_lead') {\n        // Accept the lead\n        await acceptLead(pageId, userName);\n\n        // Update Slack message\n        await updateSlackMessage(channel, messageTs, 'accepted', userName);\n\n        logger.info('Lead accepted', { pageId, userName });\n\n        // Respond to Slack\n        return c.json({\n          response_type: 'in_channel',\n          replace_original: false,\n          text: `\u2705 Lead accepted by ${userName}. Booking link sent!`,\n        });\n      } else if (actionId === 'reject_lead') {\n        // Reject the lead\n        await rejectLead(pageId, userName);\n\n        // Update Slack message\n        await updateSlackMessage(channel, messageTs, 'rejected', userName);\n\n        logger.info('Lead rejected', { pageId, userName });\n\n        // Respond to Slack\n        return c.json({\n          response_type: 'in_channel',\n          replace_original: false,\n          text: `\u274C Lead rejected by ${userName}.`,\n        });\n      }\n    }\n\n    return c.json({ success: true });\n  } catch (error) {\n    logger.error('Error handling Slack interaction', error);\n    monitor.captureException(error, {\n      automationId: 'lead-management',\n      webhook: 'slack',\n    });\n\n    return c.json(\n      {\n        success: false,\n        error: 'Internal server error',\n      },\n      500\n    );\n  }\n}\n", "/**\n * Generic email service using SMTP.\n */\n\nimport nodemailer from 'nodemailer';\nimport { config } from '../../config.js';\nimport { withRetry } from '../utils/retry.js';\nimport { logger } from '../utils/logger.js';\n\nconst transporter = nodemailer.createTransport({\n  host: config.email.smtp.host,\n  port: config.email.smtp.port,\n  secure: false,\n  auth: {\n    user: config.email.smtp.user,\n    pass: config.email.smtp.pass,\n  },\n});\n\n/**\n * Send an email\n */\nexport async function sendEmail(\n  to: string,\n  subject: string,\n  html: string,\n  text?: string\n) {\n  logger.info('Sending email', { to, subject });\n\n  await withRetry(() =>\n    transporter.sendMail({\n      from: `\"${config.email.fromName}\" <${config.email.from}>`,\n      to,\n      subject,\n      html,\n      text: text || html.replace(/<[^>]*>/g, ''),\n    })\n  );\n\n  logger.info('Email sent successfully', { to });\n}\n\n/**\n * Send an email with attachments\n */\nexport async function sendEmailWithAttachments(\n  to: string,\n  subject: string,\n  html: string,\n  attachments: Array<{\n    filename: string;\n    content?: string | Buffer;\n    path?: string;\n  }>,\n  text?: string\n) {\n  logger.info('Sending email with attachments', { to, subject, attachmentCount: attachments.length });\n\n  await withRetry(() =>\n    transporter.sendMail({\n      from: `\"${config.email.fromName}\" <${config.email.from}>`,\n      to,\n      subject,\n      html,\n      text: text || html.replace(/<[^>]*>/g, ''),\n      attachments,\n    })\n  );\n\n  logger.info('Email with attachments sent successfully', { to });\n}\n\n/**\n * Send a templated email\n */\nexport async function sendTemplatedEmail(\n  to: string,\n  subject: string,\n  templateData: {\n    greeting?: string;\n    body: string;\n    cta?: { text: string; url: string };\n    footer?: string;\n  }\n) {\n  const { greeting, body, cta, footer } = templateData;\n\n  const html = `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <style>\n          body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n          }\n          .greeting {\n            font-size: 18px;\n            margin-bottom: 20px;\n          }\n          .body {\n            margin-bottom: 30px;\n          }\n          .cta {\n            margin: 30px 0;\n          }\n          .cta a {\n            display: inline-block;\n            padding: 12px 24px;\n            background-color: #0066cc;\n            color: white;\n            text-decoration: none;\n            border-radius: 5px;\n          }\n          .footer {\n            margin-top: 40px;\n            padding-top: 20px;\n            border-top: 1px solid #ddd;\n            font-size: 14px;\n            color: #666;\n          }\n        </style>\n      </head>\n      <body>\n        ${greeting ? `<div class=\"greeting\">${greeting}</div>` : ''}\n        <div class=\"body\">${body}</div>\n        ${cta ? `<div class=\"cta\"><a href=\"${cta.url}\">${cta.text}</a></div>` : ''}\n        ${footer ? `<div class=\"footer\">${footer}</div>` : ''}\n      </body>\n    </html>\n  `;\n\n  return sendEmail(to, subject, html);\n}\n\n/**\n * Verify SMTP connection\n */\nexport async function verifyConnection(): Promise<boolean> {\n  try {\n    await transporter.verify();\n    logger.info('SMTP connection verified');\n    return true;\n  } catch (error) {\n    logger.error('SMTP connection failed', error);\n    return false;\n  }\n}\n", "/**\n * Accept lead workflow: Update Notion \u2192 Send booking link email \u2192 Update Slack\n */\n\nimport { updatePage, retrievePage } from '../../../shared/services/notion.js';\nimport { sendTemplatedEmail } from '../../../shared/services/email.js';\nimport { updateMessage } from '../../../shared/services/slack.js';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { config } from '../config.js';\n\n/**\n * Update lead status in Notion\n */\nexport async function updateLeadStatus(\n  pageId: string,\n  status: 'accepted' | 'rejected' | 'booked'\n): Promise<void> {\n  logger.info('Updating lead status in Notion', { pageId, status });\n\n  await updatePage(pageId, {\n    Status: {\n      select: {\n        name: status,\n      },\n    },\n  });\n\n  logger.info('Lead status updated', { pageId, status });\n}\n\n/**\n * Get lead email from Notion page\n */\nexport async function getLeadEmail(pageId: string): Promise<string> {\n  const page = await retrievePage(pageId);\n\n  // Extract email from page properties\n  const properties = (page as any).properties;\n  const email = properties.Email?.email;\n\n  if (!email) {\n    throw new Error('Email not found in Notion page');\n  }\n\n  return email;\n}\n\n/**\n * Get lead name from Notion page\n */\nexport async function getLeadName(pageId: string): Promise<string> {\n  const page = await retrievePage(pageId);\n\n  // Extract name from page properties\n  const properties = (page as any).properties;\n  const titleProperty = properties.Name || properties.title;\n\n  if (titleProperty?.title?.[0]?.text?.content) {\n    return titleProperty.title[0].text.content;\n  }\n\n  return 'there'; // Fallback\n}\n\n/**\n * Send booking link email to lead\n */\nexport async function sendBookingLinkEmail(\n  email: string,\n  name: string = 'there'\n): Promise<void> {\n  logger.info('Sending booking link email', { email });\n\n  await sendTemplatedEmail(email, 'Let\\'s schedule a discovery call!', {\n    greeting: `Hi ${name},`,\n    body: `\n      <p>Thanks for reaching out! We'd love to learn more about your project.</p>\n      <p>Please use the link below to schedule a discovery call at a time that works best for you:</p>\n    `,\n    cta: {\n      text: 'Schedule Discovery Call',\n      url: config.calcomLink,\n    },\n    footer: 'Looking forward to speaking with you!',\n  });\n\n  logger.info('Booking link email sent', { email });\n}\n\n/**\n * Update Slack message to show lead accepted\n */\nexport async function updateSlackMessage(\n  channel: string,\n  ts: string,\n  status: 'accepted' | 'rejected',\n  acceptedBy?: string\n): Promise<void> {\n  logger.info('Updating Slack message', { channel, ts, status });\n\n  const emoji = status === 'accepted' ? '\u2705' : '\u274C';\n  const statusText = status === 'accepted' ? 'Accepted' : 'Rejected';\n  const byText = acceptedBy ? ` by ${acceptedBy}` : '';\n\n  // We'll need to get the original message and update it\n  // For now, we'll just add a simple update block\n  await updateMessage(\n    channel,\n    ts,\n    `Lead ${statusText.toLowerCase()}${byText}`,\n    [\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: `${emoji} *${statusText}*${byText}`,\n        },\n      },\n    ]\n  );\n\n  logger.info('Slack message updated', { channel, ts, status });\n}\n\n/**\n * Complete accept workflow\n */\nexport async function acceptLead(\n  pageId: string,\n  acceptedBy?: string\n): Promise<void> {\n  logger.info('Accepting lead', { pageId, acceptedBy });\n\n  // Update status in Notion\n  await updateLeadStatus(pageId, 'accepted');\n\n  // Get lead info\n  const email = await getLeadEmail(pageId);\n  const name = await getLeadName(pageId);\n\n  // Send booking link email\n  await sendBookingLinkEmail(email, name);\n\n  logger.info('Lead accepted successfully', {\n    pageId,\n    email,\n    acceptedBy,\n  });\n}\n\n/**\n * Complete reject workflow\n */\nexport async function rejectLead(\n  pageId: string,\n  rejectedBy?: string\n): Promise<void> {\n  logger.info('Rejecting lead', { pageId, rejectedBy });\n\n  // Update status in Notion\n  await updateLeadStatus(pageId, 'rejected');\n\n  logger.info('Lead rejected successfully', {\n    pageId,\n    rejectedBy,\n  });\n}\n", "/**\n * Test webhook for manually creating leads (for testing purposes)\n */\n\nimport type { Context } from 'hono';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { monitor } from '../../../shared/utils/monitor.js';\nimport { processLead } from '../workflows/process-lead.js';\nimport type { EmailParsedData } from '../types.js';\n\n/**\n * Handle test lead creation (simple format for testing)\n */\nexport async function handleTestWebhook(c: Context) {\n  try {\n    logger.info('Test webhook received', { automationId: 'lead-management' });\n\n    const body = await c.req.json();\n\n    // Validate required fields\n    if (!body.from || !body.subject || !body.body) {\n      return c.json({ success: false, error: 'Missing required fields: from, subject, body' }, 400);\n    }\n\n    // Create email data in the format processLead expects\n    const emailData: EmailParsedData = {\n      from: body.from,\n      subject: body.subject,\n      body: body.body,\n    };\n\n    // Process the lead\n    await processLead(emailData);\n\n    return c.json({\n      success: true,\n      message: 'Test lead processed successfully',\n    });\n  } catch (error) {\n    logger.error('Error processing test lead', error);\n    monitor.captureException(error as Error, { automationId: 'lead-management' });\n\n    return c.json(\n      {\n        success: false,\n        error: 'Failed to process test lead',\n        details: error instanceof Error ? error.message : 'Unknown error',\n      },\n      500\n    );\n  }\n}\n", "/**\n * Notion Marketplace webhook handler\n * Processes template purchase notifications and syncs to Attio + sends welcome email\n */\n\nimport type { Context } from 'hono';\nimport { logger } from '../../../shared/utils/logger.js';\nimport { assertCompany, assertPerson, addToListWithAttributes } from '../../../shared/services/attio.js';\nimport { sendWelcomeEmail } from '../../../shared/services/resend.js';\nimport { findOrCreateCompany } from '../workflows/manage-company.js';\nimport { findOrCreateContact } from '../workflows/manage-contact.js';\nimport { config } from '../../../config.js';\nimport type { MarketplacePurchase } from '../types.js';\n\n/**\n * Extract company name from email domain (best effort)\n */\nfunction extractCompanyFromEmail(email: string): string | undefined {\n  const domain = email.split('@')[1]?.toLowerCase();\n\n  if (!domain) return undefined;\n\n  // Skip common consumer email domains\n  const consumerDomains = [\n    'gmail.com',\n    'yahoo.com',\n    'hotmail.com',\n    'outlook.com',\n    'icloud.com',\n    'aol.com',\n    'protonmail.com',\n    'mail.com',\n  ];\n\n  if (consumerDomains.includes(domain)) {\n    return undefined;\n  }\n\n  // Extract company name from domain (e.g., \"acme.com\" \u2192 \"Acme\")\n  const companyName = domain\n    .split('.')[0] // Get first part before TLD\n    .split('-')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return companyName;\n}\n\n/**\n * Extract person name from email (fallback if no name provided)\n */\nfunction extractNameFromEmail(email: string): string {\n  const localPart = email.split('@')[0];\n\n  // Convert common patterns: john.doe, john_doe, johndoe \u2192 John Doe\n  const name = localPart\n    .replace(/[._-]/g, ' ')\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return name || email;\n}\n\n/**\n * Handle Notion Marketplace purchase webhook\n */\nexport async function handleNotionMarketplaceWebhook(c: Context) {\n  try {\n    const body: MarketplacePurchase = await c.req.json();\n\n    logger.info('Received Notion Marketplace purchase', {\n      acquisitionId: body.acquisitionId,\n      email: body.customerEmail,\n      template: body.templateName,\n    });\n\n    // Validate required fields\n    if (!body.customerEmail || !body.templateName) {\n      return c.json({\n        success: false,\n        error: 'Missing required fields: customerEmail, templateName',\n      }, 400);\n    }\n\n    // Extract customer info\n    const email = body.customerEmail.toLowerCase();\n    const name = extractNameFromEmail(email);\n    const companyName = extractCompanyFromEmail(email);\n    const purchaseDate = new Date(body.time);\n\n    logger.info('Processing marketplace purchase', {\n      email,\n      name,\n      companyName,\n      template: body.templateName,\n    });\n\n    // Step 1: Create Company (if applicable) in Notion\n    let notionCompanyId: string | undefined;\n    if (companyName) {\n      notionCompanyId = await findOrCreateCompany(companyName);\n    }\n\n    // Step 2: Create Contact in Notion\n    const notionContactId = await findOrCreateContact(\n      name,\n      email,\n      notionCompanyId\n    );\n\n    // Step 3: Sync to Attio\n    let attioCompanyId: string | undefined;\n    let attioPersonId: string | undefined;\n    let attioError: string | undefined;\n\n    try {\n      logger.info('Starting Attio sync', {\n        hasApiKey: !!config.attio.apiKey,\n        hasListId: !!config.attio.marketplaceListId,\n        listId: config.attio.marketplaceListId,\n      });\n\n      // Create/update company in Attio\n      if (companyName) {\n        const domain = email.split('@')[1];\n        logger.info('Creating company in Attio', { companyName, domain });\n        attioCompanyId = await assertCompany(companyName, domain);\n        logger.info('Company created in Attio', { attioCompanyId });\n      }\n\n      // Create/update person in Attio\n      logger.info('Creating person in Attio', { name, email, attioCompanyId });\n      attioPersonId = await assertPerson(name, email, attioCompanyId);\n      logger.info('Person created in Attio', { attioPersonId });\n\n      // Add person to \"Notion Marketplace\" list with attributes\n      logger.info('Adding to Notion Marketplace list', {\n        listId: config.attio.marketplaceListId,\n        personId: attioPersonId,\n        templateName: body.templateName,\n      });\n      await addToListWithAttributes(\n        config.attio.marketplaceListId,\n        attioPersonId,\n        {\n          templatePurchased: body.templateName,\n          datePurchased: purchaseDate,\n        }\n      );\n\n      logger.info('Successfully synced to Attio', {\n        attioPersonId,\n        attioCompanyId,\n        addedToList: true,\n      });\n    } catch (error: any) {\n      // Log Attio sync error but don't fail the webhook\n      attioError = error.message || String(error);\n      logger.error('Failed to sync to Attio', {\n        error: error.message,\n        stack: error.stack,\n        email,\n      });\n    }\n\n    // Step 4: Send welcome email via Resend\n    let emailSent = false;\n    let emailError: string | undefined;\n    try {\n      logger.info('Sending welcome email', {\n        hasApiKey: !!config.resend.apiKey,\n        hasFromEmail: !!config.resend.fromEmail,\n        to: email,\n      });\n      await sendWelcomeEmail(email, name, body.templateName);\n      emailSent = true;\n      logger.info('Welcome email sent successfully');\n    } catch (error: any) {\n      // Log email error but don't fail the webhook\n      emailError = error.message || String(error);\n      logger.error('Failed to send welcome email', {\n        error: error.message,\n        stack: error.stack,\n        email,\n      });\n    }\n\n    // Return success response with debug info\n    return c.json({\n      success: true,\n      message: 'Marketplace purchase processed successfully',\n      data: {\n        acquisitionId: body.acquisitionId,\n        contactId: notionContactId,\n        companyId: notionCompanyId,\n        attioPersonId,\n        attioCompanyId,\n        emailSent,\n      },\n      debug: {\n        attioError,\n        emailError,\n        hasAttioApiKey: !!config.attio.apiKey,\n        hasResendApiKey: !!config.resend.apiKey,\n        attioListId: config.attio.marketplaceListId,\n      },\n    });\n  } catch (error: any) {\n    logger.error('Failed to process marketplace purchase', {\n      error: error.message,\n      stack: error.stack,\n    });\n\n    return c.json({\n      success: false,\n      error: 'Failed to process marketplace purchase',\n      details: error.message,\n    }, 500);\n  }\n}\n", "/**\n * Attio CRM service for syncing companies and contacts\n */\n\nimport { config } from '../../config.js';\nimport { logger } from '../utils/logger.js';\nimport { withRetry } from '../utils/retry.js';\n\nconst ATTIO_API_BASE = 'https://api.attio.com/v2';\n\ninterface AttioRecord {\n  id: { record_id: string };\n  values: Record<string, any>;\n}\n\ninterface AttioResponse {\n  data: AttioRecord;\n}\n\n/**\n * Make authenticated request to Attio API\n */\nasync function attioRequest(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<any> {\n  const url = `${ATTIO_API_BASE}${endpoint}`;\n\n  const response = await fetch(url, {\n    ...options,\n    headers: {\n      'Authorization': `Bearer ${config.attio.apiKey}`,\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(`Attio API error (${response.status}): ${error}`);\n  }\n\n  return response.json();\n}\n\n/**\n * Assert (upsert) a company record in Attio\n */\nexport async function assertCompany(\n  name: string,\n  domain?: string\n): Promise<string> {\n  logger.info('Asserting company in Attio', { name, domain });\n\n  const data = {\n    data: {\n      values: {\n        name: [{ value: name }],\n        ...(domain && {\n          domains: [{ domain }],\n        }),\n      },\n    },\n  };\n\n  // Use domain as matching attribute if available, otherwise use name\n  const matchingAttribute = domain ? 'domains' : 'name';\n\n  return withRetry(async () => {\n    const response: AttioResponse = await attioRequest(\n      `/objects/companies/records?matching_attribute=${matchingAttribute}`,\n      {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      }\n    );\n\n    const recordId = response.data.id.record_id;\n    logger.info('Company asserted in Attio', { name, recordId });\n    return recordId;\n  });\n}\n\n/**\n * Assert (upsert) a person record in Attio\n */\nexport async function assertPerson(\n  name: string,\n  email: string,\n  companyId?: string\n): Promise<string> {\n  logger.info('Asserting person in Attio', { name, email });\n\n  // Parse first and last name\n  const nameParts = name.split(' ');\n  const firstName = nameParts[0] || name;\n  const lastName = nameParts.slice(1).join(' ') || '';\n\n  const data = {\n    data: {\n      values: {\n        email_addresses: [{ email_address: email }],\n        name: [\n          {\n            first_name: firstName,\n            last_name: lastName,\n            full_name: name,\n          },\n        ],\n        // Note: Company relation needs to be set via a specific company field\n        // which varies by Attio workspace setup. Skipping for now.\n      },\n    },\n  };\n\n  return withRetry(async () => {\n    const response: AttioResponse = await attioRequest(\n      '/objects/people/records?matching_attribute=email_addresses',\n      {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      }\n    );\n\n    const recordId = response.data.id.record_id;\n    logger.info('Person asserted in Attio', { name, email, recordId });\n    return recordId;\n  });\n}\n\n/**\n * Add a record to a list with custom attributes\n */\nexport async function addToListWithAttributes(\n  listId: string,\n  recordId: string,\n  attributes: {\n    templatePurchased: string;\n    datePurchased: Date;\n  }\n): Promise<void> {\n  logger.info('Adding record to Attio list', { listId, recordId, attributes });\n\n  const data = {\n    data: {\n      parent_object: 'people',\n      parent_record_id: recordId,\n      entry_values: {\n        template_purchased: [\n          {\n            option: attributes.templatePurchased,\n          },\n        ],\n        date_purchased: [\n          {\n            original_timestamp: attributes.datePurchased.toISOString(),\n          },\n        ],\n      },\n    },\n  };\n\n  return withRetry(async () => {\n    await attioRequest(`/lists/${listId}/entries`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n\n    logger.info('Record added to Attio list', { listId, recordId });\n  });\n}\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// package.json\nvar version = \"6.2.2\";\n\n// src/common/utils/build-pagination-query.ts\nfunction buildPaginationQuery(options) {\n  const searchParams = new URLSearchParams();\n  if (options.limit !== void 0) {\n    searchParams.set(\"limit\", options.limit.toString());\n  }\n  if (\"after\" in options && options.after !== void 0) {\n    searchParams.set(\"after\", options.after);\n  }\n  if (\"before\" in options && options.before !== void 0) {\n    searchParams.set(\"before\", options.before);\n  }\n  return searchParams.toString();\n}\n\n// src/api-keys/api-keys.ts\nvar ApiKeys = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  async create(payload, options = {}) {\n    const data = await this.resend.post(\n      \"/api-keys\",\n      payload,\n      options\n    );\n    return data;\n  }\n  async list(options = {}) {\n    const queryString = buildPaginationQuery(options);\n    const url = queryString ? `/api-keys?${queryString}` : \"/api-keys\";\n    const data = await this.resend.get(url);\n    return data;\n  }\n  async remove(id) {\n    const data = await this.resend.delete(\n      `/api-keys/${id}`\n    );\n    return data;\n  }\n};\n\n// src/audiences/audiences.ts\nvar Audiences = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  async create(payload, options = {}) {\n    const data = await this.resend.post(\n      \"/audiences\",\n      payload,\n      options\n    );\n    return data;\n  }\n  async list(options = {}) {\n    const queryString = buildPaginationQuery(options);\n    const url = queryString ? `/audiences?${queryString}` : \"/audiences\";\n    const data = await this.resend.get(url);\n    return data;\n  }\n  async get(id) {\n    const data = await this.resend.get(\n      `/audiences/${id}`\n    );\n    return data;\n  }\n  async remove(id) {\n    const data = await this.resend.delete(\n      `/audiences/${id}`\n    );\n    return data;\n  }\n};\n\n// src/common/utils/parse-email-to-api-options.ts\nfunction parseAttachments(attachments) {\n  return attachments == null ? void 0 : attachments.map((attachment) => ({\n    content: attachment.content,\n    filename: attachment.filename,\n    path: attachment.path,\n    content_type: attachment.contentType,\n    content_id: attachment.contentId\n  }));\n}\nfunction parseEmailToApiOptions(email) {\n  return {\n    attachments: parseAttachments(email.attachments),\n    bcc: email.bcc,\n    cc: email.cc,\n    from: email.from,\n    headers: email.headers,\n    html: email.html,\n    reply_to: email.replyTo,\n    scheduled_at: email.scheduledAt,\n    subject: email.subject,\n    tags: email.tags,\n    text: email.text,\n    to: email.to\n  };\n}\n\n// src/render.ts\nasync function render(node) {\n  let render2;\n  try {\n    ({ render: render2 } = await import(\"@react-email/render\"));\n  } catch (e) {\n    throw new Error(\n      \"Failed to render React component. Make sure to install `@react-email/render` or `@react-email/components`.\"\n    );\n  }\n  return render2(node);\n}\n\n// src/batch/batch.ts\nvar Batch = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  async send(payload, options) {\n    return this.create(payload, options);\n  }\n  async create(payload, options) {\n    var _a;\n    const emails = [];\n    for (const email of payload) {\n      if (email.react) {\n        email.html = await render(email.react);\n        email.react = void 0;\n      }\n      emails.push(parseEmailToApiOptions(email));\n    }\n    const data = await this.resend.post(\n      \"/emails/batch\",\n      emails,\n      __spreadProps(__spreadValues({}, options), {\n        headers: __spreadValues({\n          \"x-batch-validation\": (_a = options == null ? void 0 : options.batchValidation) != null ? _a : \"strict\"\n        }, options == null ? void 0 : options.headers)\n      })\n    );\n    return data;\n  }\n};\n\n// src/broadcasts/broadcasts.ts\nvar Broadcasts = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  async create(payload, options = {}) {\n    if (payload.react) {\n      payload.html = await render(payload.react);\n    }\n    const data = await this.resend.post(\n      \"/broadcasts\",\n      {\n        name: payload.name,\n        audience_id: payload.audienceId,\n        preview_text: payload.previewText,\n        from: payload.from,\n        html: payload.html,\n        reply_to: payload.replyTo,\n        subject: payload.subject,\n        text: payload.text\n      },\n      options\n    );\n    return data;\n  }\n  async send(id, payload) {\n    const data = await this.resend.post(\n      `/broadcasts/${id}/send`,\n      { scheduled_at: payload == null ? void 0 : payload.scheduledAt }\n    );\n    return data;\n  }\n  async list(options = {}) {\n    const queryString = buildPaginationQuery(options);\n    const url = queryString ? `/broadcasts?${queryString}` : \"/broadcasts\";\n    const data = await this.resend.get(url);\n    return data;\n  }\n  async get(id) {\n    const data = await this.resend.get(\n      `/broadcasts/${id}`\n    );\n    return data;\n  }\n  async remove(id) {\n    const data = await this.resend.delete(\n      `/broadcasts/${id}`\n    );\n    return data;\n  }\n  async update(id, payload) {\n    if (payload.react) {\n      payload.html = await render(payload.react);\n    }\n    const data = await this.resend.patch(\n      `/broadcasts/${id}`,\n      {\n        name: payload.name,\n        audience_id: payload.audienceId,\n        from: payload.from,\n        html: payload.html,\n        text: payload.text,\n        subject: payload.subject,\n        reply_to: payload.replyTo,\n        preview_text: payload.previewText\n      }\n    );\n    return data;\n  }\n};\n\n// src/contacts/contacts.ts\nvar Contacts = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  async create(payload, options = {}) {\n    const data = await this.resend.post(\n      `/audiences/${payload.audienceId}/contacts`,\n      {\n        unsubscribed: payload.unsubscribed,\n        email: payload.email,\n        first_name: payload.firstName,\n        last_name: payload.lastName\n      },\n      options\n    );\n    return data;\n  }\n  async list(options) {\n    const _a = options, { audienceId } = _a, paginationOptions = __objRest(_a, [\"audienceId\"]);\n    const queryString = buildPaginationQuery(paginationOptions);\n    const url = queryString ? `/audiences/${audienceId}/contacts?${queryString}` : `/audiences/${audienceId}/contacts`;\n    const data = await this.resend.get(url);\n    return data;\n  }\n  async get(options) {\n    if (!options.id && !options.email) {\n      return {\n        data: null,\n        error: {\n          message: \"Missing `id` or `email` field.\",\n          statusCode: null,\n          name: \"missing_required_field\"\n        }\n      };\n    }\n    const data = await this.resend.get(\n      `/audiences/${options.audienceId}/contacts/${(options == null ? void 0 : options.email) ? options == null ? void 0 : options.email : options == null ? void 0 : options.id}`\n    );\n    return data;\n  }\n  async update(options) {\n    if (!options.id && !options.email) {\n      return {\n        data: null,\n        error: {\n          message: \"Missing `id` or `email` field.\",\n          statusCode: null,\n          name: \"missing_required_field\"\n        }\n      };\n    }\n    const data = await this.resend.patch(\n      `/audiences/${options.audienceId}/contacts/${(options == null ? void 0 : options.email) ? options == null ? void 0 : options.email : options == null ? void 0 : options.id}`,\n      {\n        unsubscribed: options.unsubscribed,\n        first_name: options.firstName,\n        last_name: options.lastName\n      }\n    );\n    return data;\n  }\n  async remove(payload) {\n    if (!payload.id && !payload.email) {\n      return {\n        data: null,\n        error: {\n          message: \"Missing `id` or `email` field.\",\n          statusCode: null,\n          name: \"missing_required_field\"\n        }\n      };\n    }\n    const data = await this.resend.delete(\n      `/audiences/${payload.audienceId}/contacts/${(payload == null ? void 0 : payload.email) ? payload == null ? void 0 : payload.email : payload == null ? void 0 : payload.id}`\n    );\n    return data;\n  }\n};\n\n// src/common/utils/parse-domain-to-api-options.ts\nfunction parseDomainToApiOptions(domain) {\n  return {\n    name: domain.name,\n    region: domain.region,\n    custom_return_path: domain.customReturnPath\n  };\n}\n\n// src/domains/domains.ts\nvar Domains = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  async create(payload, options = {}) {\n    const data = await this.resend.post(\n      \"/domains\",\n      parseDomainToApiOptions(payload),\n      options\n    );\n    return data;\n  }\n  async list(options = {}) {\n    const queryString = buildPaginationQuery(options);\n    const url = queryString ? `/domains?${queryString}` : \"/domains\";\n    const data = await this.resend.get(url);\n    return data;\n  }\n  async get(id) {\n    const data = await this.resend.get(\n      `/domains/${id}`\n    );\n    return data;\n  }\n  async update(payload) {\n    const data = await this.resend.patch(\n      `/domains/${payload.id}`,\n      {\n        click_tracking: payload.clickTracking,\n        open_tracking: payload.openTracking,\n        tls: payload.tls\n      }\n    );\n    return data;\n  }\n  async remove(id) {\n    const data = await this.resend.delete(\n      `/domains/${id}`\n    );\n    return data;\n  }\n  async verify(id) {\n    const data = await this.resend.post(\n      `/domains/${id}/verify`\n    );\n    return data;\n  }\n};\n\n// src/emails/emails.ts\nvar Emails = class {\n  constructor(resend) {\n    this.resend = resend;\n  }\n  async send(payload, options = {}) {\n    return this.create(payload, options);\n  }\n  async create(payload, options = {}) {\n    if (payload.react) {\n      payload.html = await render(payload.react);\n    }\n    const data = await this.resend.post(\n      \"/emails\",\n      parseEmailToApiOptions(payload),\n      options\n    );\n    return data;\n  }\n  async get(id) {\n    const data = await this.resend.get(\n      `/emails/${id}`\n    );\n    return data;\n  }\n  async list(options = {}) {\n    const queryString = buildPaginationQuery(options);\n    const url = queryString ? `/emails?${queryString}` : \"/emails\";\n    const data = await this.resend.get(url);\n    return data;\n  }\n  async update(payload) {\n    const data = await this.resend.patch(\n      `/emails/${payload.id}`,\n      {\n        scheduled_at: payload.scheduledAt\n      }\n    );\n    return data;\n  }\n  async cancel(id) {\n    const data = await this.resend.post(\n      `/emails/${id}/cancel`\n    );\n    return data;\n  }\n};\n\n// src/webhooks/webhooks.ts\nimport { Webhook } from \"svix\";\nvar Webhooks = class {\n  verify(payload) {\n    const webhook = new Webhook(payload.webhookSecret);\n    return webhook.verify(payload.payload, {\n      \"svix-id\": payload.headers.id,\n      \"svix-timestamp\": payload.headers.timestamp,\n      \"svix-signature\": payload.headers.signature\n    });\n  }\n};\n\n// src/resend.ts\nvar defaultBaseUrl = \"https://api.resend.com\";\nvar defaultUserAgent = `resend-node:${version}`;\nvar baseUrl = typeof process !== \"undefined\" && process.env ? process.env.RESEND_BASE_URL || defaultBaseUrl : defaultBaseUrl;\nvar userAgent = typeof process !== \"undefined\" && process.env ? process.env.RESEND_USER_AGENT || defaultUserAgent : defaultUserAgent;\nvar Resend = class {\n  constructor(key) {\n    this.key = key;\n    this.apiKeys = new ApiKeys(this);\n    this.audiences = new Audiences(this);\n    this.batch = new Batch(this);\n    this.broadcasts = new Broadcasts(this);\n    this.contacts = new Contacts(this);\n    this.domains = new Domains(this);\n    this.emails = new Emails(this);\n    this.webhooks = new Webhooks();\n    if (!key) {\n      if (typeof process !== \"undefined\" && process.env) {\n        this.key = process.env.RESEND_API_KEY;\n      }\n      if (!this.key) {\n        throw new Error(\n          'Missing API key. Pass it to the constructor `new Resend(\"re_123\")`'\n        );\n      }\n    }\n    this.headers = new Headers({\n      Authorization: `Bearer ${this.key}`,\n      \"User-Agent\": userAgent,\n      \"Content-Type\": \"application/json\"\n    });\n  }\n  async fetchRequest(path, options = {}) {\n    try {\n      const response = await fetch(`${baseUrl}${path}`, options);\n      if (!response.ok) {\n        try {\n          const rawError = await response.text();\n          return { data: null, error: JSON.parse(rawError) };\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            return {\n              data: null,\n              error: {\n                name: \"application_error\",\n                statusCode: response.status,\n                message: \"Internal server error. We are unable to process your request right now, please try again later.\"\n              }\n            };\n          }\n          const error = {\n            message: response.statusText,\n            statusCode: response.status,\n            name: \"application_error\"\n          };\n          if (err instanceof Error) {\n            return { data: null, error: __spreadProps(__spreadValues({}, error), { message: err.message }) };\n          }\n          return { data: null, error };\n        }\n      }\n      const data = await response.json();\n      return { data, error: null };\n    } catch (e) {\n      return {\n        data: null,\n        error: {\n          name: \"application_error\",\n          statusCode: null,\n          message: \"Unable to fetch data. The request could not be resolved.\"\n        }\n      };\n    }\n  }\n  async post(path, entity, options = {}) {\n    const headers = new Headers(this.headers);\n    if (options.headers) {\n      for (const [key, value] of new Headers(options.headers).entries()) {\n        headers.set(key, value);\n      }\n    }\n    if (options.idempotencyKey) {\n      headers.set(\"Idempotency-Key\", options.idempotencyKey);\n    }\n    const requestOptions = __spreadProps(__spreadValues({\n      method: \"POST\",\n      body: JSON.stringify(entity)\n    }, options), {\n      headers\n    });\n    return this.fetchRequest(path, requestOptions);\n  }\n  async get(path, options = {}) {\n    const headers = new Headers(this.headers);\n    if (options.headers) {\n      for (const [key, value] of new Headers(options.headers).entries()) {\n        headers.set(key, value);\n      }\n    }\n    const requestOptions = __spreadProps(__spreadValues({\n      method: \"GET\"\n    }, options), {\n      headers\n    });\n    return this.fetchRequest(path, requestOptions);\n  }\n  async put(path, entity, options = {}) {\n    const headers = new Headers(this.headers);\n    if (options.headers) {\n      for (const [key, value] of new Headers(options.headers).entries()) {\n        headers.set(key, value);\n      }\n    }\n    const requestOptions = __spreadProps(__spreadValues({\n      method: \"PUT\",\n      body: JSON.stringify(entity)\n    }, options), {\n      headers\n    });\n    return this.fetchRequest(path, requestOptions);\n  }\n  async patch(path, entity, options = {}) {\n    const headers = new Headers(this.headers);\n    if (options.headers) {\n      for (const [key, value] of new Headers(options.headers).entries()) {\n        headers.set(key, value);\n      }\n    }\n    const requestOptions = __spreadProps(__spreadValues({\n      method: \"PATCH\",\n      body: JSON.stringify(entity)\n    }, options), {\n      headers\n    });\n    return this.fetchRequest(path, requestOptions);\n  }\n  async delete(path, query) {\n    const requestOptions = {\n      method: \"DELETE\",\n      body: JSON.stringify(query),\n      headers: this.headers\n    };\n    return this.fetchRequest(path, requestOptions);\n  }\n};\nexport {\n  Resend\n};\n", "/**\n * Resend email service for sending transactional emails\n */\n\nimport { Resend } from 'resend';\nimport { config } from '../../config.js';\nimport { logger } from '../utils/logger.js';\nimport { withRetry } from '../utils/retry.js';\n\nconst resend = new Resend(config.resend.apiKey);\n\n/**\n * Send welcome email to new Notion Marketplace customer\n */\nexport async function sendWelcomeEmail(\n  email: string,\n  name: string,\n  templateName: string\n): Promise<{ id: string }> {\n  logger.info('Sending welcome email', { email, templateName });\n\n  // Validate from email is configured\n  if (!config.resend.fromEmail) {\n    throw new Error('RESEND_FROM_EMAIL environment variable is not set');\n  }\n\n  const emailContent = generateWelcomeEmail(name, templateName);\n\n  return withRetry(async () => {\n    const { data, error } = await resend.emails.send({\n      from: config.resend.fromEmail,\n      to: email,\n      subject: `Welcome! Your ${templateName} is ready`,\n      html: emailContent,\n    });\n\n    if (error) {\n      throw new Error(`Failed to send email: ${error.message}`);\n    }\n\n    logger.info('Welcome email sent', { email, emailId: data?.id });\n    return { id: data!.id };\n  });\n}\n\n/**\n * Generate HTML content for welcome email\n */\nfunction generateWelcomeEmail(name: string, templateName: string): string {\n  const firstName = name.split(' ')[0] || name;\n\n  return `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Welcome to ${templateName}</title>\n</head>\n<body style=\"margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; background-color: #f5f5f5;\">\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"max-width: 600px; margin: 40px auto; background-color: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 8px rgba(0,0,0,0.1);\">\n    <tr>\n      <td style=\"padding: 40px 40px 20px;\">\n        <h1 style=\"margin: 0 0 20px; font-size: 28px; font-weight: 600; color: #000000;\">\n          Thanks for your purchase, ${firstName}! \uD83C\uDF89\n        </h1>\n        <p style=\"margin: 0 0 20px; font-size: 16px; line-height: 1.6; color: #333333;\">\n          We're excited to see you got <strong>${templateName}</strong> from the Notion Marketplace.\n        </p>\n        <p style=\"margin: 0 0 20px; font-size: 16px; line-height: 1.6; color: #333333;\">\n          Your template should already be available in your Notion workspace and ready to use.\n        </p>\n        <p style=\"margin: 0 0 30px; font-size: 16px; line-height: 1.6; color: #333333;\">\n          If you have any questions or need help getting started, feel free to reach out!\n        </p>\n        <p style=\"margin: 0; font-size: 14px; color: #666666;\">\n          Best regards,<br>\n          The Team\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"padding: 20px 40px; background-color: #f9f9f9; border-top: 1px solid #eeeeee;\">\n        <p style=\"margin: 0; font-size: 12px; color: #999999; line-height: 1.5;\">\n          This email was sent because you purchased a template from the Notion Marketplace.\n        </p>\n      </td>\n    </tr>\n  </table>\n</body>\n</html>\n  `.trim();\n}\n", "/**\n * Webhook authentication middleware.\n */\n\nimport type { Context, Next } from 'hono';\nimport { createHmac, timingSafeEqual } from 'crypto';\nimport { config } from '../../config.js';\nimport { logger } from '../utils/logger.js';\n\n/**\n * Verify Slack signature\n */\nexport async function verifySlackSignature(c: Context, next: Next) {\n  const signature = c.req.header('x-slack-signature');\n  const timestamp = c.req.header('x-slack-request-timestamp');\n  const body = await c.req.text();\n\n  if (!signature || !timestamp) {\n    logger.warn('Missing Slack signature headers');\n    return c.json({ error: 'Unauthorized' }, 401);\n  }\n\n  // Check timestamp to prevent replay attacks (5 minutes)\n  const currentTime = Math.floor(Date.now() / 1000);\n  if (Math.abs(currentTime - parseInt(timestamp)) > 300) {\n    logger.warn('Slack request timestamp too old');\n    return c.json({ error: 'Request timestamp too old' }, 401);\n  }\n\n  // Verify signature\n  const sigBasestring = `v0:${timestamp}:${body}`;\n  const hmac = createHmac('sha256', config.slack.signingSecret);\n  hmac.update(sigBasestring);\n  const expectedSignature = `v0=${hmac.digest('hex')}`;\n\n  try {\n    const signatureBuffer = Buffer.from(signature);\n    const expectedBuffer = Buffer.from(expectedSignature);\n\n    if (signatureBuffer.length !== expectedBuffer.length || !timingSafeEqual(signatureBuffer, expectedBuffer)) {\n      logger.warn('Invalid Slack signature');\n      return c.json({ error: 'Invalid signature' }, 401);\n    }\n  } catch (error) {\n    logger.error('Error verifying Slack signature', error);\n    return c.json({ error: 'Invalid signature' }, 401);\n  }\n\n  // Store body for later use\n  c.set('body', body);\n\n  await next();\n}\n\n/**\n * Verify webhook secret via header\n */\nexport function verifyWebhookSecret(secretKey: string) {\n  return async (c: Context, next: Next) => {\n    const providedSecret = c.req.header('x-webhook-secret') || c.req.query('secret');\n\n    if (!providedSecret || providedSecret !== secretKey) {\n      logger.warn('Invalid webhook secret');\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    await next();\n  };\n}\n\n/**\n * Verify Cal.com webhook signature\n */\nexport function verifyCalcomSignature(secret: string) {\n  return async (c: Context, next: Next) => {\n    const signature = c.req.header('x-cal-signature-256');\n    const body = await c.req.text();\n\n    if (!signature) {\n      logger.warn('Missing Cal.com signature');\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const hmac = createHmac('sha256', secret);\n    hmac.update(body);\n    const expectedSignature = hmac.digest('hex');\n\n    if (signature !== expectedSignature) {\n      logger.warn('Invalid Cal.com signature');\n      return c.json({ error: 'Invalid signature' }, 401);\n    }\n\n    // Store body for later use\n    c.set('body', body);\n\n    await next();\n  };\n}\n\n/**\n * Basic auth middleware\n */\nexport function basicAuth(username: string, password: string) {\n  return async (c: Context, next: Next) => {\n    const auth = c.req.header('authorization');\n\n    if (!auth || !auth.startsWith('Basic ')) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const credentials = Buffer.from(auth.slice(6), 'base64').toString();\n    const [user, pass] = credentials.split(':');\n\n    if (user !== username || pass !== password) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    await next();\n  };\n}\n", "/**\n * Lead Management Automation\n *\n * Handles: Email leads \u2192 Notion \u2192 Slack \u2192 Cal.com bookings\n */\n\nimport type { Hono } from 'hono';\nimport type { Automation } from '../../core/types.js';\nimport { config } from './config.js';\nimport { handleGmailWebhook } from './webhooks/gmail.js';\nimport { handleCalcomWebhook } from './webhooks/calcom.js';\nimport { handleSlackInteraction } from './webhooks/slack.js';\nimport { handleTestWebhook } from './webhooks/test.js';\nimport { handleNotionMarketplaceWebhook } from './webhooks/notion-marketplace.js';\nimport { verifyCalcomSignature } from '../../shared/middleware/auth.js';\n\n/**\n * Setup function - registers all routes for this automation\n */\nfunction setup(app: Hono) {\n  const base = '/automations/lead-management';\n\n  // Webhook routes\n  app.post(`${base}/webhooks/gmail`, handleGmailWebhook);\n  app.post(`${base}/webhooks/test`, handleTestWebhook);\n  app.post(`${base}/webhooks/notion-marketplace`, handleNotionMarketplaceWebhook);\n\n  // Cal.com webhook with signature verification\n  if (config.calcomWebhookSecret) {\n    app.post(\n      `${base}/webhooks/calcom`,\n      verifyCalcomSignature(config.calcomWebhookSecret),\n      handleCalcomWebhook\n    );\n  } else {\n    app.post(`${base}/webhooks/calcom`, handleCalcomWebhook);\n  }\n\n  app.post(`${base}/webhooks/slack`, handleSlackInteraction);\n\n  // Health check\n  app.get(`${base}/health`, (c) => {\n    return c.json({\n      automation: 'lead-management',\n      status: 'ok',\n      config: {\n        notionDatabase: config.notionDatabase,\n        slackChannel: config.slackChannel,\n        minimumBudget: config.features.minimumBudget,\n        autoAccept: config.features.autoAccept,\n      },\n      timestamp: new Date().toISOString(),\n    });\n  });\n}\n\n/**\n * Export automation definition\n */\nexport const leadManagementAutomation: Automation = {\n  id: 'lead-management',\n  name: 'Lead Management',\n  description: 'Automated lead processing from email to booking',\n  enabled: process.env.LEAD_ENABLED !== 'false',\n  baseRoute: '/automations/lead-management',\n  setup,\n};\n", "/**\n * Central registry for all automations.\n * Each automation registers itself here.\n */\n\nimport type { Automation } from './types.js';\n\n// Import automations\nimport { leadManagementAutomation } from '../automations/lead-management/index.js';\n// Import other automations as you add them\n// import { invoiceAutomation } from '../automations/invoice-automation.js';\n\n/**\n * Register all automations here.\n * To add a new automation:\n * 1. Create folder in src/automations/\n * 2. Import it here\n * 3. Add to this array\n */\nexport const automations: Automation[] = [\n  leadManagementAutomation,\n  // invoiceAutomation,\n];\n\n/**\n * Get only enabled automations\n */\nexport function getEnabledAutomations(): Automation[] {\n  return automations.filter((a) => a.enabled);\n}\n\n/**\n * Get automation by ID\n */\nexport function getAutomation(id: string): Automation | undefined {\n  return automations.find((a) => a.id === id);\n}\n", "/**\n * Vercel serverless function entry point\n */\n\nimport type { VercelRequest, VercelResponse } from '@vercel/node';\nimport app from '../src/app.js';\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  const request = new Request(new URL(req.url || '/', `https://${req.headers.host}`), {\n    method: req.method,\n    headers: req.headers as any,\n    body: req.method !== 'GET' && req.method !== 'HEAD' ? JSON.stringify(req.body) : undefined,\n  });\n\n  const response = await app.fetch(request);\n\n  res.status(response.status);\n  response.headers.forEach((value, key) => {\n    res.setHeader(key, value);\n  });\n\n  const text = await response.text();\n  res.send(text);\n}\n"],
  "mappings": "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",
  "names": ["log", "error", "logger", "error", "logger", "logger", "version", "URL", "crypto", "crypto", "crypto", "HttpMethod", "init", "AppPortalCapability", "BackgroundTaskStatus", "BackgroundTaskType", "ConnectorKind", "type", "config", "type", "config", "MessageStatus", "MessageStatusText", "MessageAttemptTriggerType", "timingSafeEqual", "Coder", "v1", "v3", "URLSafeCoder", "exports", "Hash", "HMAC", "hmac", "info", "Webhook", "version", "EndpointDisabledTrigger", "Ordering", "StatusCodeClass", "baseUrl", "handler", "match", "raw", "handler", "app", "handler", "init", "handler", "Node", "handler", "Node", "handler", "Hono", "process", "logger2", "config", "logger", "captureException", "error", "captureMessage", "setUser", "addBreadcrumb", "logger", "match", "match", "logger", "config", "logger", "config", "logger", "config", "logger", "error", "config", "logger", "config", "sendMessage", "logger", "error", "logger", "logger", "config", "logger", "error", "logger", "error", "error", "logger", "__defProp", "__hasOwnProp", "version", "resend", "error", "logger", "error", "logger", "error", "logger", "app", "config", "Hono", "enabledAutomations", "logger"]
}
